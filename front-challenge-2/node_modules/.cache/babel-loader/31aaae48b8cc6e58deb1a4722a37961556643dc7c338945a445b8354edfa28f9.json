{"ast":null,"code":"/*\nCopyright (c) 2019 Daybrush\nname: react-moveable\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/moveable/blob/master/packages/react-moveable\nversion: 0.33.0\n*/\nimport getAgent from '@egjs/agent';\nimport { prefixNames, ref, refs, prefixCSS, withMethods } from 'framework-utils';\nimport { throttle, getRad, hasClass, isObject, TINY_NUM as TINY_NUM$1, average, getDist as getDist$1, findIndex, throttleArray, isArray, splitSpace, splitUnit, getShapeDirection, isUndefined, isString, isFunction, convertUnitSize, calculateBoundSize, isNumber, dot, addClass, requestAnimationFrame, removeClass, splitBracket, splitComma, removeEvent, cancelAnimationFrame, getKeys, addEvent } from '@daybrush/utils';\nimport { minus, plus, rotate, calculate, convertPositionMatrix, invert, fromTranslation, multiply, convertDimension, createScaleMatrix, convertMatrixtoCSS, multiplies, createOriginMatrix, createIdentityMatrix, ignoreDimension, convertCSStoMatrix, getOrigin, createRotateMatrix, createWarpMatrix } from '@scena/matrix';\nimport { parse, parseMat, calculateMatrixDist, toMat } from 'css-to-mat';\nimport ChildrenDiffer, { diff } from '@egjs/children-differ';\nimport { getMinMaxs, fitPoints, getOverlapSize, getAreaSize, isInside } from 'overlap-area';\nimport DragScroll from '@scena/dragscroll';\nimport * as React from 'react';\nimport { createElement } from 'react';\nimport Gesto from 'gesto';\nimport styled from 'react-css-styled';\nimport EventEmitter from '@scena/event-emitter';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction makeAble(name, able) {\n  var _a;\n  return __assign({\n    events: {},\n    props: (_a = {}, _a[name] = Boolean, _a),\n    name: name\n  }, able);\n}\nfunction getSVGCursor(scale, degree) {\n  return \"data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\".concat(32 * scale, \"px\\\" height=\\\"\").concat(32 * scale, \"px\\\" viewBox=\\\"0 0 32 32\\\" ><path d=\\\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"1.2\\\" fill=\\\"black\\\" stroke=\\\"white\\\" style=\\\"transform:rotate(\").concat(degree, \"deg);transform-origin: 16px 16px\\\"></path></svg>\");\n}\nfunction getCursorCSS(degree) {\n  var x1 = getSVGCursor(1, degree); // const x2 = getSVGCursor(2, degree);\n\n  var degree45 = Math.round(degree / 45) * 45 % 180;\n  var defaultCursor = \"ns-resize\";\n  if (degree45 === 135) {\n    defaultCursor = \"nwse-resize\";\n  } else if (degree45 === 45) {\n    defaultCursor = \"nesw-resize\";\n  } else if (degree45 === 90) {\n    defaultCursor = \"ew-resize\";\n  } // tslint:disable-next-line: max-line-length\n\n  return \"cursor:\".concat(defaultCursor, \";cursor: url('\").concat(x1, \"') 16 16, \").concat(defaultCursor, \";\");\n}\nvar agent = getAgent();\nvar IS_WEBKIT = agent.browser.webkit;\nvar IS_WEBKIT605 = IS_WEBKIT && function () {\n  var navi = typeof window === \"undefined\" ? {\n    userAgent: \"\"\n  } : window.navigator;\n  var res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\n  return res ? parseFloat(res[1]) < 605 : false;\n}();\nvar PREFIX = \"moveable-\";\nvar MOVEABLE_CSS = \"\\n{\\n\\tposition: absolute;\\n\\twidth: 1px;\\n\\theight: 1px;\\n\\tleft: 0;\\n\\ttop: 0;\\n    z-index: 3000;\\n    --moveable-color: #4af;\\n    --zoom: 1;\\n    --zoompx: 1px;\\n    will-change: transform;\\n}\\n.control-box {\\n    z-index: 0;\\n}\\n.line, .control {\\n    position: absolute;\\n\\tleft: 0;\\n    top: 0;\\n    will-change: transform;\\n}\\n.control {\\n\\twidth: 14px;\\n\\theight: 14px;\\n\\tborder-radius: 50%;\\n\\tborder: 2px solid #fff;\\n\\tbox-sizing: border-box;\\n    background: #4af;\\n    background: var(--moveable-color);\\n\\tmargin-top: -7px;\\n    margin-left: -7px;\\n    border: 2px solid #fff;\\n    z-index: 10;\\n}\\n.padding {\\n    position: absolute;\\n    top: 0px;\\n    left: 0px;\\n    width: 100px;\\n    height: 100px;\\n    transform-origin: 0 0;\\n}\\n.line {\\n\\twidth: 1px;\\n    height: 1px;\\n    background: #4af;\\n    background: var(--moveable-color);\\n\\ttransform-origin: 0px 50%;\\n}\\n.line.dashed {\\n    box-sizing: border-box;\\n    background: transparent;\\n}\\n.line.dashed.horizontal {\\n    border-top: 1px dashed #4af;\\n    border-top-color: #4af;\\n    border-top-color: var(--moveable-color);\\n}\\n.line.dashed.vertical {\\n    border-left: 1px dashed #4af;\\n    border-left-color: #4af;\\n    border-left-color: var(--moveable-color);\\n}\\n.line.vertical {\\n    transform: translateX(-50%);\\n}\\n.line.horizontal {\\n    transform: translateY(-50%);\\n}\\n.line.vertical.bold {\\n    width: 2px;\\n}\\n.line.horizontal.bold {\\n    height: 2px;\\n}\\n\\n.control.origin {\\n\\tborder-color: #f55;\\n\\tbackground: #fff;\\n\\twidth: 12px;\\n\\theight: 12px;\\n\\tmargin-top: -6px;\\n    margin-left: -6px;\\n\\tpointer-events: none;\\n}\\n\".concat([0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(function (degree) {\n  return \"\\n.direction[data-rotation=\\\"\".concat(degree, \"\\\"] {\\n\\t\").concat(getCursorCSS(degree), \"\\n}\\n\");\n}).join(\"\\n\"), \"\\n.group {\\n    z-index: -1;\\n}\\n.area {\\n    position: absolute;\\n}\\n.area-pieces {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    display: none;\\n}\\n.area.avoid, .area.pass {\\n    pointer-events: none;\\n}\\n.area.avoid+.area-pieces {\\n    display: block;\\n}\\n.area-piece {\\n    position: absolute;\\n}\\n\\n\").concat(IS_WEBKIT605 ? \":global svg *:before {\\n\\tcontent:\\\"\\\";\\n\\ttransform-origin: inherit;\\n}\" : \"\", \"\\n\");\nvar NEARBY_POS = [[0, 1, 2], [1, 0, 3], [2, 0, 3], [3, 1, 2]];\nvar FLOAT_POINT_NUM = 0.0001;\nvar TINY_NUM = 0.0000001;\nvar MIN_SCALE = 0.000000001;\nvar MAX_NUM = Math.pow(10, 10);\nvar MIN_NUM = -MAX_NUM;\nvar DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\nvar DIRECTION_INDEXES = {\n  n: [0, 1],\n  s: [2, 3],\n  w: [2, 0],\n  e: [1, 3],\n  nw: [0],\n  ne: [1],\n  sw: [2],\n  se: [3]\n};\nvar DIRECTION_ROTATIONS = {\n  n: 0,\n  s: 180,\n  w: 270,\n  e: 90,\n  nw: 315,\n  ne: 45,\n  sw: 225,\n  se: 135\n};\nvar MOVEABLE_METHODS = [\"isMoveableElement\", \"updateRect\", \"updateTarget\", \"destroy\", \"dragStart\", \"isInside\", \"hitTest\", \"setState\", \"getRect\", \"request\", \"isDragging\", \"getManager\", \"forceUpdate\"];\nfunction setCustomDrag(e, state, delta, isPinch, isConvert) {\n  var result = state.gesto.move(delta, e.inputEvent);\n  var datas = result.originalDatas || result.datas;\n  var draggableDatas = datas.draggable || (datas.draggable = {});\n  return __assign(__assign({}, isConvert ? convertDragDist(state, result) : result), {\n    isPinch: !!isPinch,\n    parentEvent: true,\n    datas: draggableDatas,\n    originalDatas: e.originalDatas\n  });\n}\nvar CustomGesto = /*#__PURE__*/\nfunction () {\n  function CustomGesto() {\n    this.prevX = 0;\n    this.prevY = 0;\n    this.startX = 0;\n    this.startY = 0;\n    this.isDrag = false;\n    this.isFlag = false;\n    this.datas = {\n      draggable: {}\n    };\n  }\n  var __proto = CustomGesto.prototype;\n  __proto.dragStart = function (client, e) {\n    this.isDrag = false;\n    this.isFlag = false;\n    var originalDatas = e.originalDatas;\n    this.datas = originalDatas;\n    if (!originalDatas.draggable) {\n      originalDatas.draggable = {};\n    }\n    return __assign(__assign({}, this.move(client, e.inputEvent)), {\n      type: \"dragstart\"\n    });\n  };\n  __proto.drag = function (client, inputEvent) {\n    return this.move([client[0] - this.prevX, client[1] - this.prevY], inputEvent);\n  };\n  __proto.move = function (delta, inputEvent) {\n    var clientX;\n    var clientY;\n    if (!this.isFlag) {\n      this.prevX = delta[0];\n      this.prevY = delta[1];\n      this.startX = delta[0];\n      this.startY = delta[1];\n      clientX = delta[0];\n      clientY = delta[1];\n      this.isFlag = true;\n    } else {\n      clientX = this.prevX + delta[0];\n      clientY = this.prevY + delta[1];\n      if (delta[0] || delta[1]) {\n        this.isDrag = true;\n      }\n    }\n    this.prevX = clientX;\n    this.prevY = clientY;\n    return {\n      type: \"drag\",\n      clientX: clientX,\n      clientY: clientY,\n      inputEvent: inputEvent,\n      isDrag: this.isDrag,\n      distX: clientX - this.startX,\n      distY: clientY - this.startY,\n      deltaX: delta[0],\n      deltaY: delta[1],\n      datas: this.datas.draggable,\n      originalDatas: this.datas,\n      parentEvent: true,\n      parentGesto: this\n    };\n  };\n  return CustomGesto;\n}();\nfunction fillChildEvents(moveable, name, e) {\n  var datas = e.originalDatas;\n  datas.groupable = datas.groupable || {};\n  var groupableDatas = datas.groupable;\n  groupableDatas.childDatas = groupableDatas.childDatas || [];\n  var childDatas = groupableDatas.childDatas;\n  return moveable.moveables.map(function (_, i) {\n    childDatas[i] = childDatas[i] || {};\n    childDatas[i][name] = childDatas[i][name] || {};\n    return __assign(__assign({}, e), {\n      datas: childDatas[i][name],\n      originalDatas: childDatas[i]\n    });\n  });\n}\nfunction triggerChildGesto(moveable, able, type, delta, e, isConvert) {\n  var isStart = !!type.match(/Start$/g);\n  var isEnd = !!type.match(/End$/g);\n  var isPinch = e.isPinch;\n  var datas = e.datas;\n  var events = fillChildEvents(moveable, able.name, e);\n  var moveables = moveable.moveables;\n  var childs = events.map(function (ev, i) {\n    var childMoveable = moveables[i];\n    var state = childMoveable.state;\n    var childEvent = ev;\n    if (isStart) {\n      childEvent = new CustomGesto().dragStart(delta, ev);\n    } else {\n      if (!state.gesto) {\n        state.gesto = datas.childGestos[i];\n      }\n      if (!state.gesto) {\n        return;\n      }\n      childEvent = setCustomDrag(ev, state, delta, isPinch, isConvert);\n    }\n    var result = able[type](childMoveable, __assign(__assign({}, childEvent), {\n      parentFlag: true\n    }));\n    if (isEnd) {\n      state.gesto = null;\n    }\n    return result;\n  });\n  if (isStart) {\n    datas.childGestos = moveables.map(function (child) {\n      return child.state.gesto;\n    });\n  }\n  return childs;\n}\nfunction triggerChildAbles(moveable, able, type, e, eachEvent, callback) {\n  if (eachEvent === void 0) {\n    eachEvent = function (_, ev) {\n      return ev;\n    };\n  }\n  var isEnd = !!type.match(/End$/g);\n  var events = fillChildEvents(moveable, able.name, e);\n  var moveables = moveable.moveables;\n  var childs = events.map(function (ev, i) {\n    var childMoveable = moveables[i];\n    var childEvent = ev;\n    childEvent = eachEvent(childMoveable, ev);\n    var result = able[type](childMoveable, __assign(__assign({}, childEvent), {\n      parentFlag: true\n    }));\n    result && callback && callback(childMoveable, ev, result, i);\n    if (isEnd) {\n      childMoveable.state.gesto = null;\n    }\n    return result;\n  });\n  return childs;\n}\nfunction renderDirectionControls(moveable, defaultDirections, React, additionalClassName) {\n  if (additionalClassName === void 0) {\n    additionalClassName = \"\";\n  }\n  var _a = moveable.state,\n    renderPoses = _a.renderPoses,\n    rotationRad = _a.rotation,\n    direction = _a.direction;\n  var _b = moveable.props,\n    _c = _b.renderDirections,\n    directions = _c === void 0 ? defaultDirections : _c,\n    zoom = _b.zoom;\n  var directionMap = {};\n  if (!directions) {\n    return [];\n  }\n  var sign = direction > 0 ? 1 : -1;\n  var renderDirections = directions === true ? DIRECTIONS : directions;\n  var degRotation = rotationRad / Math.PI * 180;\n  renderDirections.forEach(function (dir) {\n    directionMap[dir] = true;\n  });\n  return renderDirections.map(function (dir) {\n    var indexes = DIRECTION_INDEXES[dir];\n    if (!indexes || !directionMap[dir]) {\n      return null;\n    }\n    var directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n    return React.createElement(\"div\", {\n      className: prefix(\"control\", \"direction\", dir, additionalClassName),\n      \"data-rotation\": directionRotation,\n      \"data-direction\": dir,\n      key: \"direction-\".concat(dir),\n      style: getControlTransform.apply(void 0, __spreadArray([rotationRad, zoom], indexes.map(function (index) {\n        return renderPoses[index];\n      }), false))\n    });\n  });\n}\nfunction renderLine(React, direction, pos1, pos2, zoom, key) {\n  var classNames = [];\n  for (var _i = 6; _i < arguments.length; _i++) {\n    classNames[_i - 6] = arguments[_i];\n  }\n  var rad = getRad(pos1, pos2);\n  var rotation = direction ? throttle(rad / Math.PI * 180, 15) % 180 : -1;\n  return React.createElement(\"div\", {\n    key: \"line\".concat(key),\n    className: prefix.apply(void 0, __spreadArray([\"line\", \"direction\", direction], classNames, false)),\n    \"data-rotation\": rotation,\n    \"data-line-index\": key,\n    \"data-direction\": direction,\n    style: getLineStyle(pos1, pos2, zoom, rad)\n  });\n}\nfunction renderAllDirections(moveable, React) {\n  return renderDirectionControls(moveable, DIRECTIONS, React);\n}\nfunction renderDiagonalDirections(moveable, React) {\n  return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], React);\n}\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(moveable, datas, clientX, clientY, origin, rect) {\n  var n = moveable.state.is3d ? 4 : 3;\n  var nextOrigin = calculatePosition(moveable.state.rootMatrix, origin, n);\n  var startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n  datas.startAbsoluteOrigin = startAbsoluteOrigin;\n  datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n  datas.defaultDeg = datas.prevDeg;\n  datas.prevSnapDeg = 0;\n  datas.loop = 0;\n}\nfunction getAbsoluteDist(deg, direction, datas) {\n  var defaultDeg = datas.defaultDeg,\n    prevDeg = datas.prevDeg;\n  var normalizedPrevDeg = prevDeg % 360;\n  var loop = Math.floor(prevDeg / 360);\n  if (normalizedPrevDeg < 0) {\n    normalizedPrevDeg += 360;\n  }\n  if (normalizedPrevDeg > deg && normalizedPrevDeg > 270 && deg < 90) {\n    // 360 => 0\n    ++loop;\n  } else if (normalizedPrevDeg < deg && normalizedPrevDeg < 90 && deg > 270) {\n    // 0 => 360\n    --loop;\n  }\n  var dist = direction * (loop * 360 + deg - defaultDeg);\n  datas.prevDeg = defaultDeg + dist;\n  return dist;\n}\nfunction getAbsoluteDistByClient(clientX, clientY, direction, datas) {\n  return getAbsoluteDist(getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180, direction, datas);\n}\nfunction getRotateInfo(moveable, moveableRect, datas, dist, startValue, isSnap) {\n  var _a = moveable.props.throttleRotate,\n    throttleRotate = _a === void 0 ? 0 : _a;\n  var nextDist = dist;\n  var prevSnapDeg = datas.prevSnapDeg;\n  if (isSnap) {\n    nextDist = checkSnapRotate(moveable, moveableRect, datas.origin, nextDist);\n  }\n  var snapRotation = throttle(startValue + nextDist, throttleRotate);\n  var snapDeg = snapRotation - startValue;\n  datas.prevSnapDeg = snapDeg;\n  return [snapDeg - prevSnapDeg, nextDist, snapRotation];\n}\nfunction getRotationPositions(rotationPosition, _a, direction) {\n  var pos1 = _a[0],\n    pos2 = _a[1],\n    pos3 = _a[2],\n    pos4 = _a[3];\n  if (rotationPosition === \"none\") {\n    return;\n  }\n  var _b = (rotationPosition || \"top\").split(\"-\"),\n    dir1 = _b[0],\n    dir2 = _b[1];\n  var radPoses = [pos1, pos2]; // if (scale[0] < 0) {\n  //     dir1 = getReversePositionX(dir1);\n  //     dir2 = getReversePositionX(dir2);\n  // }\n  // if (scale[1] < 0) {\n  //     dir1 = getReversePositionY(dir1);\n  //     dir2 = getReversePositionY(dir2);\n  // }\n\n  if (dir1 === \"left\") {\n    radPoses = [pos3, pos1];\n  } else if (dir1 === \"right\") {\n    radPoses = [pos2, pos4];\n  } else if (dir1 === \"bottom\") {\n    radPoses = [pos4, pos3];\n  }\n  var pos = [(radPoses[0][0] + radPoses[1][0]) / 2, (radPoses[0][1] + radPoses[1][1]) / 2];\n  var rad = getRotationRad(radPoses, direction);\n  if (dir2) {\n    var isStart = dir2 === \"top\" || dir2 === \"left\";\n    var isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n    pos = radPoses[isStart && !isReverse || !isStart && isReverse ? 0 : 1];\n  }\n  return [pos, rad];\n}\nfunction dragControlCondition(moveable, e) {\n  if (e.isRequest) {\n    return e.requestAble === \"rotatable\";\n  }\n  var target = e.inputEvent.target;\n  if (hasClass(target, prefix(\"rotation-control\"))) {\n    return true;\n  }\n  var rotationTarget = moveable.props.rotationTarget;\n  if (rotationTarget) {\n    return getRefTargets(rotationTarget, true).some(function (element) {\n      if (!element) {\n        return false;\n      }\n      return target === element || target.contains(element);\n    });\n  }\n  return false;\n}\nvar Rotatable = {\n  name: \"rotatable\",\n  canPinch: true,\n  props: {\n    rotatable: Boolean,\n    rotationPosition: String,\n    throttleRotate: Number,\n    renderDirections: Object,\n    rotationTarget: Object\n  },\n  events: {\n    onRotateStart: \"rotateStart\",\n    onBeforeRotate: \"beforeRotate\",\n    onRotate: \"rotate\",\n    onRotateEnd: \"rotateEnd\",\n    onRotateGroupStart: \"rotateGroupStart\",\n    onBeforeRotateGroup: \"beforeRotateGroup\",\n    onRotateGroup: \"rotateGroup\",\n    onRotateGroupEnd: \"rotateGroupEnd\"\n  },\n  css: [\".rotation {\\n            position: absolute;\\n            height: 40px;\\n            width: 1px;\\n            transform-origin: 50% 100%;\\n            height: calc(40px * var(--zoom));\\n            top: auto;\\n            left: 0;\\n            bottom: 100%;\\n            will-change: transform;\\n        }\\n        .rotation .rotation-line {\\n            display: block;\\n            width: 100%;\\n            height: 100%;\\n            transform-origin: 50% 50%;\\n        }\\n        .rotation .rotation-control {\\n            border-color: #4af;\\n            border-color: var(--moveable-color);\\n            background:#fff;\\n            cursor: alias;\\n        }\"],\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      rotatable = _a.rotatable,\n      rotationPosition = _a.rotationPosition,\n      zoom = _a.zoom,\n      renderDirections = _a.renderDirections;\n    var _b = moveable.state,\n      renderPoses = _b.renderPoses,\n      direction = _b.direction;\n    if (!rotatable) {\n      return null;\n    }\n    var positions = getRotationPositions(rotationPosition, renderPoses, direction);\n    var jsxs = [];\n    if (positions) {\n      var pos = positions[0],\n        rad = positions[1];\n      jsxs.push(React.createElement(\"div\", {\n        key: \"rotation\",\n        className: prefix(\"rotation\"),\n        style: {\n          // tslint:disable-next-line: max-line-length\n          transform: \"translate(-50%) translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) rotate(\").concat(rad, \"rad)\")\n        }\n      }, React.createElement(\"div\", {\n        className: prefix(\"line rotation-line\"),\n        style: {\n          transform: \"scaleX(\".concat(zoom, \")\")\n        }\n      }), React.createElement(\"div\", {\n        className: prefix(\"control rotation-control\"),\n        style: {\n          transform: \"translate(0.5px) scale(\".concat(zoom, \")\")\n        }\n      })));\n    }\n    if (renderDirections) {\n      jsxs.push.apply(jsxs, renderDirectionControls(moveable, [], React));\n    }\n    return jsxs;\n  },\n  dragControlCondition: dragControlCondition,\n  dragControlStart: function (moveable, e) {\n    var datas = e.datas,\n      clientX = e.clientX,\n      clientY = e.clientY,\n      parentRotate = e.parentRotate,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      isRequest = e.isRequest;\n    var _a = moveable.state,\n      target = _a.target,\n      left = _a.left,\n      top = _a.top,\n      origin = _a.origin,\n      beforeOrigin = _a.beforeOrigin,\n      direction = _a.direction,\n      beforeDirection = _a.beforeDirection,\n      targetTransform = _a.targetTransform,\n      moveableClientRect = _a.moveableClientRect;\n    if (!isRequest && !target) {\n      return false;\n    }\n    var rect = moveable.getRect();\n    datas.rect = rect;\n    datas.transform = targetTransform;\n    datas.left = left;\n    datas.top = top;\n    datas.fixedPosition = getDirectionOffset(moveable, getOriginDirection(moveable));\n    if (isRequest || isPinch || parentFlag) {\n      var externalRotate = parentRotate || 0;\n      datas.beforeInfo = {\n        origin: rect.beforeOrigin,\n        prevDeg: externalRotate,\n        defaultDeg: externalRotate,\n        prevSnapDeg: 0\n      };\n      datas.afterInfo = __assign(__assign({}, datas.beforeInfo), {\n        origin: rect.origin\n      });\n      datas.absoluteInfo = __assign(__assign({}, datas.beforeInfo), {\n        origin: rect.origin,\n        startValue: externalRotate\n      });\n    } else {\n      datas.beforeInfo = {\n        origin: rect.beforeOrigin\n      };\n      datas.afterInfo = {\n        origin: rect.origin\n      };\n      datas.absoluteInfo = {\n        origin: rect.origin,\n        startValue: rect.rotation\n      };\n      setRotateStartInfo(moveable, datas.beforeInfo, clientX, clientY, beforeOrigin, moveableClientRect);\n      setRotateStartInfo(moveable, datas.afterInfo, clientX, clientY, origin, moveableClientRect);\n      setRotateStartInfo(moveable, datas.absoluteInfo, clientX, clientY, origin, moveableClientRect);\n    }\n    datas.direction = direction;\n    datas.beforeDirection = beforeDirection;\n    datas.startValue = 0;\n    datas.datas = {};\n    setDefaultTransformIndex(e, \"rotate\");\n    var params = fillParams(moveable, e, __assign(__assign({\n      set: function (rotatation) {\n        datas.startValue = rotatation * Math.PI / 180;\n      }\n    }, fillTransformStartEvent(e)), {\n      dragStart: Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e))\n    }));\n    var result = triggerEvent(moveable, \"onRotateStart\", params);\n    datas.isRotate = result !== false;\n    moveable.state.snapRenderInfo = {\n      request: e.isRequest\n    };\n    return datas.isRotate ? params : false;\n  },\n  dragControl: function (moveable, e) {\n    var _a, _b, _c;\n    var datas = e.datas,\n      clientX = e.clientX,\n      clientY = e.clientY,\n      parentRotate = e.parentRotate,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      groupDelta = e.groupDelta;\n    var beforeDirection = datas.beforeDirection,\n      beforeInfo = datas.beforeInfo,\n      afterInfo = datas.afterInfo,\n      absoluteInfo = datas.absoluteInfo,\n      isRotate = datas.isRotate,\n      startValue = datas.startValue,\n      rect = datas.rect;\n    if (!isRotate) {\n      return;\n    }\n    resolveTransformEvent(e, \"rotate\");\n    var targetDirection = getTransformDirection(e);\n    var direction = beforeDirection * targetDirection;\n    var parentMoveable = moveable.props.parentMoveable;\n    var beforeDelta = 0;\n    var beforeDist;\n    var beforeRotation;\n    var delta = 0;\n    var dist;\n    var rotation;\n    var absoluteDelta = 0;\n    var absoluteDist;\n    var absoluteRotation;\n    var startRotation = 180 / Math.PI * startValue;\n    var absoluteStartRotation = absoluteInfo.startValue;\n    var isSnap = false;\n    if (!parentFlag && \"parentDist\" in e) {\n      var parentDist = e.parentDist;\n      beforeDist = parentDist;\n      dist = parentDist;\n      absoluteDist = parentDist;\n    } else if (isPinch || parentFlag) {\n      beforeDist = getAbsoluteDist(parentRotate, beforeDirection, beforeInfo);\n      dist = getAbsoluteDist(parentRotate, direction, afterInfo);\n      absoluteDist = getAbsoluteDist(parentRotate, direction, absoluteInfo);\n    } else {\n      beforeDist = getAbsoluteDistByClient(clientX, clientY, beforeDirection, beforeInfo);\n      dist = getAbsoluteDistByClient(clientX, clientY, direction, afterInfo);\n      absoluteDist = getAbsoluteDistByClient(clientX, clientY, direction, absoluteInfo);\n      isSnap = true;\n    }\n    beforeRotation = startRotation + beforeDist;\n    rotation = startRotation + dist;\n    absoluteRotation = absoluteStartRotation + absoluteDist;\n    triggerEvent(moveable, \"onBeforeRotate\", fillParams(moveable, e, {\n      beforeRotation: beforeRotation,\n      rotation: rotation,\n      absoluteRotation: absoluteRotation,\n      setRotation: function (nextRotation) {\n        dist = nextRotation - startRotation;\n        beforeDist = dist;\n        absoluteDist = dist;\n      }\n    }, true));\n    _a = getRotateInfo(moveable, rect, beforeInfo, beforeDist, startRotation, isSnap), beforeDelta = _a[0], beforeDist = _a[1], beforeRotation = _a[2];\n    _b = getRotateInfo(moveable, rect, afterInfo, dist, startRotation, isSnap), delta = _b[0], dist = _b[1], rotation = _b[2];\n    _c = getRotateInfo(moveable, rect, absoluteInfo, absoluteDist, absoluteStartRotation, isSnap), absoluteDelta = _c[0], absoluteDist = _c[1], absoluteRotation = _c[2];\n    if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n      return;\n    }\n    var nextTransform = convertTransformFormat(datas, \"rotate(\".concat(rotation, \"deg)\"), \"rotate(\".concat(dist, \"deg)\"));\n    var inverseDist = getRotateDist(moveable, dist, datas.fixedPosition, datas);\n    var inverseDelta = minus(plus(groupDelta || [0, 0], inverseDist), datas.prevInverseDist || [0, 0]);\n    datas.prevInverseDist = inverseDist;\n    datas.requestValue = null;\n    var params = fillParams(moveable, e, __assign({\n      delta: delta,\n      dist: dist,\n      rotate: rotation,\n      rotation: rotation,\n      beforeDist: beforeDist,\n      beforeDelta: beforeDelta,\n      beforeRotate: beforeRotation,\n      beforeRotation: beforeRotation,\n      absoluteDist: absoluteDist,\n      absoluteDelta: absoluteDelta,\n      absoluteRotate: absoluteRotation,\n      absoluteRotation: absoluteRotation,\n      isPinch: !!isPinch\n    }, fillTransformEvent(moveable, nextTransform, inverseDelta, isPinch, e)));\n    triggerEvent(moveable, \"onRotate\", params);\n    return params;\n  },\n  dragControlAfter: function (moveable, e) {\n    e.datas.requestValue;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isRotate) {\n      return;\n    }\n    datas.isRotate = false;\n    var params = fillEndParams(moveable, e, {});\n    triggerEvent(moveable, \"onRotateEnd\", params);\n    return params;\n  },\n  dragGroupControlCondition: dragControlCondition,\n  dragGroupControlStart: function (moveable, e) {\n    var datas = e.datas;\n    var _a = moveable.state,\n      parentLeft = _a.left,\n      parentTop = _a.top,\n      parentBeforeOrigin = _a.beforeOrigin;\n    var params = this.dragControlStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    params.set(datas.beforeDirection * moveable.rotation);\n    var events = triggerChildAbles(moveable, this, \"dragControlStart\", e, function (child, ev) {\n      var _a = child.state,\n        left = _a.left,\n        top = _a.top,\n        beforeOrigin = _a.beforeOrigin;\n      var childClient = plus(minus([left, top], [parentLeft, parentTop]), minus(beforeOrigin, parentBeforeOrigin));\n      ev.datas.groupClient = childClient;\n      return __assign(__assign({}, ev), {\n        parentRotate: 0\n      });\n    });\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events\n    });\n    var result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n    datas.isRotate = result !== false;\n    return datas.isRotate ? params : false;\n  },\n  dragGroupControl: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isRotate) {\n      return;\n    }\n    catchEvent(moveable, \"onBeforeRotate\", function (parentEvent) {\n      triggerEvent(moveable, \"onBeforeRotateGroup\", fillParams(moveable, e, __assign(__assign({}, parentEvent), {\n        targets: moveable.props.targets\n      }), true));\n    });\n    var params = this.dragControl(moveable, e);\n    if (!params) {\n      return;\n    }\n    var direction = datas.beforeDirection;\n    var parentRotate = params.beforeDist;\n    var deg = params.beforeDelta;\n    var rad = deg / 180 * Math.PI;\n    var events = triggerChildAbles(moveable, this, \"dragControl\", e, function (_, ev) {\n      var _a = ev.datas.groupClient,\n        prevX = _a[0],\n        prevY = _a[1];\n      var _b = rotate([prevX, prevY], rad * direction),\n        clientX = _b[0],\n        clientY = _b[1];\n      var delta = [clientX - prevX, clientY - prevY];\n      ev.datas.groupClient = [clientX, clientY];\n      return __assign(__assign({}, ev), {\n        parentRotate: parentRotate,\n        groupDelta: delta\n      });\n    });\n    moveable.rotation = direction * params.beforeRotation;\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events,\n      set: function (rotation) {\n        moveable.rotation = rotation;\n      },\n      setGroupRotation: function (rotation) {\n        moveable.rotation = rotation;\n      }\n    }, params);\n    triggerEvent(moveable, \"onRotateGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isRotate) {\n      return;\n    }\n    this.dragControlEnd(moveable, e);\n    var events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n    var nextParams = fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    });\n    triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n    return isDrag;\n  },\n  /**\n   * @method Moveable.Rotatable#request\n   * @param {object} [e] - the Resizable's request parameter\n   * @param {number} [e.deltaRotate=0] -  delta number of rotation\n   * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n   * @return {Moveable.Requester} Moveable Requester\n   * @example\n    * // Instantly Request (requestStart - request - requestEnd)\n   * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n   *\n   * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n   *\n   * // requestStart\n   * const requester = moveable.request(\"rotatable\");\n   *\n   * // request\n   * requester.request({ deltaRotate: 10 });\n   * requester.request({ deltaRotate: 10 });\n   * requester.request({ deltaRotate: 10 });\n   *\n   * requester.request({ rotate: 10 });\n   * requester.request({ rotate: 20 });\n   * requester.request({ rotate: 30 });\n   *\n   * // requestEnd\n   * requester.requestEnd();\n   */\n  request: function (moveable) {\n    var datas = {};\n    var distRotate = 0;\n    var startRotation = moveable.getRotation();\n    return {\n      isControl: true,\n      requestStart: function () {\n        return {\n          datas: datas\n        };\n      },\n      request: function (e) {\n        if (\"deltaRotate\" in e) {\n          distRotate += e.deltaRotate;\n        } else if (\"rotate\" in e) {\n          distRotate = e.rotate - startRotation;\n        }\n        return {\n          datas: datas,\n          parentDist: distRotate\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  }\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n\nvar VERTICAL_NAMES = [\"left\", \"right\", \"center\"];\nvar HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"];\nvar VERTICAL_NAMES_MAP = {\n  start: \"left\",\n  end: \"right\",\n  center: \"center\"\n};\nvar HORIZONTAL_NAMES_MAP = {\n  start: \"top\",\n  end: \"bottom\",\n  center: \"middle\"\n};\nfunction hasGuidelines(moveable, ableName) {\n  var _a = moveable.props,\n    snappable = _a.snappable,\n    bounds = _a.bounds,\n    innerBounds = _a.innerBounds,\n    verticalGuidelines = _a.verticalGuidelines,\n    horizontalGuidelines = _a.horizontalGuidelines,\n    snapGridWidth = _a.snapGridWidth,\n    snapGridHeight = _a.snapGridHeight,\n    _b = moveable.state,\n    guidelines = _b.guidelines,\n    enableSnap = _b.enableSnap;\n  if (!snappable || !enableSnap || ableName && snappable !== true && snappable.indexOf(ableName) < 0) {\n    return false;\n  }\n  if (snapGridWidth || snapGridHeight || bounds || innerBounds || guidelines && guidelines.length || verticalGuidelines && verticalGuidelines.length || horizontalGuidelines && horizontalGuidelines.length) {\n    return true;\n  }\n  return false;\n}\nfunction getSnapDirections(snapDirections) {\n  if (snapDirections === false) {\n    return {};\n  } else if (snapDirections === true || !snapDirections) {\n    return {\n      left: true,\n      right: true,\n      top: true,\n      bottom: true\n    };\n  }\n  return snapDirections;\n}\nfunction mapSnapDirectionPoses(snapDirections, snapPoses) {\n  var nextSnapDirections = getSnapDirections(snapDirections);\n  var nextSnapPoses = {};\n  for (var name in nextSnapDirections) {\n    if (name in snapPoses && nextSnapDirections[name]) {\n      nextSnapPoses[name] = snapPoses[name];\n    }\n  }\n  return nextSnapPoses;\n}\nfunction splitSnapDirectionPoses(snapDirections, snapPoses) {\n  var nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\n  var horizontalNames = HORIZONTAL_NAMES.filter(function (name) {\n    return name in nextSnapPoses;\n  });\n  var verticalNames = VERTICAL_NAMES.filter(function (name) {\n    return name in nextSnapPoses;\n  });\n  return {\n    horizontal: horizontalNames.map(function (name) {\n      return nextSnapPoses[name];\n    }),\n    vertical: verticalNames.map(function (name) {\n      return nextSnapPoses[name];\n    })\n  };\n}\nfunction getGapGuidelines(moveable, targetRect, snapThreshold) {\n  var elementRects = moveable.state.elementRects;\n  var gapGuidelines = [];\n  [[\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP], [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP]].forEach(function (_a) {\n    var type = _a[0],\n      mainNames = _a[1],\n      sideNames = _a[2];\n    var targetStart = targetRect[mainNames.start];\n    var targetEnd = targetRect[mainNames.end];\n    var targetCenter = targetRect[mainNames.center];\n    var targetStart2 = targetRect[sideNames.start];\n    var targetEnd2 = targetRect[sideNames.end]; // element : moveable\n\n    function getDist(elementRect) {\n      var rect = elementRect.rect;\n      if (rect[mainNames.end] < targetStart + snapThreshold) {\n        return targetStart - rect[mainNames.end];\n      } else if (targetEnd - snapThreshold < rect[mainNames.start]) {\n        return rect[mainNames.start] - targetEnd;\n      } else {\n        return -1;\n      }\n    }\n    var nextElementRects = elementRects.filter(function (elementRect) {\n      var rect = elementRect.rect;\n      if (rect[sideNames.start] > targetEnd2 || rect[sideNames.end] < targetStart2) {\n        return false;\n      }\n      return getDist(elementRect) > 0;\n    }).sort(function (a, b) {\n      return getDist(a) - getDist(b);\n    });\n    var groups = [];\n    nextElementRects.forEach(function (snapRect1) {\n      nextElementRects.forEach(function (snapRect2) {\n        if (snapRect1 === snapRect2) {\n          return;\n        }\n        var rect1 = snapRect1.rect;\n        var rect2 = snapRect2.rect;\n        var rect1Start = rect1[sideNames.start];\n        var rect1End = rect1[sideNames.end];\n        var rect2Start = rect2[sideNames.start];\n        var rect2End = rect2[sideNames.end];\n        if (rect1Start > rect2End || rect2Start > rect1End) {\n          return;\n        }\n        groups.push([snapRect1, snapRect2]);\n      });\n    });\n    groups.forEach(function (_a) {\n      var snapRect1 = _a[0],\n        snapRect2 = _a[1];\n      var rect1 = snapRect1.rect;\n      var rect2 = snapRect2.rect;\n      var rect1Start = rect1[mainNames.start];\n      var rect1End = rect1[mainNames.end];\n      var rect2Start = rect2[mainNames.start];\n      var rect2End = rect2[mainNames.end];\n      var gap = 0;\n      var pos = 0;\n      var isStart = false;\n      var isCenter = false;\n      var isEnd = false;\n      if (rect1End <= targetStart && targetEnd <= rect2Start) {\n        // (l)element1(r) : (l)target(r) : (l)element2(r)\n        isCenter = true;\n        gap = (rect2Start - rect1End - (targetEnd - targetStart)) / 2;\n        pos = rect1End + gap + (targetEnd - targetStart) / 2;\n        if (Math.abs(pos - targetCenter) > snapThreshold) {\n          return;\n        }\n      } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\n        // (l)element1(r) : (l)element2(r) : (l)target\n        isStart = true;\n        gap = rect2Start - rect1End;\n        pos = rect2End + gap;\n        if (Math.abs(pos - targetStart) > snapThreshold) {\n          return;\n        }\n      } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\n        // target(r) : (l)element1(r) : (l)element2(r)\n        isEnd = true;\n        gap = rect2Start - rect1End;\n        pos = rect1Start - gap;\n        if (Math.abs(pos - targetEnd) > snapThreshold) {\n          return;\n        }\n      } else {\n        return;\n      }\n      if (!gap) {\n        return;\n      }\n      gapGuidelines.push({\n        type: type,\n        pos: type === \"vertical\" ? [pos, 0] : [0, pos],\n        element: snapRect2.element,\n        size: 0,\n        className: snapRect2.className,\n        isStart: isStart,\n        isCenter: isCenter,\n        isEnd: isEnd,\n        gap: gap,\n        hide: true,\n        gapRects: [snapRect1, snapRect2]\n      });\n    });\n  });\n  return gapGuidelines;\n}\nfunction getDefaultGuidelines(horizontalGuidelines, verticalGuidelines, width, height, clientLeft, clientTop, snapOffset) {\n  if (clientLeft === void 0) {\n    clientLeft = 0;\n  }\n  if (clientTop === void 0) {\n    clientTop = 0;\n  }\n  if (snapOffset === void 0) {\n    snapOffset = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n  }\n  var guidelines = [];\n  var snapOffsetLeft = snapOffset.left,\n    snapOffsetTop = snapOffset.top,\n    snapOffsetBottom = snapOffset.bottom,\n    snapOffsetRight = snapOffset.right;\n  var snapWidth = width + snapOffsetRight - snapOffsetLeft;\n  var snapHeight = height + snapOffsetBottom - snapOffsetTop;\n  horizontalGuidelines && horizontalGuidelines.forEach(function (pos) {\n    guidelines.push({\n      type: \"horizontal\",\n      pos: [snapOffsetLeft, throttle(pos - clientTop + snapOffsetTop, 0.1)],\n      size: snapWidth\n    });\n  });\n  verticalGuidelines && verticalGuidelines.forEach(function (pos) {\n    guidelines.push({\n      type: \"vertical\",\n      pos: [throttle(pos - clientLeft + snapOffsetLeft, 0.1), snapOffsetTop],\n      size: snapHeight\n    });\n  });\n  return guidelines;\n}\nfunction calculateContainerPos(rootMatrix, containerRect, n) {\n  var clientPos = calculatePosition(rootMatrix, [containerRect.clientLeft, containerRect.clientTop], n);\n  return [containerRect.left + clientPos[0], containerRect.top + clientPos[1]];\n}\nfunction getSnapElementRects(moveable, values) {\n  if (!values.length) {\n    return [];\n  }\n  var state = moveable.state;\n  var containerClientRect = state.containerClientRect,\n    _a = state.targetClientRect,\n    clientTop = _a.top,\n    clientLeft = _a.left,\n    rootMatrix = state.rootMatrix,\n    is3d = state.is3d;\n  var n = is3d ? 4 : 3;\n  var _b = calculateContainerPos(rootMatrix, containerClientRect, n),\n    containerLeft = _b[0],\n    containerTop = _b[1];\n  var poses = getAbsolutePosesByState(state);\n  var _c = getMinMaxs(poses),\n    targetLeft = _c.minX,\n    targetTop = _c.minY;\n  var _d = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [clientLeft - containerLeft, clientTop - containerTop], n)).map(function (pos) {\n      return roundSign(pos);\n    }),\n    distLeft = _d[0],\n    distTop = _d[1];\n  return values.map(function (value) {\n    var rect = value.element.getBoundingClientRect();\n    var left = rect.left - containerLeft;\n    var top = rect.top - containerTop;\n    var bottom = top + rect.height;\n    var right = left + rect.width;\n    var _a = calculateInversePosition(rootMatrix, [left, top], n),\n      elementLeft = _a[0],\n      elementTop = _a[1];\n    var _b = calculateInversePosition(rootMatrix, [right, bottom], n),\n      elementRight = _b[0],\n      elementBottom = _b[1];\n    return __assign(__assign({}, value), {\n      rect: {\n        left: elementLeft + distLeft,\n        right: elementRight + distLeft,\n        top: elementTop + distTop,\n        bottom: elementBottom + distTop,\n        center: (elementLeft + elementRight) / 2 + distLeft,\n        middle: (elementTop + elementBottom) / 2 + distTop\n      }\n    });\n  });\n}\nfunction getElementGuidelines(moveable) {\n  var state = moveable.state;\n  var _a = moveable.props.elementGuidelines,\n    elementGuidelines = _a === void 0 ? [] : _a;\n  if (!elementGuidelines.length) {\n    state.elementRects = [];\n    return [];\n  }\n  var prevValues = (state.elementRects || []).filter(function (snapRect) {\n    return !snapRect.refresh;\n  });\n  var nextElementGuidelines = elementGuidelines.map(function (el) {\n    if (isObject(el) && \"element\" in el) {\n      return el;\n    }\n    return {\n      element: getRefTarget(el, true)\n    };\n  }).filter(function (value) {\n    return value.element;\n  });\n  var _b = diff(prevValues.map(function (v) {\n      return v.element;\n    }), nextElementGuidelines.map(function (v) {\n      return v.element;\n    })),\n    maintained = _b.maintained,\n    added = _b.added;\n  var nextValues = [];\n  maintained.forEach(function (_a) {\n    var prevIndex = _a[0],\n      nextIndex = _a[1];\n    nextValues[nextIndex] = prevValues[prevIndex];\n  });\n  getSnapElementRects(moveable, added.map(function (index) {\n    return nextElementGuidelines[index];\n  })).map(function (rect, i) {\n    nextValues[added[i]] = rect;\n  });\n  state.elementRects = nextValues;\n  var elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\n  var nextGuidelines = [];\n  nextValues.forEach(function (snapRect) {\n    var element = snapRect.element,\n      _a = snapRect.top,\n      topValue = _a === void 0 ? elementSnapDirections.top : _a,\n      _b = snapRect.left,\n      leftValue = _b === void 0 ? elementSnapDirections.left : _b,\n      _c = snapRect.right,\n      rightValue = _c === void 0 ? elementSnapDirections.right : _c,\n      _d = snapRect.bottom,\n      bottomValue = _d === void 0 ? elementSnapDirections.bottom : _d,\n      _e = snapRect.center,\n      centerValue = _e === void 0 ? elementSnapDirections.center : _e,\n      _f = snapRect.middle,\n      middleValue = _f === void 0 ? elementSnapDirections.middle : _f,\n      className = snapRect.className,\n      rect = snapRect.rect;\n    var _g = splitSnapDirectionPoses({\n        top: topValue,\n        right: rightValue,\n        left: leftValue,\n        bottom: bottomValue,\n        center: centerValue,\n        middle: middleValue\n      }, rect),\n      horizontal = _g.horizontal,\n      vertical = _g.vertical;\n    var rectTop = rect.top;\n    var rectLeft = rect.left;\n    var width = rect.right - rectLeft;\n    var height = rect.bottom - rectTop;\n    var sizes = [width, height];\n    vertical.forEach(function (pos) {\n      nextGuidelines.push({\n        type: \"vertical\",\n        element: element,\n        pos: [throttle(pos, 0.1), rectTop],\n        size: height,\n        sizes: sizes,\n        className: className,\n        elementRect: snapRect\n      });\n    });\n    horizontal.forEach(function (pos) {\n      nextGuidelines.push({\n        type: \"horizontal\",\n        element: element,\n        pos: [rectLeft, throttle(pos, 0.1)],\n        size: width,\n        sizes: sizes,\n        className: className,\n        elementRect: snapRect\n      });\n    });\n  });\n  return nextGuidelines;\n}\nfunction getTotalGuidelines(moveable) {\n  var _a = moveable.state,\n    snapOffset = _a.snapOffset,\n    _b = _a.containerClientRect,\n    overflow = _b.overflow,\n    containerHeight = _b.scrollHeight,\n    containerWidth = _b.scrollWidth,\n    containerClientHeight = _b.clientHeight,\n    containerClientWidth = _b.clientWidth,\n    clientLeft = _b.clientLeft,\n    clientTop = _b.clientTop;\n  var _c = moveable.props,\n    _d = _c.snapGap,\n    snapGap = _d === void 0 ? true : _d,\n    verticalGuidelines = _c.verticalGuidelines,\n    horizontalGuidelines = _c.horizontalGuidelines,\n    _e = _c.snapThreshold,\n    snapThreshold = _e === void 0 ? 5 : _e,\n    _f = _c.snapGridWidth,\n    snapGridWidth = _f === void 0 ? 0 : _f,\n    _g = _c.snapGridHeight,\n    snapGridHeight = _g === void 0 ? 0 : _g;\n  var elementGuidelines = getElementGuidelines(moveable);\n  var totalGuidelines = __spreadArray([], elementGuidelines, true);\n  if (snapGap) {\n    var _h = getRect(getAbsolutePosesByState(moveable.state)),\n      top = _h.top,\n      left = _h.left,\n      bottom = _h.bottom,\n      right = _h.right;\n    totalGuidelines.push.apply(totalGuidelines, getGapGuidelines(moveable, {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right,\n      center: (left + right) / 2,\n      middle: (top + bottom) / 2\n    }, snapThreshold));\n  }\n  totalGuidelines.push.apply(totalGuidelines, getGridGuidelines(snapGridWidth, snapGridHeight, overflow ? containerWidth : containerClientWidth, overflow ? containerHeight : containerClientHeight, clientLeft, clientTop));\n  totalGuidelines.push.apply(totalGuidelines, getDefaultGuidelines(horizontalGuidelines || false, verticalGuidelines || false, overflow ? containerWidth : containerClientWidth, overflow ? containerHeight : containerClientHeight, clientLeft, clientTop, snapOffset));\n  return totalGuidelines;\n}\nfunction getGridGuidelines(snapGridWidth, snapGridHeight, containerWidth, containerHeight, clientLeft, clientTop) {\n  if (clientLeft === void 0) {\n    clientLeft = 0;\n  }\n  if (clientTop === void 0) {\n    clientTop = 0;\n  }\n  var guidelines = [];\n  if (snapGridHeight) {\n    for (var pos = 0; pos <= containerHeight; pos += snapGridHeight) {\n      guidelines.push({\n        type: \"horizontal\",\n        pos: [0, throttle(pos - clientTop, 0.1)],\n        size: containerWidth,\n        hide: true\n      });\n    }\n  }\n  if (snapGridWidth) {\n    for (var pos = 0; pos <= containerWidth; pos += snapGridWidth) {\n      guidelines.push({\n        type: \"vertical\",\n        pos: [throttle(pos - clientLeft, 0.1), 0],\n        size: containerHeight,\n        hide: true\n      });\n    }\n  }\n  return guidelines;\n}\nfunction solveLineConstants(_a) {\n  var point1 = _a[0],\n    point2 = _a[1];\n  var dx = point2[0] - point1[0];\n  var dy = point2[1] - point1[1];\n  if (Math.abs(dx) < TINY_NUM$1) {\n    dx = 0;\n  }\n  if (Math.abs(dy) < TINY_NUM$1) {\n    dy = 0;\n  } // b > 0\n  // ax + by + c = 0\n\n  var a = 0;\n  var b = 0;\n  var c = 0;\n  if (!dx) {\n    // -x + 1 = 0\n    a = -1;\n    c = point1[0];\n  } else if (!dy) {\n    // y - 1 = 0\n    b = 1;\n    c = -point1[1];\n  } else {\n    // y = -a(x - x1) + y1\n    // ax + y + a * x1 - y1 = 0\n    a = -dy / dx;\n    b = 1;\n    c = a * point1[0] - point1[1];\n  }\n  return [a, b, c].map(function (v) {\n    return throttle(v, TINY_NUM$1);\n  });\n}\nfunction checkMoveableSnapPoses(moveable, posesX, posesY, customSnapThreshold) {\n  var props = moveable.props;\n  var snapThreshold = selectValue(customSnapThreshold, props.snapThreshold, 5);\n  return checkSnapPoses(moveable.state.guidelines, posesX, posesY, snapThreshold);\n}\nfunction checkSnapPoses(guidelines, posesX, posesY, snapThreshold) {\n  return {\n    vertical: checkSnap(guidelines, \"vertical\", posesX, snapThreshold),\n    horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapThreshold)\n  };\n}\nfunction checkSnapKeepRatio(moveable, startPos, endPos) {\n  var endX = endPos[0],\n    endY = endPos[1];\n  var startX = startPos[0],\n    startY = startPos[1];\n  var _a = minus(endPos, startPos),\n    dx = _a[0],\n    dy = _a[1];\n  var isBottom = dy > 0;\n  var isRight = dx > 0;\n  dx = getTinyDist(dx);\n  dy = getTinyDist(dy);\n  var verticalInfo = {\n    isSnap: false,\n    offset: 0,\n    pos: 0\n  };\n  var horizontalInfo = {\n    isSnap: false,\n    offset: 0,\n    pos: 0\n  };\n  if (dx === 0 && dy === 0) {\n    return {\n      vertical: verticalInfo,\n      horizontal: horizontalInfo\n    };\n  }\n  var _b = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []),\n    verticalSnapInfo = _b.vertical,\n    horizontalSnapInfo = _b.horizontal;\n  verticalSnapInfo.posInfos.filter(function (_a) {\n    var pos = _a.pos;\n    return isRight ? pos >= startX : pos <= startX;\n  });\n  horizontalSnapInfo.posInfos.filter(function (_a) {\n    var pos = _a.pos;\n    return isBottom ? pos >= startY : pos <= startY;\n  });\n  verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n  horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n  var _c = getNearestSnapGuidelineInfo(verticalSnapInfo),\n    isVerticalSnap = _c.isSnap,\n    verticalGuideline = _c.guideline;\n  var _d = getNearestSnapGuidelineInfo(horizontalSnapInfo),\n    isHorizontalSnap = _d.isSnap,\n    horizontalGuideline = _d.guideline;\n  var horizontalPos = isHorizontalSnap ? horizontalGuideline.pos[1] : 0;\n  var verticalPos = isVerticalSnap ? verticalGuideline.pos[0] : 0;\n  if (dx === 0) {\n    if (isHorizontalSnap) {\n      horizontalInfo.isSnap = true;\n      horizontalInfo.pos = horizontalGuideline.pos[1];\n      horizontalInfo.offset = endY - horizontalInfo.pos;\n    }\n  } else if (dy === 0) {\n    if (isVerticalSnap) {\n      verticalInfo.isSnap = true;\n      verticalInfo.pos = verticalPos;\n      verticalInfo.offset = endX - verticalPos;\n    }\n  } else {\n    // y - y1 = a * (x - x1)\n    var a = dy / dx;\n    var b = endPos[1] - a * endX;\n    var y = 0;\n    var x = 0;\n    var isSnap = false;\n    if (isVerticalSnap) {\n      x = verticalPos;\n      y = a * x + b;\n      isSnap = true;\n    } else if (isHorizontalSnap) {\n      y = horizontalPos;\n      x = (y - b) / a;\n      isSnap = true;\n    }\n    if (isSnap) {\n      verticalInfo.isSnap = true;\n      verticalInfo.pos = x;\n      verticalInfo.offset = endX - x;\n      horizontalInfo.isSnap = true;\n      horizontalInfo.pos = y;\n      horizontalInfo.offset = endY - y;\n    }\n  }\n  return {\n    vertical: verticalInfo,\n    horizontal: horizontalInfo\n  };\n}\nfunction checkSnaps(moveable, rect, customSnapThreshold) {\n  var poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\n  return checkMoveableSnapPoses(moveable, poses.vertical, poses.horizontal, customSnapThreshold);\n}\nfunction getNearestSnapGuidelineInfo(snapInfo) {\n  var isSnap = snapInfo.isSnap;\n  if (!isSnap) {\n    return {\n      isSnap: false,\n      offset: 0,\n      dist: -1,\n      pos: 0,\n      guideline: null\n    };\n  }\n  var posInfo = snapInfo.posInfos[0];\n  var guidelineInfo = posInfo.guidelineInfos[0];\n  var offset = guidelineInfo.offset;\n  var dist = guidelineInfo.dist;\n  var guideline = guidelineInfo.guideline;\n  return {\n    isSnap: isSnap,\n    offset: offset,\n    dist: dist,\n    pos: posInfo.pos,\n    guideline: guideline\n  };\n}\nfunction checkSnap(guidelines, targetType, targetPoses, snapThreshold) {\n  if (!guidelines || !guidelines.length) {\n    return {\n      isSnap: false,\n      index: -1,\n      posInfos: []\n    };\n  }\n  var isVertical = targetType === \"vertical\";\n  var posType = isVertical ? 0 : 1;\n  var snapPosInfos = targetPoses.map(function (targetPos, index) {\n    var guidelineInfos = guidelines.map(function (guideline) {\n      var pos = guideline.pos;\n      var offset = targetPos - pos[posType];\n      return {\n        offset: offset,\n        dist: Math.abs(offset),\n        guideline: guideline\n      };\n    }).filter(function (_a) {\n      var guideline = _a.guideline,\n        dist = _a.dist;\n      var type = guideline.type;\n      if (type !== targetType || dist > snapThreshold) {\n        return false;\n      }\n      return true;\n    }).sort(function (a, b) {\n      return a.dist - b.dist;\n    });\n    return {\n      pos: targetPos,\n      index: index,\n      guidelineInfos: guidelineInfos\n    };\n  }).filter(function (snapPosInfo) {\n    return snapPosInfo.guidelineInfos.length > 0;\n  }).sort(function (a, b) {\n    return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n  });\n  var isSnap = snapPosInfos.length > 0;\n  return {\n    isSnap: isSnap,\n    index: isSnap ? snapPosInfos[0].index : -1,\n    posInfos: snapPosInfos\n  };\n}\nfunction getSnapInfosByDirection(moveable, poses, snapDirection) {\n  var nextPoses = [];\n  if (snapDirection[0] && snapDirection[1]) {\n    nextPoses = [snapDirection, [-snapDirection[0], snapDirection[1]], [snapDirection[0], -snapDirection[1]]].map(function (direction) {\n      return getPosByDirection(poses, direction);\n    });\n  } else if (!snapDirection[0] && !snapDirection[1]) {\n    var alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n    for (var i = 0; i < 4; ++i) {\n      nextPoses.push(alignPoses[i]);\n      nextPoses.push([(alignPoses[i][0] + alignPoses[i + 1][0]) / 2, (alignPoses[i][1] + alignPoses[i + 1][1]) / 2]);\n    }\n  } else {\n    if (moveable.props.keepRatio) {\n      nextPoses = [[-1, -1], [-1, 1], [1, -1], [1, 1], snapDirection].map(function (dir) {\n        return getPosByDirection(poses, dir);\n      });\n    } else {\n      nextPoses = getPosesByDirection(poses, snapDirection);\n      if (nextPoses.length > 1) {\n        nextPoses.push([(nextPoses[0][0] + nextPoses[1][0]) / 2, (nextPoses[0][1] + nextPoses[1][1]) / 2]);\n      }\n    }\n  }\n  return checkMoveableSnapPoses(moveable, nextPoses.map(function (pos) {\n    return pos[0];\n  }), nextPoses.map(function (pos) {\n    return pos[1];\n  }), 1);\n}\nfunction checkSnapBoundPriority(a, b) {\n  var aDist = Math.abs(a.offset);\n  var bDist = Math.abs(b.offset);\n  if (a.isBound && b.isBound) {\n    return bDist - aDist;\n  } else if (a.isBound) {\n    return -1;\n  } else if (b.isBound) {\n    return 1;\n  } else if (a.isSnap && b.isSnap) {\n    return bDist - aDist;\n  } else if (a.isSnap) {\n    return -1;\n  } else if (b.isSnap) {\n    return 1;\n  } else if (aDist < TINY_NUM) {\n    return 1;\n  } else if (bDist < TINY_NUM) {\n    return -1;\n  }\n  return aDist - bDist;\n}\nfunction getNearOffsetInfo(offsets, index) {\n  return offsets.slice().sort(function (a, b) {\n    var aSign = a.sign[index];\n    var bSign = b.sign[index];\n    var aOffset = a.offset[index];\n    var bOffset = b.offset[index]; // -1 The positions of a and b do not change.\n    // 1 The positions of a and b are reversed.\n\n    if (!aSign) {\n      return 1;\n    } else if (!bSign) {\n      return -1;\n    }\n    return checkSnapBoundPriority({\n      isBound: a.isBound,\n      isSnap: a.isSnap,\n      offset: aOffset\n    }, {\n      isBound: b.isBound,\n      isSnap: b.isSnap,\n      offset: bOffset\n    });\n  })[0];\n}\nfunction getCheckSnapDirections(direction, fixedDirection, keepRatio) {\n  var directions = []; // const fixedDirection = [-direction[0], -direction[1]];\n\n  if (keepRatio) {\n    if (Math.abs(fixedDirection[0]) !== 1 || Math.abs(fixedDirection[1]) !== 1) {\n      directions.push([fixedDirection, [-1, -1]], [fixedDirection, [-1, 1]], [fixedDirection, [1, -1]], [fixedDirection, [1, 1]]);\n    } else {\n      directions.push([fixedDirection, [direction[0], -direction[1]]], [fixedDirection, [-direction[0], direction[1]]]);\n    }\n    directions.push([fixedDirection, direction]);\n  } else {\n    if (direction[0] && direction[1] || !direction[0] && !direction[1]) {\n      var endDirection_1 = direction[0] ? direction : [1, 1];\n      [1, -1].forEach(function (signX) {\n        [1, -1].forEach(function (signY) {\n          var nextDirection = [signX * endDirection_1[0], signY * endDirection_1[1]];\n          if (fixedDirection[0] === nextDirection[0] && fixedDirection[1] === nextDirection[1]) {\n            return;\n          }\n          directions.push([fixedDirection, nextDirection]);\n        });\n      });\n    } else if (direction[0]) {\n      var signs = Math.abs(fixedDirection[0]) === 1 ? [1] : [1, -1];\n      signs.forEach(function (sign) {\n        directions.push([[fixedDirection[0], -1], [sign * direction[0], -1]], [[fixedDirection[0], 0], [sign * direction[0], 0]], [[fixedDirection[0], 1], [sign * direction[0], 1]]);\n      });\n    } else if (direction[1]) {\n      var signs = Math.abs(fixedDirection[1]) === 1 ? [1] : [1, -1];\n      signs.forEach(function (sign) {\n        directions.push([[-1, fixedDirection[1]], [-1, sign * direction[1]]], [[0, fixedDirection[1]], [0, sign * direction[1]]], [[1, fixedDirection[1]], [1, sign * direction[1]]]);\n      });\n    }\n  }\n  return directions;\n}\nfunction isStartLine(dot, line) {\n  // l    o     => true\n  // o    l    => false\n  var cx = average([line[0][0], line[1][0]]);\n  var cy = average([line[0][1], line[1][1]]);\n  return {\n    vertical: cx <= dot[0],\n    horizontal: cy <= dot[1]\n  };\n}\nfunction hitTestLine(dot, _a) {\n  var pos1 = _a[0],\n    pos2 = _a[1];\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (Math.abs(dx) < TINY_NUM) {\n    dx = 0;\n  }\n  if (Math.abs(dy) < TINY_NUM) {\n    dy = 0;\n  }\n  var test1;\n  var test2;\n  if (!dx) {\n    test1 = pos1[0];\n    test2 = dot[0];\n  } else if (!dy) {\n    test1 = pos1[1];\n    test2 = dot[1];\n  } else {\n    var a = dy / dx; // y = a * (x - pos1) + pos1\n\n    test1 = a * (dot[0] - pos1[0]) + pos1[1];\n    test2 = dot[1];\n  }\n  return test1 - test2;\n}\nfunction isSameStartLine(dots, line, centerSign, error) {\n  if (error === void 0) {\n    error = TINY_NUM;\n  }\n  return dots.every(function (dot) {\n    var value = hitTestLine(dot, line);\n    var sign = value <= 0;\n    return sign === centerSign || Math.abs(value) <= error;\n  });\n}\nfunction checkInnerBoundDot(pos, start, end, isStart, threshold) {\n  if (threshold === void 0) {\n    threshold = 0;\n  }\n  if (isStart && start - threshold <= pos || !isStart && pos <= end + threshold) {\n    // false 402 565 602 => 37 ([0, 37])\n    // true 400 524.9712603540036 600 => 124 ([124, 0])\n    // true 400 410 600 => 10 ([10, 0])\n    return {\n      isBound: true,\n      offset: isStart ? start - pos : end - pos\n    };\n  }\n  return {\n    isBound: false,\n    offset: 0\n  };\n}\nfunction checkInnerBound(moveable, _a) {\n  var line = _a.line,\n    centerSign = _a.centerSign,\n    verticalSign = _a.verticalSign,\n    horizontalSign = _a.horizontalSign,\n    lineConstants = _a.lineConstants;\n  var bounds = moveable.props.innerBounds;\n  if (!bounds) {\n    return {\n      isAllBound: false,\n      isBound: false,\n      isVerticalBound: false,\n      isHorizontalBound: false,\n      offset: [0, 0]\n    };\n  }\n  var left = bounds.left,\n    top = bounds.top,\n    width = bounds.width,\n    height = bounds.height;\n  var leftLine = [[left, top], [left, top + height]];\n  var topLine = [[left, top], [left + width, top]];\n  var rightLine = [[left + width, top], [left + width, top + height]];\n  var bottomLine = [[left, top + height], [left + width, top + height]];\n  if (isSameStartLine([[left, top], [left + width, top], [left, top + height], [left + width, top + height]], line, centerSign)) {\n    return {\n      isAllBound: false,\n      isBound: false,\n      isVerticalBound: false,\n      isHorizontalBound: false,\n      offset: [0, 0]\n    };\n  } // test vertical\n\n  var topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, verticalSign);\n  var bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, verticalSign); // test horizontal\n\n  var leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, horizontalSign);\n  var rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, horizontalSign);\n  var isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n  var isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n  var isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n  var isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n  var verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n  var horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n  var offset = [0, 0];\n  var isBound = false;\n  var isAllBound = false;\n  if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n    offset = [verticalOffset, 0];\n    isBound = isVerticalBound;\n    isAllBound = isAllVerticalBound;\n  } else {\n    offset = [0, horizontalOffset];\n    isBound = isHorizontalBound;\n    isAllBound = isAllHorizontalBound;\n  }\n  return {\n    isAllBound: isAllBound,\n    isVerticalBound: isVerticalBound,\n    isHorizontalBound: isHorizontalBound,\n    isBound: isBound,\n    offset: offset\n  };\n}\nfunction checkLineBoundCollision(line, _a, boundLine, isStart, threshold, isRender) {\n  var a = _a[0],\n    b = _a[1];\n  var dot1 = line[0]; // const dot2 = line[1];\n\n  var boundDot1 = boundLine[0];\n  var boundDot2 = boundLine[1]; // const dy1 = getTinyDist(dot2[1] - dot1[1]);\n  // const dx1 = getTinyDist(dot2[0] - dot1[0]);\n\n  var dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n  var dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n  var hasDx = b;\n  var hasDy = a;\n  var slope = -a / b; // lineConstants\n  // ax + by + c = 0\n  // dx2 or dy2 is zero\n\n  if (!dx2) {\n    // vertical\n    // by + c = 0\n    if (isRender && !hasDy) {\n      // 90deg\n      return {\n        isBound: false,\n        offset: 0\n      };\n    } else if (hasDx) {\n      // ax + by + c = 0\n      // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n      var y = slope * (boundDot1[0] - dot1[0]) + dot1[1]; // boundDot1[1] <= y  <= boundDot2[1]\n\n      return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n    } else {\n      // ax + c = 0\n      var offset = boundDot1[0] - dot1[0];\n      var isBound = Math.abs(offset) <= (threshold || 0);\n      return {\n        isBound: isBound,\n        offset: isBound ? offset : 0\n      };\n    }\n  } else if (!dy2) {\n    // horizontal\n    if (isRender && !hasDx) {\n      // 90deg\n      return {\n        isBound: false,\n        offset: 0\n      };\n    } else if (hasDy) {\n      // y = a * (x - x1) + y1\n      // x = (y - y1) / a + x1\n      // const a = dy1 / dx1;\n      // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n      var x = (boundDot1[1] - dot1[1]) / slope + dot1[0]; // boundDot1[0] <= x && x <= boundDot2[0]\n\n      return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n    } else {\n      var offset = boundDot1[1] - dot1[1];\n      var isBound = Math.abs(offset) <= (threshold || 0);\n      return {\n        isBound: isBound,\n        offset: isBound ? offset : 0\n      };\n    }\n  }\n  return {\n    isBound: false,\n    offset: 0\n  };\n}\nfunction getInnerBoundInfo(moveable, lineInfos, datas) {\n  return lineInfos.map(function (info) {\n    var _a = checkInnerBound(moveable, info),\n      isBound = _a.isBound,\n      offset = _a.offset,\n      isVerticalBound = _a.isVerticalBound,\n      isHorizontalBound = _a.isHorizontalBound;\n    var multiple = info.multiple;\n    var sizeOffset = getDragDist({\n      datas: datas,\n      distX: offset[0],\n      distY: offset[1]\n    }).map(function (size, i) {\n      return size * (multiple[i] ? 2 / multiple[i] : 0);\n    });\n    return {\n      sign: multiple,\n      isBound: isBound,\n      isVerticalBound: isVerticalBound,\n      isHorizontalBound: isHorizontalBound,\n      isSnap: false,\n      offset: sizeOffset\n    };\n  });\n}\nfunction getInnerBoundDragInfo(moveable, poses, datas) {\n  var _a;\n  var lines = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false).map(function (info) {\n    return __assign(__assign({}, info), {\n      multiple: info.multiple.map(function (dir) {\n        return Math.abs(dir) * 2;\n      })\n    });\n  });\n  var innerBoundInfo = getInnerBoundInfo(moveable, lines, datas);\n  var widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n  var heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n  var verticalOffset = 0;\n  var horizontalOffset = 0;\n  var isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n  var isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n  if (isVerticalBound || isHorizontalBound) {\n    _a = getInverseDragDist({\n      datas: datas,\n      distX: -widthOffsetInfo.offset[0],\n      distY: -heightOffsetInfo.offset[1]\n    }), verticalOffset = _a[0], horizontalOffset = _a[1];\n  }\n  return {\n    vertical: {\n      isBound: isVerticalBound,\n      offset: verticalOffset\n    },\n    horizontal: {\n      isBound: isHorizontalBound,\n      offset: horizontalOffset\n    }\n  };\n}\nfunction getCheckSnapLineDirections(direction, keepRatio) {\n  var lineDirections = [];\n  var x = direction[0];\n  var y = direction[1];\n  if (x && y) {\n    lineDirections.push([[0, y * 2], direction, [-x, y]], [[x * 2, 0], direction, [x, -y]]);\n  } else if (x) {\n    // vertcal\n    lineDirections.push([[x * 2, 0], [x, 1], [x, -1]]);\n    if (keepRatio) {\n      lineDirections.push([[0, -1], [x, -1], [-x, -1]], [[0, 1], [x, 1], [-x, 1]]);\n    }\n  } else if (y) {\n    // horizontal\n    lineDirections.push([[0, y * 2], [1, y], [-1, y]]);\n    if (keepRatio) {\n      lineDirections.push([[-1, 0], [-1, y], [-1, -y]], [[1, 0], [1, y], [1, -y]]);\n    }\n  } else {\n    // [0, 0] to all direction\n    lineDirections.push([[-1, 0], [-1, -1], [-1, 1]], [[1, 0], [1, -1], [1, 1]], [[0, -1], [-1, -1], [1, -1]], [[0, 1], [-1, 1], [1, 1]]);\n  }\n  return lineDirections;\n}\nfunction getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio) {\n  var _a = moveable.state,\n    allMatrix = _a.allMatrix,\n    is3d = _a.is3d;\n  var virtualPoses = calculatePoses(allMatrix, 100, 100, is3d ? 4 : 3);\n  var center = getPosByDirection(virtualPoses, [0, 0]);\n  return getCheckSnapLineDirections(direction, keepRatio).map(function (_a) {\n    var multiple = _a[0],\n      dir1 = _a[1],\n      dir2 = _a[2];\n    var virtualLine = [getPosByDirection(virtualPoses, dir1), getPosByDirection(virtualPoses, dir2)];\n    var lineConstants = solveLineConstants(virtualLine);\n    var _b = isStartLine(center, virtualLine),\n      verticalSign = _b.vertical,\n      horizontalSign = _b.horizontal;\n    var centerSign = hitTestLine(center, virtualLine) <= 0;\n    return {\n      multiple: multiple,\n      centerSign: centerSign,\n      verticalSign: verticalSign,\n      horizontalSign: horizontalSign,\n      lineConstants: lineConstants,\n      line: [getPosByDirection(poses, dir1), getPosByDirection(poses, dir2)]\n    };\n  });\n}\nfunction isBoundRotate$1(relativePoses, boundDots, center, rad) {\n  var nextPoses = rad ? relativePoses.map(function (pos) {\n    return rotate(pos, rad);\n  }) : relativePoses;\n  return [[nextPoses[0], nextPoses[1]], [nextPoses[1], nextPoses[3]], [nextPoses[3], nextPoses[2]], [nextPoses[2], nextPoses[0]]].some(function (line) {\n    var centerSign = hitTestLine(center, line) <= 0;\n    return !isSameStartLine(boundDots, line, centerSign);\n  });\n}\nfunction getDistPointLine(_a) {\n  // x = 0, y = 0\n  // d = (ax + by + c) / root(a2 + b2)\n  var pos1 = _a[0],\n    pos2 = _a[1];\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (!dx) {\n    return Math.abs(pos1[0]);\n  }\n  if (!dy) {\n    return Math.abs(pos1[1]);\n  } // y - y1 = a(x - x1)\n  // 0 = ax -y + -a * x1 + y1\n\n  var a = dy / dx;\n  return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine(_a) {\n  var pos1 = _a[0],\n    pos2 = _a[1];\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (!dx) {\n    return [pos1[0], 0];\n  }\n  if (!dy) {\n    return [0, pos1[1]];\n  }\n  var a = dy / dx; // y - y1 = a (x  - x1)\n  // y = ax - a * x1 + y1\n\n  var b = -a * pos1[0] + pos1[1]; // y = ax + b = -1/a x\n  // x = -b / (a + 1 / a)\n  // y = b / (1 + 1 / a^2)\n\n  return [-b / (a + 1 / a), b / (a * a + 1)];\n}\nfunction checkRotateInnerBounds(moveable, prevPoses, nextPoses, origin, rotation) {\n  var bounds = moveable.props.innerBounds;\n  var rad = rotation * Math.PI / 180;\n  if (!bounds) {\n    return [];\n  }\n  var left = bounds.left,\n    top = bounds.top,\n    width = bounds.width,\n    height = bounds.height;\n  var relativeLeft = left - origin[0];\n  var relativeRight = left + width - origin[0];\n  var relativeTop = top - origin[1];\n  var relativeBottom = top + height - origin[1];\n  var dots = [[relativeLeft, relativeTop], [relativeRight, relativeTop], [relativeLeft, relativeBottom], [relativeRight, relativeBottom]];\n  var center = getPosByDirection(nextPoses, [0, 0]);\n  if (!isBoundRotate$1(nextPoses, dots, center, 0)) {\n    return [];\n  }\n  var result = [];\n  var dotInfos = dots.map(function (dot) {\n    return [getDistSize(dot), getRad([0, 0], dot)];\n  });\n  [[nextPoses[0], nextPoses[1]], [nextPoses[1], nextPoses[3]], [nextPoses[3], nextPoses[2]], [nextPoses[2], nextPoses[0]]].forEach(function (line) {\n    var lineRad = getRad([0, 0], solveReverseLine(line));\n    var lineDist = getDistPointLine(line);\n    result.push.apply(result, dotInfos.filter(function (_a) {\n      var dotDist = _a[0];\n      return dotDist && lineDist <= dotDist;\n    }).map(function (_a) {\n      var dotDist = _a[0],\n        dotRad = _a[1];\n      var distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n      var nextRad1 = dotRad + distRad;\n      var nextRad2 = dotRad - distRad;\n      return [rad + nextRad1 - lineRad, rad + nextRad2 - lineRad];\n    }).reduce(function (prev, cur) {\n      prev.push.apply(prev, cur);\n      return prev;\n    }, []).filter(function (nextRad) {\n      return !isBoundRotate$1(prevPoses, dots, center, nextRad);\n    }).map(function (nextRad) {\n      return throttle(nextRad * 180 / Math.PI, TINY_NUM);\n    }));\n  });\n  return result;\n}\nfunction checkInnerBoundPoses(moveable) {\n  var innerBounds = moveable.props.innerBounds;\n  if (!innerBounds) {\n    return {\n      vertical: [],\n      horizontal: []\n    };\n  }\n  var _a = moveable.getRect(),\n    pos1 = _a.pos1,\n    pos2 = _a.pos2,\n    pos3 = _a.pos3,\n    pos4 = _a.pos4;\n  var poses = [pos1, pos2, pos3, pos4];\n  var center = getPosByDirection(poses, [0, 0]);\n  var left = innerBounds.left,\n    top = innerBounds.top,\n    width = innerBounds.width,\n    height = innerBounds.height;\n  var leftLine = [[left, top], [left, top + height]];\n  var topLine = [[left, top], [left + width, top]];\n  var rightLine = [[left + width, top], [left + width, top + height]];\n  var bottomLine = [[left, top + height], [left + width, top + height]];\n  var lineInfos = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false);\n  var horizontalPoses = [];\n  var verticalPoses = [];\n  var boundMap = {\n    top: false,\n    bottom: false,\n    left: false,\n    right: false\n  };\n  lineInfos.forEach(function (lineInfo) {\n    var line = lineInfo.line,\n      lineConstants = lineInfo.lineConstants;\n    var _a = isStartLine(center, line),\n      isHorizontalStart = _a.horizontal,\n      isVerticalStart = _a.vertical; // test vertical\n\n    var topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, isVerticalStart, 1, true);\n    var bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, isVerticalStart, 1, true); // test horizontal\n\n    var leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, isHorizontalStart, 1, true);\n    var rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, isHorizontalStart, 1, true);\n    if (topBoundInfo.isBound && !boundMap.top) {\n      horizontalPoses.push(top);\n      boundMap.top = true;\n    }\n    if (bottomBoundInfo.isBound && !boundMap.bottom) {\n      horizontalPoses.push(top + height);\n      boundMap.bottom = true;\n    }\n    if (leftBoundInfo.isBound && !boundMap.left) {\n      verticalPoses.push(left);\n      boundMap.left = true;\n    }\n    if (rightBoundInfo.isBound && !boundMap.right) {\n      verticalPoses.push(left + width);\n      boundMap.right = true;\n    }\n  });\n  return {\n    horizontal: horizontalPoses,\n    vertical: verticalPoses\n  };\n}\nfunction checkBoundPoses(bounds, verticalPoses, horizontalPoses) {\n  var _a = bounds || {},\n    _b = _a.position,\n    position = _b === void 0 ? \"client\" : _b,\n    _c = _a.left,\n    left = _c === void 0 ? -Infinity : _c,\n    _d = _a.top,\n    top = _d === void 0 ? -Infinity : _d,\n    _e = _a.right,\n    right = _e === void 0 ? Infinity : _e,\n    _f = _a.bottom,\n    bottom = _f === void 0 ? Infinity : _f;\n  var nextBounds = {\n    position: position,\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n  return {\n    vertical: checkBounds(nextBounds, verticalPoses, true),\n    horizontal: checkBounds(nextBounds, horizontalPoses, false)\n  };\n}\nfunction getBounds(moveable, externalBounds) {\n  var _a = moveable.state,\n    _b = _a.containerClientRect,\n    containerHeight = _b.clientHeight,\n    containerWidth = _b.clientWidth,\n    clientLeft = _b.clientLeft,\n    clientTop = _b.clientTop,\n    _c = _a.snapOffset,\n    snapOffsetLeft = _c.left,\n    snapOffsetTop = _c.top,\n    snapOffsetRight = _c.right,\n    snapOffsetBottom = _c.bottom;\n  var bounds = externalBounds || moveable.props.bounds || {};\n  var position = bounds.position || \"client\";\n  var isCSS = position === \"css\";\n  var _d = bounds.left,\n    left = _d === void 0 ? -Infinity : _d,\n    _e = bounds.top,\n    top = _e === void 0 ? -Infinity : _e;\n  var _f = bounds.right,\n    right = _f === void 0 ? isCSS ? -Infinity : Infinity : _f,\n    _g = bounds.bottom,\n    bottom = _g === void 0 ? isCSS ? -Infinity : Infinity : _g;\n  if (isCSS) {\n    right = containerWidth + snapOffsetRight - snapOffsetLeft - right;\n    bottom = containerHeight + snapOffsetBottom - snapOffsetTop - bottom;\n  }\n  return {\n    left: left + snapOffsetLeft - clientLeft,\n    right: right + snapOffsetLeft - clientLeft,\n    top: top + snapOffsetTop - clientTop,\n    bottom: bottom + snapOffsetTop - clientTop\n  };\n}\nfunction checkBoundKeepRatio(moveable, startPos, endPos) {\n  var _a = getBounds(moveable),\n    left = _a.left,\n    top = _a.top,\n    right = _a.right,\n    bottom = _a.bottom;\n  var endX = endPos[0],\n    endY = endPos[1];\n  var _b = minus(endPos, startPos),\n    dx = _b[0],\n    dy = _b[1];\n  if (Math.abs(dx) < TINY_NUM) {\n    dx = 0;\n  }\n  if (Math.abs(dy) < TINY_NUM) {\n    dy = 0;\n  }\n  var isBottom = dy > 0;\n  var isRight = dx > 0;\n  var verticalInfo = {\n    isBound: false,\n    offset: 0,\n    pos: 0\n  };\n  var horizontalInfo = {\n    isBound: false,\n    offset: 0,\n    pos: 0\n  };\n  if (dx === 0 && dy === 0) {\n    return {\n      vertical: verticalInfo,\n      horizontal: horizontalInfo\n    };\n  } else if (dx === 0) {\n    if (isBottom) {\n      if (bottom < endY) {\n        horizontalInfo.pos = bottom;\n        horizontalInfo.offset = endY - bottom;\n      }\n    } else {\n      if (top > endY) {\n        horizontalInfo.pos = top;\n        horizontalInfo.offset = endY - top;\n      }\n    }\n  } else if (dy === 0) {\n    if (isRight) {\n      if (right < endX) {\n        verticalInfo.pos = right;\n        verticalInfo.offset = endX - right;\n      }\n    } else {\n      if (left > endX) {\n        verticalInfo.pos = left;\n        verticalInfo.offset = endX - left;\n      }\n    }\n  } else {\n    // y - y1 = a * (x - x1)\n    var a = dy / dx;\n    var b = endPos[1] - a * endX;\n    var y = 0;\n    var x = 0;\n    var isBound = false;\n    if (isRight && right <= endX) {\n      y = a * right + b;\n      x = right;\n      isBound = true;\n    } else if (!isRight && endX <= left) {\n      y = a * left + b;\n      x = left;\n      isBound = true;\n    }\n    if (isBound) {\n      if (y < top || y > bottom) {\n        isBound = false;\n      }\n    }\n    if (!isBound) {\n      if (isBottom && bottom <= endY) {\n        y = bottom;\n        x = (y - b) / a;\n        isBound = true;\n      } else if (!isBottom && endY <= top) {\n        y = top;\n        x = (y - b) / a;\n        isBound = true;\n      }\n    }\n    if (isBound) {\n      verticalInfo.isBound = true;\n      verticalInfo.pos = x;\n      verticalInfo.offset = endX - x;\n      horizontalInfo.isBound = true;\n      horizontalInfo.pos = y;\n      horizontalInfo.offset = endY - y;\n    }\n  }\n  return {\n    vertical: verticalInfo,\n    horizontal: horizontalInfo\n  };\n}\nfunction checkBounds(bounds, poses, isVertical) {\n  // 0   [100 - 200]  300\n  var startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n  var endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"]; // 450\n\n  var minPos = Math.min.apply(Math, poses);\n  var maxPos = Math.max.apply(Math, poses);\n  var boundInfos = [];\n  if (startBoundPos + 1 > minPos) {\n    boundInfos.push({\n      isBound: true,\n      offset: minPos - startBoundPos,\n      pos: startBoundPos\n    });\n  }\n  if (endBoundPos - 1 < maxPos) {\n    boundInfos.push({\n      isBound: true,\n      offset: maxPos - endBoundPos,\n      pos: endBoundPos\n    });\n  }\n  if (!boundInfos.length) {\n    boundInfos.push({\n      isBound: false,\n      offset: 0,\n      pos: 0\n    });\n  }\n  return boundInfos.sort(function (a, b) {\n    return Math.abs(b.offset) - Math.abs(a.offset);\n  });\n}\nfunction isBoundRotate(relativePoses, boundRect, rad) {\n  var nextPoses = rad ? relativePoses.map(function (pos) {\n    return rotate(pos, rad);\n  }) : relativePoses;\n  return nextPoses.some(function (pos) {\n    return pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1 || pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1 || pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1 || pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1;\n  });\n}\nfunction boundRotate(vec, boundPos, index) {\n  var r = getDistSize(vec);\n  var nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n  return [nextPos, -nextPos].sort(function (a, b) {\n    return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n  }).map(function (pos) {\n    return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n  });\n}\nfunction checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation) {\n  if (!moveable.props.bounds) {\n    return [];\n  }\n  var rad = rotation * Math.PI / 180;\n  var _a = getBounds(moveable),\n    left = _a.left,\n    top = _a.top,\n    right = _a.right,\n    bottom = _a.bottom;\n  var relativeLeft = left - origin[0];\n  var relativeRight = right - origin[0];\n  var relativeTop = top - origin[1];\n  var relativeBottom = bottom - origin[1];\n  var boundRect = {\n    left: relativeLeft,\n    top: relativeTop,\n    right: relativeRight,\n    bottom: relativeBottom\n  };\n  if (!isBoundRotate(nextPoses, boundRect, 0)) {\n    return [];\n  }\n  var result = [];\n  [[relativeLeft, 0], [relativeRight, 0], [relativeTop, 1], [relativeBottom, 1]].forEach(function (_a) {\n    var boundPos = _a[0],\n      index = _a[1];\n    nextPoses.forEach(function (nextPos) {\n      var relativeRad1 = getRad([0, 0], nextPos);\n      result.push.apply(result, boundRotate(nextPos, boundPos, index).map(function (relativeRad2) {\n        return rad + relativeRad2 - relativeRad1;\n      }).filter(function (nextRad) {\n        return !isBoundRotate(prevPoses, boundRect, nextRad);\n      }).map(function (nextRad) {\n        return throttle(nextRad * 180 / Math.PI, TINY_NUM);\n      }));\n    });\n  });\n  return result;\n}\nfunction renderGuideline(info, React) {\n  var _a;\n  var direction = info.direction,\n    classNames = info.classNames,\n    size = info.size,\n    pos = info.pos,\n    zoom = info.zoom,\n    key = info.key;\n  var isHorizontal = direction === \"horizontal\";\n  var scaleType = isHorizontal ? \"Y\" : \"X\"; // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\n\n  return React.createElement(\"div\", {\n    key: key,\n    className: classNames.join(\" \"),\n    style: (_a = {}, _a[isHorizontal ? \"width\" : \"height\"] = \"\".concat(size), _a.transform = \"translate(\".concat(pos[0], \", \").concat(pos[1], \") translate\").concat(scaleType, \"(-50%) scale\").concat(scaleType, \"(\").concat(zoom, \")\"), _a)\n  });\n}\nfunction renderInnerGuideline(info, React) {\n  return renderGuideline(__assign(__assign({}, info), {\n    classNames: __spreadArray([prefix(\"line\", \"guideline\", info.direction)], info.classNames, true).filter(function (className) {\n      return className;\n    }),\n    size: info.size || \"\".concat(info.sizeValue, \"px\"),\n    pos: info.pos || info.posValue.map(function (v) {\n      return \"\".concat(throttle(v, 0.1), \"px\");\n    })\n  }), React);\n}\nfunction renderSnapPoses(moveable, direction, snapPoses, minPos, targetPos, size, index, React) {\n  var zoom = moveable.props.zoom;\n  return snapPoses.map(function (_a, i) {\n    var type = _a.type,\n      pos = _a.pos;\n    var renderPos = [0, 0];\n    renderPos[index] = minPos;\n    renderPos[index ? 0 : 1] = -targetPos + pos;\n    return renderInnerGuideline({\n      key: \"\".concat(direction, \"TargetGuideline\").concat(i),\n      classNames: [prefix(\"target\", \"bold\", type)],\n      posValue: renderPos,\n      sizeValue: size,\n      zoom: zoom,\n      direction: direction\n    }, React);\n  });\n}\nfunction renderGuidelines(moveable, type, guidelines, targetPos, targetRect, React) {\n  var _a = moveable.props,\n    zoom = _a.zoom,\n    isDisplayInnerSnapDigit = _a.isDisplayInnerSnapDigit;\n  var mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n  var targetStart = targetRect[mainNames.start];\n  var targetEnd = targetRect[mainNames.end];\n  return guidelines.filter(function (_a) {\n    var hide = _a.hide,\n      elementRect = _a.elementRect;\n    if (hide) {\n      return false;\n    }\n    if (isDisplayInnerSnapDigit && elementRect) {\n      // inner\n      var rect = elementRect.rect;\n      if (rect[mainNames.start] <= targetStart && targetEnd <= rect[mainNames.end]) {\n        return false;\n      }\n    }\n    return true;\n  }).map(function (guideline, i) {\n    var pos = guideline.pos,\n      size = guideline.size,\n      element = guideline.element;\n    var renderPos = [-targetPos[0] + pos[0], -targetPos[1] + pos[1]];\n    return renderInnerGuideline({\n      key: \"\".concat(type, \"-default-guideline-\").concat(i),\n      classNames: element ? [prefix(\"bold\")] : [],\n      direction: type,\n      posValue: renderPos,\n      sizeValue: size,\n      zoom: zoom\n    }, React);\n  });\n}\nfunction renderDigitLine(moveable, type, lineType, index, gap, renderPos, className, React) {\n  var _a;\n  var _b = moveable.props,\n    _c = _b.snapDigit,\n    snapDigit = _c === void 0 ? 0 : _c,\n    _d = _b.isDisplaySnapDigit,\n    isDisplaySnapDigit = _d === void 0 ? true : _d,\n    _e = _b.snapDistFormat,\n    snapDistFormat = _e === void 0 ? function (v, type) {\n      // Type can be used render different values.\n      if (type === 'vertical') {\n        return v;\n      }\n      return v;\n    } : _e,\n    zoom = _b.zoom;\n  var scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\n  var sizeName = type === \"vertical\" ? \"height\" : \"width\";\n  var absGap = Math.abs(gap);\n  var snapSize = isDisplaySnapDigit ? parseFloat(absGap.toFixed(snapDigit)) : 0;\n  return React.createElement(\"div\", {\n    key: \"\".concat(type, \"-\").concat(lineType, \"-guideline-\").concat(index),\n    className: prefix(\"guideline-group\", type),\n    style: (_a = {\n      left: \"\".concat(renderPos[0], \"px\"),\n      top: \"\".concat(renderPos[1], \"px\")\n    }, _a[sizeName] = \"\".concat(absGap, \"px\"), _a)\n  }, renderInnerGuideline({\n    direction: type,\n    classNames: [prefix(lineType), className],\n    size: \"100%\",\n    posValue: [0, 0],\n    sizeValue: absGap,\n    zoom: zoom\n  }, React), React.createElement(\"div\", {\n    className: prefix(\"size-value\", \"gap\"),\n    style: {\n      transform: \"translate\".concat(scaleType, \"(-50%) scale(\").concat(zoom, \")\")\n    }\n  }, snapSize > 0 ? snapDistFormat(snapSize, type) : \"\"));\n}\nfunction groupByElementGuidelines(type, guidelines, targetRect, isDisplayInnerSnapDigit) {\n  var index = type === \"vertical\" ? 0 : 1;\n  var otherIndex = type === \"vertical\" ? 1 : 0;\n  var names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n  var targetStart = targetRect[names.start];\n  var targetEnd = targetRect[names.end];\n  return groupBy(guidelines, function (guideline) {\n    return guideline.pos[index];\n  }).map(function (nextGuidelines) {\n    var start = [];\n    var end = [];\n    var inner = [];\n    nextGuidelines.forEach(function (guideline) {\n      var _a, _b;\n      var element = guideline.element;\n      var rect = guideline.elementRect.rect;\n      if (rect[names.end] < targetStart) {\n        start.push(guideline);\n      } else if (targetEnd < rect[names.start]) {\n        end.push(guideline);\n      } else if (rect[names.start] <= targetStart && targetEnd <= rect[names.end] && isDisplayInnerSnapDigit) {\n        var pos = guideline.pos;\n        var elementRect1 = {\n          element: element,\n          rect: __assign(__assign({}, rect), (_a = {}, _a[names.end] = rect[names.start], _a))\n        };\n        var elementRect2 = {\n          element: element,\n          rect: __assign(__assign({}, rect), (_b = {}, _b[names.start] = rect[names.end], _b))\n        };\n        var nextPos1 = [0, 0];\n        var nextPos2 = [0, 0];\n        nextPos1[index] = pos[index];\n        nextPos1[otherIndex] = pos[otherIndex];\n        nextPos2[index] = pos[index];\n        nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\n        start.push({\n          type: type,\n          pos: nextPos1,\n          size: 0,\n          elementRect: elementRect1\n        });\n        end.push({\n          type: type,\n          pos: nextPos2,\n          size: 0,\n          elementRect: elementRect2\n        }); // inner.push(guideline);\n      }\n    });\n\n    start.sort(function (a, b) {\n      return b.pos[otherIndex] - a.pos[otherIndex];\n    });\n    end.sort(function (a, b) {\n      return a.pos[otherIndex] - b.pos[otherIndex];\n    });\n    return {\n      total: nextGuidelines,\n      start: start,\n      end: end,\n      inner: inner\n    };\n  });\n}\nfunction renderDashedGuidelines(moveable, guidelines, targetPos, targetRect, React) {\n  var isDisplayInnerSnapDigit = moveable.props.isDisplayInnerSnapDigit;\n  var rendered = [];\n  [\"vertical\", \"horizontal\"].forEach(function (type) {\n    var nextGuidelines = guidelines.filter(function (guideline) {\n      return guideline.type === type;\n    });\n    var index = type === \"vertical\" ? 1 : 0;\n    var otherIndex = index ? 0 : 1;\n    var groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit);\n    var mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n    var sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    var targetStart = targetRect[mainNames.start];\n    var targetEnd = targetRect[mainNames.end];\n    groups.forEach(function (_a) {\n      var total = _a.total,\n        start = _a.start,\n        end = _a.end,\n        inner = _a.inner;\n      var sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start];\n      var prevRect = targetRect;\n      start.forEach(function (guideline) {\n        var nextRect = guideline.elementRect.rect;\n        var size = prevRect[mainNames.start] - nextRect[mainNames.end];\n        if (size > 0) {\n          var renderPos = [0, 0];\n          renderPos[index] = targetPos[index] + prevRect[mainNames.start] - targetStart - size;\n          renderPos[otherIndex] = sidePos;\n          rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size, renderPos, guideline.className, React));\n        }\n        prevRect = nextRect;\n      });\n      prevRect = targetRect;\n      end.forEach(function (guideline) {\n        var nextRect = guideline.elementRect.rect;\n        var size = nextRect[mainNames.start] - prevRect[mainNames.end];\n        if (size > 0) {\n          var renderPos = [0, 0];\n          renderPos[index] = targetPos[index] + prevRect[mainNames.end] - targetStart;\n          renderPos[otherIndex] = sidePos;\n          rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size, renderPos, guideline.className, React));\n        }\n        prevRect = nextRect;\n      });\n      inner.forEach(function (guideline) {\n        var nextRect = guideline.elementRect.rect;\n        var size1 = targetStart - nextRect[mainNames.start];\n        var size2 = nextRect[mainNames.end] - targetEnd;\n        var renderPos1 = [0, 0];\n        var renderPos2 = [0, 0];\n        renderPos1[index] = targetPos[index] - size1;\n        renderPos1[otherIndex] = sidePos;\n        renderPos2[index] = targetPos[index] + targetEnd - targetStart;\n        renderPos2[otherIndex] = sidePos;\n        rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size1, renderPos1, guideline.className, React));\n        rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size2, renderPos2, guideline.className, React));\n      });\n    });\n  });\n  return rendered;\n}\nfunction renderGapGuidelines(moveable, guidelines, targetPos, targetRect, React) {\n  var rendered = [];\n  [\"horizontal\", \"vertical\"].forEach(function (type) {\n    var nextGuidelines = guidelines.filter(function (guideline) {\n      return guideline.type === type;\n    });\n    var index = type === \"vertical\" ? 0 : 1;\n    var otherIndex = index ? 0 : 1;\n    var mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n    var sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    var targetStart = targetRect[mainNames.start];\n    var targetEnd = targetRect[mainNames.end];\n    var targetSideStart = targetRect[sideNames.start];\n    var targetSideEnd = targetRect[sideNames.end];\n    nextGuidelines.forEach(function (_a) {\n      var gap = _a.gap,\n        gapRects = _a.gapRects,\n        className = _a.className;\n      var sideStartPos = Math.max.apply(Math, __spreadArray([targetSideStart], gapRects.map(function (_a) {\n        var rect = _a.rect;\n        return rect[sideNames.start];\n      }), false));\n      var sideEndPos = Math.min.apply(Math, __spreadArray([targetSideEnd], gapRects.map(function (_a) {\n        var rect = _a.rect;\n        return rect[sideNames.end];\n      }), false));\n      var sideCenterPos = (sideStartPos + sideEndPos) / 2;\n      if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd) / 2) {\n        return;\n      }\n      gapRects.forEach(function (_a) {\n        var rect = _a.rect;\n        var renderPos = [targetPos[0], targetPos[1]];\n        if (rect[mainNames.end] < targetStart) {\n          renderPos[index] += rect[mainNames.end] - targetStart;\n        } else if (targetEnd < rect[mainNames.start]) {\n          renderPos[index] += rect[mainNames.start] - targetStart - gap;\n        } else {\n          return;\n        }\n        renderPos[otherIndex] += sideCenterPos - targetSideStart;\n        rendered.push(renderDigitLine(moveable, index ? \"vertical\" : \"horizontal\", \"gap\", rendered.length, gap, renderPos, className, React));\n      });\n    });\n  });\n  return rendered;\n}\nfunction solveEquation(pos1, pos2, snapOffset, isVertical) {\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (Math.abs(dx) < TINY_NUM$1) {\n    dx = 0;\n  }\n  if (Math.abs(dy) < TINY_NUM$1) {\n    dy = 0;\n  }\n  if (!dx) {\n    // y = 0 * x + b\n    // only horizontal\n    if (!isVertical) {\n      return [0, snapOffset];\n    }\n    return [0, 0];\n  }\n  if (!dy) {\n    // only vertical\n    if (isVertical) {\n      return [snapOffset, 0];\n    }\n    return [0, 0];\n  } // y = ax + b\n\n  var a = dy / dx;\n  var b = pos1[1] - a * pos1[0];\n  if (isVertical) {\n    // y = a * x + b\n    var y = a * (pos2[0] + snapOffset) + b;\n    return [snapOffset, y - pos2[1]];\n  } else {\n    // x = (y - b) / a\n    var x = (pos2[1] + snapOffset - b) / a;\n    return [x - pos2[0], snapOffset];\n  }\n}\nfunction solveNextOffset(pos1, pos2, offset, isVertical, datas) {\n  var sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n  if (!sizeOffset) {\n    return {\n      isOutside: false,\n      offset: [0, 0]\n    };\n  }\n  var size = getDist$1(pos1, pos2);\n  var dist1 = getDist$1(sizeOffset, pos1);\n  var dist2 = getDist$1(sizeOffset, pos2);\n  var isOutside = dist1 > size || dist2 > size;\n  var _a = getDragDist({\n      datas: datas,\n      distX: sizeOffset[0],\n      distY: sizeOffset[1]\n    }),\n    widthOffset = _a[0],\n    heightOffset = _a[1];\n  return {\n    offset: [widthOffset, heightOffset],\n    isOutside: isOutside\n  };\n}\nfunction getSnapBound(boundInfo, snapInfo) {\n  if (boundInfo.isBound) {\n    return boundInfo.offset;\n  } else if (snapInfo.isSnap) {\n    return getNearestSnapGuidelineInfo(snapInfo).offset;\n  }\n  return 0;\n}\nfunction checkThrottleDragRotate(throttleDragRotate, _a, _b, _c, _d) {\n  var distX = _a[0],\n    distY = _a[1];\n  var isVerticalBound = _b[0],\n    isHorizontalBound = _b[1];\n  var isVerticalSnap = _c[0],\n    isHorizontalSnap = _c[1];\n  var verticalOffset = _d[0],\n    horizontalOffset = _d[1];\n  var offsetX = -verticalOffset;\n  var offsetY = -horizontalOffset;\n  if (throttleDragRotate && distX && distY) {\n    offsetX = 0;\n    offsetY = 0;\n    var adjustPoses = [];\n    if (isVerticalBound && isHorizontalBound) {\n      adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n    } else if (isVerticalBound) {\n      adjustPoses.push([verticalOffset, 0]);\n    } else if (isHorizontalBound) {\n      adjustPoses.push([0, horizontalOffset]);\n    } else if (isVerticalSnap && isHorizontalSnap) {\n      adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n    } else if (isVerticalSnap) {\n      adjustPoses.push([verticalOffset, 0]);\n    } else if (isHorizontalSnap) {\n      adjustPoses.push([0, horizontalOffset]);\n    }\n    if (adjustPoses.length) {\n      adjustPoses.sort(function (a, b) {\n        return getDistSize(minus([distX, distY], a)) - getDistSize(minus([distX, distY], b));\n      });\n      var adjustPos = adjustPoses[0];\n      if (adjustPos[0] && Math.abs(distX) > TINY_NUM$1) {\n        offsetX = -adjustPos[0];\n        offsetY = distY * Math.abs(distX + offsetX) / Math.abs(distX) - distY;\n      } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM$1) {\n        var prevDistY = distY;\n        offsetY = -adjustPos[1];\n        offsetX = distX * Math.abs(distY + offsetY) / Math.abs(prevDistY) - distX;\n      }\n      if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n        if (Math.abs(offsetX) > TINY_NUM$1 && Math.abs(offsetX) < Math.abs(verticalOffset)) {\n          var scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n          offsetX *= scale;\n          offsetY *= scale;\n        } else if (Math.abs(offsetY) > TINY_NUM$1 && Math.abs(offsetY) < Math.abs(horizontalOffset)) {\n          var scale = Math.abs(horizontalOffset) / Math.abs(offsetY);\n          offsetX *= scale;\n          offsetY *= scale;\n        } else {\n          offsetX = maxOffset(-verticalOffset, offsetX);\n          offsetY = maxOffset(-horizontalOffset, offsetY);\n        }\n      }\n    }\n  } else {\n    offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n    offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n  }\n  return [offsetX, offsetY];\n}\nfunction checkSnapBoundsDrag(moveable, distX, distY, throttleDragRotate, isRequest, datas) {\n  if (!hasGuidelines(moveable, \"draggable\")) {\n    return [{\n      isSnap: false,\n      isBound: false,\n      offset: 0\n    }, {\n      isSnap: false,\n      isBound: false,\n      offset: 0\n    }];\n  }\n  var poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n  var _a = getRect(poses),\n    left = _a.left,\n    right = _a.right,\n    top = _a.top,\n    bottom = _a.bottom;\n  var boundPoses = {\n    horizontal: poses.map(function (pos) {\n      return pos[1];\n    }),\n    vertical: poses.map(function (pos) {\n      return pos[0];\n    })\n  };\n  var snapDirections = getSnapDirections(moveable.props.snapDirections);\n  var snapPoses = splitSnapDirectionPoses(snapDirections, {\n    left: left,\n    right: right,\n    top: top,\n    bottom: bottom,\n    center: (left + right) / 2,\n    middle: (top + bottom) / 2\n  });\n  var _b = checkMoveableSnapBounds(moveable, isRequest, snapPoses, boundPoses),\n    verticalSnapBoundInfo = _b.vertical,\n    horizontalSnapBoundInfo = _b.horizontal;\n  var _c = getInnerBoundDragInfo(moveable, poses, datas),\n    verticalInnerBoundInfo = _c.vertical,\n    horizontalInnerBoundInfo = _c.horizontal;\n  var isVerticalSnap = verticalSnapBoundInfo.isSnap;\n  var isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n  var isVerticalBound = verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n  var isHorizontalBound = horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n  var verticalOffset = maxOffset(verticalSnapBoundInfo.offset, verticalInnerBoundInfo.offset);\n  var horizontalOffset = maxOffset(horizontalSnapBoundInfo.offset, horizontalInnerBoundInfo.offset);\n  var _d = checkThrottleDragRotate(throttleDragRotate, [distX, distY], [isVerticalBound, isHorizontalBound], [isVerticalSnap, isHorizontalSnap], [verticalOffset, horizontalOffset]),\n    offsetX = _d[0],\n    offsetY = _d[1];\n  return [{\n    isBound: isVerticalBound,\n    isSnap: isVerticalSnap,\n    offset: offsetX\n  }, {\n    isBound: isHorizontalBound,\n    isSnap: isHorizontalSnap,\n    offset: offsetY\n  }];\n}\nfunction checkMoveableSnapBounds(moveable, isRequest, poses, boundPoses) {\n  if (boundPoses === void 0) {\n    boundPoses = poses;\n  }\n  var _a = checkBoundPoses(getBounds(moveable), boundPoses.vertical, boundPoses.horizontal),\n    horizontalBoundInfos = _a.horizontal,\n    verticalBoundInfos = _a.vertical;\n  var _b = isRequest ? {\n      horizontal: {\n        isSnap: false,\n        index: -1\n      },\n      vertical: {\n        isSnap: false,\n        index: -1\n      }\n    } : checkMoveableSnapPoses(moveable, poses.vertical, poses.horizontal),\n    horizontalSnapInfo = _b.horizontal,\n    verticalSnapInfo = _b.vertical;\n  var horizontalOffset = getSnapBound(horizontalBoundInfos[0], horizontalSnapInfo);\n  var verticalOffset = getSnapBound(verticalBoundInfos[0], verticalSnapInfo);\n  var horizontalDist = Math.abs(horizontalOffset);\n  var verticalDist = Math.abs(verticalOffset);\n  return {\n    horizontal: {\n      isBound: horizontalBoundInfos[0].isBound,\n      isSnap: horizontalSnapInfo.isSnap,\n      snapIndex: horizontalSnapInfo.index,\n      offset: horizontalOffset,\n      dist: horizontalDist,\n      bounds: horizontalBoundInfos,\n      snap: horizontalSnapInfo\n    },\n    vertical: {\n      isBound: verticalBoundInfos[0].isBound,\n      isSnap: verticalSnapInfo.isSnap,\n      snapIndex: verticalSnapInfo.index,\n      offset: verticalOffset,\n      dist: verticalDist,\n      bounds: verticalBoundInfos,\n      snap: verticalSnapInfo\n    }\n  };\n}\nfunction checkSnapBounds(guideines, bounds, posesX, posesY, snapThreshold) {\n  var _a = checkBoundPoses(bounds, posesX, posesY),\n    horizontalBoundInfos = _a.horizontal,\n    verticalBoundInfos = _a.vertical; // options.isRequest ? {\n  //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\n  //     vertical: { isSnap: false, index: -1 } as SnapInfo,\n  // } :\n\n  var _b = checkSnapPoses(guideines, posesX, posesY, snapThreshold),\n    horizontalSnapInfo = _b.horizontal,\n    verticalSnapInfo = _b.vertical;\n  var horizontalOffset = getSnapBound(horizontalBoundInfos[0], horizontalSnapInfo);\n  var verticalOffset = getSnapBound(verticalBoundInfos[0], verticalSnapInfo);\n  var horizontalDist = Math.abs(horizontalOffset);\n  var verticalDist = Math.abs(verticalOffset);\n  return {\n    horizontal: {\n      isBound: horizontalBoundInfos[0].isBound,\n      isSnap: horizontalSnapInfo.isSnap,\n      snapIndex: horizontalSnapInfo.index,\n      offset: horizontalOffset,\n      dist: horizontalDist,\n      bounds: horizontalBoundInfos,\n      snap: horizontalSnapInfo\n    },\n    vertical: {\n      isBound: verticalBoundInfos[0].isBound,\n      isSnap: verticalSnapInfo.isSnap,\n      snapIndex: verticalSnapInfo.index,\n      offset: verticalOffset,\n      dist: verticalDist,\n      bounds: verticalBoundInfos,\n      snap: verticalSnapInfo\n    }\n  };\n}\nfunction checkSnapRightLine(startPos, endPos, snapBoundInfo, keepRatio) {\n  var rad = getRad(startPos, endPos) / Math.PI * 180;\n  var _a = snapBoundInfo.vertical,\n    isVerticalBound = _a.isBound,\n    isVerticalSnap = _a.isSnap,\n    verticalDist = _a.dist,\n    _b = snapBoundInfo.horizontal,\n    isHorizontalBound = _b.isBound,\n    isHorizontalSnap = _b.isSnap,\n    horizontalDist = _b.dist;\n  var rad180 = rad % 180;\n  var isHorizontalLine = rad180 < 3 || rad180 > 177;\n  var isVerticalLine = rad180 > 87 && rad180 < 93;\n  if (horizontalDist < verticalDist) {\n    if (isVerticalBound || isVerticalSnap && !isVerticalLine && (!keepRatio || !isHorizontalLine)) {\n      return \"vertical\";\n    }\n  }\n  if (isHorizontalBound || isHorizontalSnap && !isHorizontalLine && (!keepRatio || !isVerticalLine)) {\n    return \"horizontal\";\n  }\n  return \"\";\n}\nfunction getSnapBoundInfo(moveable, poses, directions, keepRatio, isRequest, datas) {\n  return directions.map(function (_a) {\n    var startDirection = _a[0],\n      endDirection = _a[1];\n    var otherStartPos = getPosByDirection(poses, startDirection);\n    var otherEndPos = getPosByDirection(poses, endDirection);\n    var snapBoundInfo = keepRatio ? checkSnapBoundsKeepRatio(moveable, otherStartPos, otherEndPos, isRequest) : checkMoveableSnapBounds(moveable, isRequest, {\n      vertical: [otherEndPos[0]],\n      horizontal: [otherEndPos[1]]\n    });\n    var _b = snapBoundInfo.horizontal,\n      // dist: otherHorizontalDist,\n      otherHorizontalOffset = _b.offset,\n      isOtherHorizontalBound = _b.isBound,\n      isOtherHorizontalSnap = _b.isSnap,\n      _c = snapBoundInfo.vertical,\n      // dist: otherVerticalDist,\n      otherVerticalOffset = _c.offset,\n      isOtherVerticalBound = _c.isBound,\n      isOtherVerticalSnap = _c.isSnap;\n    var multiple = minus(endDirection, startDirection);\n    if (!otherVerticalOffset && !otherHorizontalOffset) {\n      return {\n        isBound: isOtherVerticalBound || isOtherHorizontalBound,\n        isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n        sign: multiple,\n        offset: [0, 0]\n      };\n    }\n    var snapLine = checkSnapRightLine(otherStartPos, otherEndPos, snapBoundInfo, keepRatio);\n    if (!snapLine) {\n      return {\n        sign: multiple,\n        isBound: false,\n        isSnap: false,\n        offset: [0, 0]\n      };\n    }\n    var isVertical = snapLine === \"vertical\";\n    var sizeOffset = [0, 0];\n    if (!keepRatio && Math.abs(endDirection[0]) === 1 && Math.abs(endDirection[1]) === 1 && startDirection[0] !== endDirection[0] && startDirection[1] !== endDirection[1]) {\n      sizeOffset = getDragDist({\n        datas: datas,\n        distX: -otherVerticalOffset,\n        distY: -otherHorizontalOffset\n      });\n    } else {\n      sizeOffset = solveNextOffset(otherStartPos, otherEndPos, -(isVertical ? otherVerticalOffset : otherHorizontalOffset), isVertical, datas).offset;\n    }\n    sizeOffset = sizeOffset.map(function (size, i) {\n      return size * (multiple[i] ? 2 / multiple[i] : 0);\n    });\n    return {\n      sign: multiple,\n      isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n      isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n      offset: sizeOffset\n    };\n  });\n}\nfunction getSnapBoundOffset(boundInfo, snapInfo) {\n  if (boundInfo.isBound) {\n    return boundInfo.offset;\n  } else if (snapInfo.isSnap) {\n    return snapInfo.offset;\n  }\n  return 0;\n}\nfunction checkSnapBoundsKeepRatio(moveable, startPos, endPos, isRequest) {\n  var _a = checkBoundKeepRatio(moveable, startPos, endPos),\n    horizontalBoundInfo = _a.horizontal,\n    verticalBoundInfo = _a.vertical;\n  var _b = isRequest ? {\n      horizontal: {\n        isSnap: false\n      },\n      vertical: {\n        isSnap: false\n      }\n    } : checkSnapKeepRatio(moveable, startPos, endPos),\n    horizontalSnapInfo = _b.horizontal,\n    verticalSnapInfo = _b.vertical;\n  var horizontalOffset = getSnapBoundOffset(horizontalBoundInfo, horizontalSnapInfo);\n  var verticalOffset = getSnapBoundOffset(verticalBoundInfo, verticalSnapInfo);\n  var horizontalDist = Math.abs(horizontalOffset);\n  var verticalDist = Math.abs(verticalOffset);\n  return {\n    horizontal: {\n      isBound: horizontalBoundInfo.isBound,\n      isSnap: horizontalSnapInfo.isSnap,\n      offset: horizontalOffset,\n      dist: horizontalDist\n    },\n    vertical: {\n      isBound: verticalBoundInfo.isBound,\n      isSnap: verticalSnapInfo.isSnap,\n      offset: verticalOffset,\n      dist: verticalDist\n    }\n  };\n}\nfunction checkMaxBounds(moveable, poses, direction, fixedPosition, datas) {\n  var fixedDirection = [-direction[0], -direction[1]];\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height;\n  var bounds = moveable.props.bounds;\n  var maxWidth = Infinity;\n  var maxHeight = Infinity;\n  if (bounds) {\n    var directions = [[direction[0], -direction[1]], [-direction[0], direction[1]]];\n    var _b = bounds.left,\n      left_1 = _b === void 0 ? -Infinity : _b,\n      _c = bounds.top,\n      top_1 = _c === void 0 ? -Infinity : _c,\n      _d = bounds.right,\n      right_1 = _d === void 0 ? Infinity : _d,\n      _e = bounds.bottom,\n      bottom_1 = _e === void 0 ? Infinity : _e;\n    directions.forEach(function (otherDirection) {\n      var isCheckVertical = otherDirection[0] !== fixedDirection[0];\n      var isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n      var otherPos = getPosByDirection(poses, otherDirection);\n      var deg = getRad(fixedPosition, otherPos) * 360 / Math.PI;\n      if (isCheckHorizontal) {\n        var nextOtherPos = otherPos.slice();\n        if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n          nextOtherPos[1] = fixedPosition[1];\n        }\n        var _a = solveNextOffset(fixedPosition, nextOtherPos, (fixedPosition[1] < otherPos[1] ? bottom_1 : top_1) - otherPos[1], false, datas),\n          _b = _a.offset,\n          heightOffset = _b[1],\n          isHeightOutside = _a.isOutside;\n        if (!isNaN(heightOffset)) {\n          maxHeight = height + (isHeightOutside ? 1 : -1) * Math.abs(heightOffset);\n        }\n      }\n      if (isCheckVertical) {\n        var nextOtherPos = otherPos.slice();\n        if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n          nextOtherPos[0] = fixedPosition[0];\n        }\n        var _c = solveNextOffset(fixedPosition, nextOtherPos, (fixedPosition[0] < otherPos[0] ? right_1 : left_1) - otherPos[0], true, datas),\n          widthOffset = _c.offset[0],\n          isWidthOutside = _c.isOutside;\n        if (!isNaN(widthOffset)) {\n          maxWidth = width + (isWidthOutside ? 1 : -1) * Math.abs(widthOffset);\n        }\n      }\n    });\n  }\n  return {\n    maxWidth: maxWidth,\n    maxHeight: maxHeight\n  };\n}\nfunction snapStart(moveable) {\n  var state = moveable.state;\n  if (state.guidelines && state.guidelines.length) {\n    return;\n  }\n  var container = moveable.state.container;\n  var snapContainer = moveable.props.snapContainer || container;\n  var containerClientRect = state.containerClientRect;\n  var snapOffset = {\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0\n  };\n  if (container !== snapContainer) {\n    var snapContainerTarget = getRefTarget(snapContainer, true);\n    if (snapContainerTarget) {\n      var snapContainerRect = getClientRect(snapContainerTarget);\n      var offset1 = getDragDistByState(state, [snapContainerRect.left - containerClientRect.left, snapContainerRect.top - containerClientRect.top]);\n      var offset2 = getDragDistByState(state, [snapContainerRect.right - containerClientRect.right, snapContainerRect.bottom - containerClientRect.bottom]);\n      snapOffset.left = throttle(offset1[0], 0.1);\n      snapOffset.top = throttle(offset1[1], 0.1);\n      snapOffset.right = throttle(offset2[0], 0.1);\n      snapOffset.bottom = throttle(offset2[1], 0.1);\n    }\n  }\n  state.snapOffset = snapOffset;\n  state.guidelines = getTotalGuidelines(moveable);\n  state.enableSnap = true;\n}\nfunction getNextFixedPoses(matrix, width, height, fixedDirection, fixedPos, is3d) {\n  var nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n  var nextFixedPos = getPosByDirection(nextPoses, fixedDirection);\n  return getAbsolutePoses(nextPoses, minus(fixedPos, nextFixedPos));\n}\nfunction getSizeOffsetInfo(moveable, poses, direction, keepRatio, isRequest, datas) {\n  var fixedDirection = datas.fixedDirection;\n  var directions = getCheckSnapDirections(direction, fixedDirection, keepRatio);\n  var innerBoundLineInfos = getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio);\n  var offsets = __spreadArray(__spreadArray([], getSnapBoundInfo(moveable, poses, directions, keepRatio, isRequest, datas), true), getInnerBoundInfo(moveable, innerBoundLineInfos, datas), true);\n  var widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n  var heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n  return {\n    width: {\n      isBound: widthOffsetInfo.isBound,\n      offset: widthOffsetInfo.offset[0]\n    },\n    height: {\n      isBound: heightOffsetInfo.isBound,\n      offset: heightOffsetInfo.offset[1]\n    }\n  };\n}\nfunction recheckSizeByTwoDirection(moveable, poses, width, height, maxWidth, maxHeight, direction, isRequest, datas) {\n  var snapPos = getPosByDirection(poses, direction);\n  var _a = checkMoveableSnapBounds(moveable, isRequest, {\n      vertical: [snapPos[0]],\n      horizontal: [snapPos[1]]\n    }),\n    horizontalOffset = _a.horizontal.offset,\n    verticalOffset = _a.vertical.offset;\n  if (verticalOffset || horizontalOffset) {\n    var _b = getDragDist({\n        datas: datas,\n        distX: -verticalOffset,\n        distY: -horizontalOffset\n      }),\n      nextWidthOffset = _b[0],\n      nextHeightOffset = _b[1];\n    var nextWidth = Math.min(maxWidth || Infinity, width + direction[0] * nextWidthOffset);\n    var nextHeight = Math.min(maxHeight || Infinity, height + direction[1] * nextHeightOffset);\n    return [nextWidth - width, nextHeight - height];\n  }\n  return [0, 0];\n}\nfunction checkSizeDist(moveable, getNextPoses, width, height, direction, fixedPosition, isRequest, datas) {\n  var poses = getAbsolutePosesByState(moveable.state);\n  var keepRatio = moveable.props.keepRatio;\n  var widthOffset = 0;\n  var heightOffset = 0;\n  for (var i = 0; i < 2; ++i) {\n    var nextPoses = getNextPoses(widthOffset, heightOffset);\n    var _a = getSizeOffsetInfo(moveable, nextPoses, direction, keepRatio, isRequest, datas),\n      widthOffsetInfo = _a.width,\n      heightOffsetInfo = _a.height;\n    var isWidthBound = widthOffsetInfo.isBound;\n    var isHeightBound = heightOffsetInfo.isBound;\n    var nextWidthOffset = widthOffsetInfo.offset;\n    var nextHeightOffset = heightOffsetInfo.offset;\n    if (i === 1) {\n      if (!isWidthBound) {\n        nextWidthOffset = 0;\n      }\n      if (!isHeightBound) {\n        nextHeightOffset = 0;\n      }\n    }\n    if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n      return [0, 0];\n    }\n    if (keepRatio) {\n      var widthDist = Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n      var heightDist = Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n      var isGetWidthOffset = isWidthBound && isHeightBound ? widthDist < heightDist : isHeightBound || !isWidthBound && widthDist < heightDist;\n      if (isGetWidthOffset) {\n        // width : height = ? : heightOffset\n        nextWidthOffset = width * nextHeightOffset / height;\n      } else {\n        // width : height = widthOffset : ?\n        nextHeightOffset = height * nextWidthOffset / width;\n      }\n    }\n    widthOffset += nextWidthOffset;\n    heightOffset += nextHeightOffset;\n  }\n  if (direction[0] && direction[1]) {\n    var _b = checkMaxBounds(moveable, poses, direction, fixedPosition, datas),\n      maxWidth = _b.maxWidth,\n      maxHeight = _b.maxHeight;\n    var _c = recheckSizeByTwoDirection(moveable, getNextPoses(widthOffset, heightOffset).map(function (pos) {\n        return pos.map(function (p) {\n          return throttle(p, FLOAT_POINT_NUM);\n        });\n      }), width + widthOffset, height + heightOffset, maxWidth, maxHeight, direction, isRequest, datas),\n      nextWidthOffset = _c[0],\n      nextHeightOffset = _c[1];\n    widthOffset += nextWidthOffset;\n    heightOffset += nextHeightOffset;\n  }\n  return [widthOffset, heightOffset];\n}\nfunction checkSnapRotate(moveable, rect, origin, rotation) {\n  if (!hasGuidelines(moveable, \"rotatable\")) {\n    return rotation;\n  }\n  var pos1 = rect.pos1,\n    pos2 = rect.pos2,\n    pos3 = rect.pos3,\n    pos4 = rect.pos4;\n  var rad = rotation * Math.PI / 180;\n  var prevPoses = [pos1, pos2, pos3, pos4].map(function (pos) {\n    return minus(pos, origin);\n  });\n  var nextPoses = prevPoses.map(function (pos) {\n    return rotate(pos, rad);\n  });\n  var result = __spreadArray(__spreadArray([], checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation), true), checkRotateInnerBounds(moveable, prevPoses, nextPoses, origin, rotation), true);\n  result.sort(function (a, b) {\n    return Math.abs(a - rotation) - Math.abs(b - rotation);\n  });\n  if (result.length) {\n    return result[0];\n  } else {\n    return rotation;\n  }\n}\nfunction checkSnapResize(moveable, width, height, direction, fixedPosition, isRequest, datas) {\n  if (!hasGuidelines(moveable, \"resizable\")) {\n    return [0, 0];\n  }\n  var fixedDirection = datas.fixedDirection;\n  var _a = moveable.state,\n    allMatrix = _a.allMatrix,\n    is3d = _a.is3d;\n  return checkSizeDist(moveable, function (widthOffset, heightOffset) {\n    return getNextFixedPoses(allMatrix, width + widthOffset, height + heightOffset, fixedDirection, fixedPosition, is3d);\n  }, width, height, direction, fixedPosition, isRequest, datas);\n}\nfunction checkSnapScale(moveable, scale, direction, isRequest, datas) {\n  if (!hasGuidelines(moveable, \"scalable\")) {\n    return [0, 0];\n  }\n  var startOffsetWidth = datas.startOffsetWidth,\n    startOffsetHeight = datas.startOffsetHeight,\n    fixedPosition = datas.fixedPosition,\n    fixedDirection = datas.fixedDirection,\n    is3d = datas.is3d;\n  var sizeDist = checkSizeDist(moveable, function (widthOffset, heightOffset) {\n    return getNextFixedPoses(scaleMatrix(datas, plus(scale, [widthOffset / startOffsetWidth, heightOffset / startOffsetHeight])), startOffsetWidth, startOffsetHeight, fixedDirection, fixedPosition, is3d);\n  }, startOffsetWidth, startOffsetHeight, direction, fixedPosition, isRequest, datas);\n  return [sizeDist[0] / startOffsetWidth, sizeDist[1] / startOffsetHeight];\n}\nfunction startCheckSnapDrag(moveable, datas) {\n  datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\nfunction getSnapGuidelines(posInfos) {\n  var guidelines = [];\n  posInfos.forEach(function (posInfo) {\n    posInfo.guidelineInfos.forEach(function (_a) {\n      var guideline = _a.guideline;\n      if (guidelines.indexOf(guideline) > -1) {\n        return;\n      }\n      guidelines.push(guideline);\n    });\n  });\n  return guidelines;\n}\nfunction addBoundGuidelines(moveable, verticalPoses, horizontalPoses, verticalSnapPoses, horizontalSnapPoses, externalBounds) {\n  var _a = checkBoundPoses(getBounds(moveable, externalBounds), verticalPoses, horizontalPoses),\n    verticalBoundInfos = _a.vertical,\n    horizontalBoundInfos = _a.horizontal;\n  verticalBoundInfos.forEach(function (info) {\n    if (info.isBound) {\n      verticalSnapPoses.push({\n        type: \"bounds\",\n        pos: info.pos\n      });\n    }\n  });\n  horizontalBoundInfos.forEach(function (info) {\n    if (info.isBound) {\n      horizontalSnapPoses.push({\n        type: \"bounds\",\n        pos: info.pos\n      });\n    }\n  });\n  var _b = checkInnerBoundPoses(moveable),\n    verticalInnerBoundPoses = _b.vertical,\n    horizontalInnerBoundPoses = _b.horizontal;\n  verticalInnerBoundPoses.forEach(function (innerPos) {\n    if (findIndex(verticalSnapPoses, function (_a) {\n      var type = _a.type,\n        pos = _a.pos;\n      return type === \"bounds\" && pos === innerPos;\n    }) >= 0) {\n      return;\n    }\n    verticalSnapPoses.push({\n      type: \"bounds\",\n      pos: innerPos\n    });\n  });\n  horizontalInnerBoundPoses.forEach(function (innerPos) {\n    if (findIndex(horizontalSnapPoses, function (_a) {\n      var type = _a.type,\n        pos = _a.pos;\n      return type === \"bounds\" && pos === innerPos;\n    }) >= 0) {\n      return;\n    }\n    horizontalSnapPoses.push({\n      type: \"bounds\",\n      pos: innerPos\n    });\n  });\n}\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\n\nvar Snappable = {\n  name: \"snappable\",\n  dragRelation: \"strong\",\n  props: {\n    snappable: [Boolean, Array],\n    snapContainer: Object,\n    snapDirections: [Boolean, Object],\n    elementSnapDirections: [Boolean, Object],\n    snapGap: Boolean,\n    snapGridWidth: Number,\n    snapGridHeight: Number,\n    isDisplaySnapDigit: Boolean,\n    isDisplayInnerSnapDigit: Boolean,\n    snapDigit: Number,\n    snapThreshold: Number,\n    horizontalGuidelines: Array,\n    verticalGuidelines: Array,\n    elementGuidelines: Array,\n    bounds: Object,\n    innerBounds: Object,\n    snapDistFormat: Function\n  },\n  events: {\n    onSnap: \"snap\"\n  },\n  css: [\":host {\\n    --bounds-color: #d66;\\n}\\n.guideline {\\n    pointer-events: none;\\n    z-index: 2;\\n}\\n.guideline.bounds {\\n    background: #d66;\\n    background: var(--bounds-color);\\n}\\n.guideline-group {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n}\\n.guideline-group .size-value {\\n    position: absolute;\\n    color: #f55;\\n    font-size: 12px;\\n    font-weight: bold;\\n}\\n.guideline-group.horizontal .size-value {\\n    transform-origin: 50% 100%;\\n    transform: translateX(-50%);\\n    left: 50%;\\n    bottom: 5px;\\n}\\n.guideline-group.vertical .size-value {\\n    transform-origin: 0% 50%;\\n    top: 50%;\\n    transform: translateY(-50%);\\n    left: 5px;\\n}\\n.guideline.gap {\\n    background: #f55;\\n}\\n.size-value.gap {\\n    color: #f55;\\n}\\n\"],\n  render: function (moveable, React) {\n    var state = moveable.state;\n    var targetTop = state.top,\n      targetLeft = state.left,\n      pos1 = state.pos1,\n      pos2 = state.pos2,\n      pos3 = state.pos3,\n      pos4 = state.pos4,\n      snapRenderInfo = state.snapRenderInfo;\n    if (!snapRenderInfo || !hasGuidelines(moveable, \"\")) {\n      return [];\n    }\n    state.guidelines = getTotalGuidelines(moveable);\n    var minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n    var minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n    var externalPoses = snapRenderInfo.externalPoses || [];\n    var poses = getAbsolutePosesByState(moveable.state);\n    var verticalSnapPoses = [];\n    var horizontalSnapPoses = [];\n    var verticalGuidelines = [];\n    var horizontalGuidelines = [];\n    var snapInfos = [];\n    var _a = getRect(poses),\n      width = _a.width,\n      height = _a.height,\n      top = _a.top,\n      left = _a.left,\n      bottom = _a.bottom,\n      right = _a.right;\n    var targetRect = {\n      left: left,\n      right: right,\n      top: top,\n      bottom: bottom,\n      center: (left + right) / 2,\n      middle: (top + bottom) / 2\n    };\n    var hasExternalPoses = externalPoses.length > 0;\n    var externalRect = hasExternalPoses ? getRect(externalPoses) : {};\n    if (!snapRenderInfo.request) {\n      if (snapRenderInfo.direction) {\n        snapInfos.push(getSnapInfosByDirection(moveable, poses, snapRenderInfo.direction));\n      }\n      if (snapRenderInfo.snap) {\n        var rect = getRect(poses);\n        if (snapRenderInfo.center) {\n          rect.middle = (rect.top + rect.bottom) / 2;\n          rect.center = (rect.left + rect.right) / 2;\n        }\n        snapInfos.push(checkSnaps(moveable, rect, 1));\n      }\n      if (hasExternalPoses) {\n        if (snapRenderInfo.center) {\n          externalRect.middle = (externalRect.top + externalRect.bottom) / 2;\n          externalRect.center = (externalRect.left + externalRect.right) / 2;\n        }\n        snapInfos.push(checkSnaps(moveable, externalRect, 1));\n      }\n      snapInfos.forEach(function (snapInfo) {\n        var verticalPosInfos = snapInfo.vertical.posInfos,\n          horizontalPosInfos = snapInfo.horizontal.posInfos;\n        verticalSnapPoses.push.apply(verticalSnapPoses, verticalPosInfos.filter(function (_a) {\n          var guidelineInfos = _a.guidelineInfos;\n          return guidelineInfos.some(function (_a) {\n            var guideline = _a.guideline;\n            return !guideline.hide;\n          });\n        }).map(function (posInfo) {\n          return {\n            type: \"snap\",\n            pos: posInfo.pos\n          };\n        }));\n        horizontalSnapPoses.push.apply(horizontalSnapPoses, horizontalPosInfos.filter(function (_a) {\n          var guidelineInfos = _a.guidelineInfos;\n          return guidelineInfos.some(function (_a) {\n            var guideline = _a.guideline;\n            return !guideline.hide;\n          });\n        }).map(function (posInfo) {\n          return {\n            type: \"snap\",\n            pos: posInfo.pos\n          };\n        }));\n        verticalGuidelines.push.apply(verticalGuidelines, getSnapGuidelines(verticalPosInfos));\n        horizontalGuidelines.push.apply(horizontalGuidelines, getSnapGuidelines(horizontalPosInfos));\n      });\n    }\n    addBoundGuidelines(moveable, [left, right], [top, bottom], verticalSnapPoses, horizontalSnapPoses);\n    if (hasExternalPoses) {\n      addBoundGuidelines(moveable, [externalRect.left, externalRect.right], [externalRect.top, externalRect.bottom], verticalSnapPoses, horizontalSnapPoses, snapRenderInfo.externalBounds);\n    }\n    var allGuidelines = __spreadArray(__spreadArray([], verticalGuidelines, true), horizontalGuidelines, true);\n    var elementGuidelines = allGuidelines.filter(function (guideline) {\n      return guideline.element && !guideline.gapRects;\n    });\n    var gapGuidelines = allGuidelines.filter(function (guideline) {\n      return guideline.gapRects;\n    });\n    triggerEvent(moveable, \"onSnap\", {\n      guidelines: allGuidelines.filter(function (_a) {\n        var element = _a.element;\n        return !element;\n      }),\n      elements: elementGuidelines,\n      gaps: gapGuidelines\n    }, true);\n    return __spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], renderDashedGuidelines(moveable, elementGuidelines, [minLeft, minTop], targetRect, React), true), renderGapGuidelines(moveable, gapGuidelines, [minLeft, minTop], targetRect, React), true), renderGuidelines(moveable, \"horizontal\", horizontalGuidelines, [targetLeft, targetTop], targetRect, React), true), renderGuidelines(moveable, \"vertical\", verticalGuidelines, [targetLeft, targetTop], targetRect, React), true), renderSnapPoses(moveable, \"horizontal\", horizontalSnapPoses, minLeft, targetTop, width, 0, React), true), renderSnapPoses(moveable, \"vertical\", verticalSnapPoses, minTop, targetLeft, height, 1, React), true);\n  },\n  dragStart: function (moveable, e) {\n    moveable.state.snapRenderInfo = {\n      request: e.isRequest,\n      snap: true,\n      center: true\n    };\n    snapStart(moveable);\n  },\n  drag: function (moveable) {\n    var state = moveable.state;\n    state.guidelines = getTotalGuidelines(moveable);\n  },\n  pinchStart: function (moveable) {\n    this.unset(moveable);\n  },\n  dragEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  dragControlCondition: function (moveable, e) {\n    if (directionCondition(moveable, e) || dragControlCondition(moveable, e)) {\n      return true;\n    }\n    if (!e.isRequest && e.inputEvent) {\n      return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n    }\n  },\n  dragControlStart: function (moveable) {\n    moveable.state.snapRenderInfo = null;\n    snapStart(moveable);\n  },\n  dragControl: function (moveable) {\n    this.drag(moveable);\n  },\n  dragControlEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  dragGroupStart: function (moveable, e) {\n    this.dragStart(moveable, e);\n  },\n  dragGroup: function (moveable) {\n    this.drag(moveable);\n  },\n  dragGroupEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  dragGroupControlStart: function (moveable) {\n    moveable.state.snapRenderInfo = null;\n    snapStart(moveable);\n  },\n  dragGroupControl: function (moveable) {\n    this.drag(moveable);\n  },\n  dragGroupControlEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  unset: function (moveable) {\n    var state = moveable.state;\n    state.enableSnap = false;\n    state.guidelines = [];\n    state.snapRenderInfo = null;\n    state.elementRects = [];\n  }\n};\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n\n/**\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\n * @name Moveable.Snappable#snapContainer\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.querySelector(\".container\"));\n *\n * moveable.snapContainer = document.body;\n */\n\n/**\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#snapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapDirections: true,\n * });\n * // snap center\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * You can specify the snap directions of elements. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#elementSnapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   elementSnapDirections: true,\n * });\n * // snap center\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n\n/**\n * You can set up boundaries.\n * @name Moveable.Snappable#bounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n\n/**\n * You can set up inner boundaries.\n * @name Moveable.Snappable#innerBounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n\n/**\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridWidth\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridWidth = 5;\n */\n\n/**\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridHeight\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridHeight = 5;\n */\n\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * Whether to show element inner snap distance (default: false)\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplayInnerSnapDigit = true;\n */\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: (v, type) => v,\n * });\n * moveable.snapDistFormat = (v, type) => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\n\nvar Draggable = {\n  name: \"draggable\",\n  props: {\n    draggable: Boolean,\n    throttleDrag: Number,\n    throttleDragRotate: Number,\n    startDragRotate: Number,\n    edgeDraggable: Boolean\n  },\n  events: {\n    onDragStart: \"dragStart\",\n    onDrag: \"drag\",\n    onDragEnd: \"dragEnd\",\n    onDragGroupStart: \"dragGroupStart\",\n    onDragGroup: \"dragGroup\",\n    onDragGroupEnd: \"dragGroupEnd\"\n  },\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      throttleDragRotate = _a.throttleDragRotate,\n      zoom = _a.zoom;\n    var _b = moveable.state,\n      dragInfo = _b.dragInfo,\n      beforeOrigin = _b.beforeOrigin;\n    if (!throttleDragRotate || !dragInfo) {\n      return [];\n    }\n    var dist = dragInfo.dist;\n    if (!dist[0] && !dist[1]) {\n      return [];\n    }\n    var width = getDistSize(dist);\n    var rad = getRad(dist, [0, 0]);\n    return [React.createElement(\"div\", {\n      className: prefix(\"line\", \"horizontal\", \"dragline\", \"dashed\"),\n      key: \"dragRotateGuideline\",\n      style: {\n        width: \"\".concat(width, \"px\"),\n        transform: \"translate(\".concat(beforeOrigin[0], \"px, \").concat(beforeOrigin[1], \"px) rotate(\").concat(rad, \"rad) scaleY(\").concat(zoom, \")\")\n      }\n    })];\n  },\n  dragStart: function (moveable, e) {\n    var datas = e.datas,\n      parentEvent = e.parentEvent,\n      parentGesto = e.parentGesto;\n    var state = moveable.state;\n    var target = state.target,\n      gesto = state.gesto;\n    if (gesto) {\n      return false;\n    }\n    state.gesto = parentGesto || moveable.targetGesto;\n    var style = getComputedStyle(target);\n    datas.datas = {};\n    datas.left = parseFloat(style.left || \"\") || 0;\n    datas.top = parseFloat(style.top || \"\") || 0;\n    datas.bottom = parseFloat(style.bottom || \"\") || 0;\n    datas.right = parseFloat(style.right || \"\") || 0;\n    datas.startValue = [0, 0];\n    setDragStart(moveable, e);\n    setDefaultTransformIndex(e, \"translate\");\n    startCheckSnapDrag(moveable, datas);\n    datas.prevDist = [0, 0];\n    datas.prevBeforeDist = [0, 0];\n    datas.isDrag = false;\n    datas.deltaOffset = [0, 0];\n    var params = fillParams(moveable, e, __assign({\n      set: function (translate) {\n        datas.startValue = translate;\n      }\n    }, fillTransformStartEvent(e)));\n    var result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n    if (result !== false) {\n      datas.isDrag = true;\n      moveable.state.dragInfo = {\n        startRect: moveable.getRect(),\n        dist: [0, 0]\n      };\n    } else {\n      state.gesto = null;\n      datas.isPinch = false;\n    }\n    return datas.isDrag ? params : false;\n  },\n  drag: function (moveable, e) {\n    if (!e) {\n      return;\n    }\n    resolveTransformEvent(e, \"translate\");\n    var datas = e.datas,\n      parentEvent = e.parentEvent,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      isRequest = e.isRequest,\n      deltaOffset = e.deltaOffset;\n    var distX = e.distX,\n      distY = e.distY;\n    var isDrag = datas.isDrag,\n      prevDist = datas.prevDist,\n      prevBeforeDist = datas.prevBeforeDist,\n      startValue = datas.startValue;\n    if (!isDrag) {\n      return;\n    }\n    if (deltaOffset) {\n      distX += deltaOffset[0];\n      distY += deltaOffset[1];\n    }\n    var props = moveable.props;\n    var parentMoveable = props.parentMoveable;\n    var throttleDrag = parentEvent ? 0 : props.throttleDrag || 0;\n    var throttleDragRotate = parentEvent ? 0 : props.throttleDragRotate || 0;\n    var isSnap = false;\n    var dragRotateRad = 0;\n    if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n      var startDragRotate = props.startDragRotate || 0;\n      var deg = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate) - startDragRotate;\n      var ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n      var rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n      var r = getDistSize([rx, ry]);\n      dragRotateRad = deg * Math.PI / 180;\n      distX = r * Math.cos(dragRotateRad);\n      distY = r * Math.sin(dragRotateRad);\n    }\n    if (!isPinch && !parentEvent && !parentFlag && (!throttleDragRotate || distX || distY)) {\n      var _a = checkSnapBoundsDrag(moveable, distX, distY, throttleDragRotate, isRequest || deltaOffset, datas),\n        verticalInfo = _a[0],\n        horizontalInfo = _a[1];\n      var isVerticalSnap = verticalInfo.isSnap,\n        isVerticalBound = verticalInfo.isBound,\n        verticalOffset = verticalInfo.offset;\n      var isHorizontalSnap = horizontalInfo.isSnap,\n        isHorizontalBound = horizontalInfo.isBound,\n        horizontalOffset = horizontalInfo.offset;\n      isSnap = isVerticalSnap || isHorizontalSnap || isVerticalBound || isHorizontalBound;\n      distX += verticalOffset;\n      distY += horizontalOffset;\n    }\n    var beforeTranslate = plus(getBeforeDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }), startValue);\n    var translate = plus(getTransformDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }), startValue);\n    if (!throttleDragRotate && !isSnap) {\n      throttleArray(translate, throttleDrag);\n      throttleArray(beforeTranslate, throttleDrag);\n    }\n    var beforeDist = minus(beforeTranslate, startValue);\n    var dist = minus(translate, startValue);\n    var delta = minus(dist, prevDist);\n    var beforeDelta = minus(beforeDist, prevBeforeDist);\n    datas.prevDist = dist;\n    datas.prevBeforeDist = beforeDist;\n    datas.passDelta = delta; //distX - (datas.passDistX || 0);\n    // datas.passDeltaY = distY - (datas.passDistY || 0);\n\n    datas.passDist = dist; //distX;\n    // datas.passDistY = distY;\n\n    var left = datas.left + beforeDist[0];\n    var top = datas.top + beforeDist[1];\n    var right = datas.right - beforeDist[0];\n    var bottom = datas.bottom - beforeDist[1];\n    var nextTransform = convertTransformFormat(datas, \"translate(\".concat(translate[0], \"px, \").concat(translate[1], \"px)\"), \"translate(\".concat(dist[0], \"px, \").concat(dist[1], \"px)\"));\n    fillOriginalTransform(e, nextTransform);\n    moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n    if (!parentEvent && !parentMoveable && delta.every(function (num) {\n      return !num;\n    }) && beforeDelta.some(function (num) {\n      return !num;\n    })) {\n      return;\n    }\n    var _b = moveable.state,\n      width = _b.width,\n      height = _b.height;\n    var params = fillParams(moveable, e, {\n      transform: nextTransform,\n      dist: dist,\n      delta: delta,\n      translate: translate,\n      beforeDist: beforeDist,\n      beforeDelta: beforeDelta,\n      beforeTranslate: beforeTranslate,\n      left: left,\n      top: top,\n      right: right,\n      bottom: bottom,\n      width: width,\n      height: height,\n      isPinch: isPinch\n    });\n    !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n    return params;\n  },\n  dragAfter: function (moveable, e) {\n    var datas = e.datas;\n    var deltaOffset = datas.deltaOffset;\n    if (deltaOffset[0] || deltaOffset[1]) {\n      datas.deltaOffset = [0, 0];\n      return this.drag(moveable, __assign(__assign({}, e), {\n        deltaOffset: deltaOffset\n      }));\n    }\n    return false;\n  },\n  dragEnd: function (moveable, e) {\n    var parentEvent = e.parentEvent,\n      datas = e.datas;\n    moveable.state.gesto = null;\n    moveable.state.dragInfo = null;\n    if (!datas.isDrag) {\n      return;\n    }\n    datas.isDrag = false;\n    var param = fillEndParams(moveable, e, {});\n    !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\n    return param;\n  },\n  dragGroupStart: function (moveable, e) {\n    var datas = e.datas,\n      clientX = e.clientX,\n      clientY = e.clientY;\n    var params = this.dragStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    var events = triggerChildGesto(moveable, this, \"dragStart\", [clientX || 0, clientY || 0], e, false);\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events\n    });\n    var result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n    datas.isDrag = result !== false;\n    return datas.isDrag ? params : false;\n  },\n  dragGroup: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isDrag) {\n      return;\n    }\n    var params = this.drag(moveable, e);\n    var passDelta = e.datas.passDelta;\n    var events = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false);\n    if (!params) {\n      return;\n    }\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events\n    }, params);\n    triggerEvent(moveable, \"onDragGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isDrag) {\n      return;\n    }\n    this.dragEnd(moveable, e);\n    var events = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false);\n    triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    }));\n    return isDrag;\n  },\n  /**\n   * @method Moveable.Draggable#request\n   * @param {object} [e] - the draggable's request parameter\n   * @param {number} [e.x] - x position\n   * @param {number} [e.y] - y position\n   * @param {number} [e.deltaX] - X number to move\n   * @param {number} [e.deltaY] - Y number to move\n   * @return {Moveable.Requester} Moveable Requester\n   * @example\n    * // Instantly Request (requestStart - request - requestEnd)\n   * // Use Relative Value\n   * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n   * // Use Absolute Value\n   * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n   *\n   * // requestStart\n   * const requester = moveable.request(\"draggable\");\n   *\n   * // request\n   * // Use Relative Value\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * // Use Absolute Value\n   * moveable.request(\"draggable\", { x: 200, y: 100 });\n   * moveable.request(\"draggable\", { x: 220, y: 100 });\n   * moveable.request(\"draggable\", { x: 240, y: 100 });\n   *\n   * // requestEnd\n   * requester.requestEnd();\n   */\n  request: function (moveable) {\n    var datas = {};\n    var rect = moveable.getRect();\n    var distX = 0;\n    var distY = 0;\n    return {\n      isControl: false,\n      requestStart: function () {\n        return {\n          datas: datas\n        };\n      },\n      request: function (e) {\n        if (\"x\" in e) {\n          distX = e.x - rect.left;\n        } else if (\"deltaX\" in e) {\n          distX += e.deltaX;\n        }\n        if (\"y\" in e) {\n          distY = e.y - rect.top;\n        } else if (\"deltaY\" in e) {\n          distY += e.deltaY;\n        }\n        return {\n          datas: datas,\n          distX: distX,\n          distY: distY\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  },\n  unset: function (moveable) {\n    moveable.state.dragInfo = null;\n  }\n};\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n\nfunction calculatePointerDist(moveable, e) {\n  var clientX = e.clientX,\n    clientY = e.clientY,\n    datas = e.datas;\n  var _a = moveable.state,\n    moveableClientRect = _a.moveableClientRect,\n    rootMatrix = _a.rootMatrix,\n    is3d = _a.is3d,\n    pos1 = _a.pos1;\n  var left = moveableClientRect.left,\n    top = moveableClientRect.top;\n  var n = is3d ? 4 : 3;\n  var _b = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1),\n    posX = _b[0],\n    posY = _b[1];\n  var _c = getDragDist({\n      datas: datas,\n      distX: posX,\n      distY: posY\n    }),\n    distX = _c[0],\n    distY = _c[1];\n  return [distX, distY];\n}\nfunction setDragStart(moveable, _a) {\n  var datas = _a.datas;\n  var _b = moveable.state,\n    allMatrix = _b.allMatrix,\n    beforeMatrix = _b.beforeMatrix,\n    is3d = _b.is3d,\n    left = _b.left,\n    top = _b.top,\n    origin = _b.origin,\n    offsetMatrix = _b.offsetMatrix,\n    targetMatrix = _b.targetMatrix,\n    transformOrigin = _b.transformOrigin;\n  var n = is3d ? 4 : 3;\n  datas.is3d = is3d;\n  datas.matrix = allMatrix;\n  datas.targetMatrix = targetMatrix;\n  datas.beforeMatrix = beforeMatrix;\n  datas.offsetMatrix = offsetMatrix;\n  datas.transformOrigin = transformOrigin;\n  datas.inverseMatrix = invert(allMatrix, n);\n  datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n  datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n  datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n  datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nfunction getTransformDirection(e) {\n  return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nfunction resolveTransformEvent(event, functionName) {\n  var datas = event.datas,\n    originalDatas = event.originalDatas.beforeRenderable;\n  var index = datas.transformIndex;\n  var nextTransforms = originalDatas.nextTransforms;\n  var nextTransformAppendedIndexes = originalDatas.nextTransformAppendedIndexes;\n  var nextIndex = 0;\n  if (index === -1) {\n    nextIndex = nextTransforms.length;\n    datas.transformIndex = nextIndex;\n  } else {\n    nextIndex = index + nextTransformAppendedIndexes.filter(function (i) {\n      return i < index;\n    }).length;\n  }\n  var result = convertTransformInfo(nextTransforms, nextIndex);\n  var targetFunction = result.targetFunction;\n  var matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n  datas.beforeFunctionTexts = result.beforeFunctionTexts;\n  datas.afterFunctionTexts = result.afterFunctionTexts;\n  datas.beforeTransform = result.beforeFunctionMatrix;\n  datas.beforeTransform2 = result.beforeFunctionMatrix2;\n  datas.targetTansform = result.targetFunctionMatrix;\n  datas.afterTransform = result.afterFunctionMatrix;\n  datas.afterTransform2 = result.afterFunctionMatrix2;\n  datas.targetAllTransform = result.allFunctionMatrix;\n  if (targetFunction.functionName === matFunctionName) {\n    datas.afterFunctionTexts.splice(0, 1);\n    datas.isAppendTransform = false;\n  } else {\n    datas.isAppendTransform = true;\n    originalDatas.nextTransformAppendedIndexes = __spreadArray(__spreadArray([], nextTransformAppendedIndexes, true), [nextIndex], false);\n  }\n}\nfunction convertTransformFormat(datas, value, dist) {\n  return \"\".concat(datas.beforeFunctionTexts.join(\" \"), \" \").concat(datas.isAppendTransform ? dist : value, \" \").concat(datas.afterFunctionTexts.join(\" \"));\n}\nfunction getTransformDist(_a) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY;\n  var _b = getBeforeDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }),\n    bx = _b[0],\n    by = _b[1]; // B * [tx, ty] * A = [bx, by] * targetMatrix;\n  // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n  var res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n  return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nfunction getTransfromMatrix(datas, targetMatrix, isAfter) {\n  var beforeTransform = datas.beforeTransform,\n    afterTransform = datas.afterTransform,\n    beforeTransform2 = datas.beforeTransform2,\n    afterTransform2 = datas.afterTransform2,\n    targetAllTransform = datas.targetAllTransform; // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n  // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n  // nextTargetMatrix = (targetMatrix * targetAllTransform)\n\n  var nextTargetMatrix = isAfter ? multiply(targetAllTransform, targetMatrix, 4) : multiply(targetMatrix, targetAllTransform, 4); // res1 = B-1 * nextTargetMatrix\n\n  var res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4); // res3 = res2 * A-1\n\n  var afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n  return afterTargetMatrix;\n}\nfunction getBeforeDragDist(_a) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY; // TT = BT\n\n  var inverseBeforeMatrix = datas.inverseBeforeMatrix,\n    is3d = datas.is3d,\n    startDragBeforeDist = datas.startDragBeforeDist,\n    absoluteOrigin = datas.absoluteOrigin;\n  var n = is3d ? 4 : 3; // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n  // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n\n  return minus(calculate(inverseBeforeMatrix, plus(absoluteOrigin, [distX, distY]), n), startDragBeforeDist);\n}\nfunction getDragDist(_a, isBefore) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY;\n  var inverseBeforeMatrix = datas.inverseBeforeMatrix,\n    inverseMatrix = datas.inverseMatrix,\n    is3d = datas.is3d,\n    startDragBeforeDist = datas.startDragBeforeDist,\n    startDragDist = datas.startDragDist,\n    absoluteOrigin = datas.absoluteOrigin;\n  var n = is3d ? 4 : 3;\n  return minus(calculate(isBefore ? inverseBeforeMatrix : inverseMatrix, plus(absoluteOrigin, [distX, distY]), n), isBefore ? startDragBeforeDist : startDragDist);\n}\nfunction getInverseDragDist(_a, isBefore) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY;\n  var beforeMatrix = datas.beforeMatrix,\n    matrix = datas.matrix,\n    is3d = datas.is3d,\n    startDragBeforeDist = datas.startDragBeforeDist,\n    startDragDist = datas.startDragDist,\n    absoluteOrigin = datas.absoluteOrigin;\n  var n = is3d ? 4 : 3;\n  return minus(calculate(isBefore ? beforeMatrix : matrix, plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]), n), absoluteOrigin);\n}\nfunction calculateTransformOrigin(transformOrigin, width, height, prevWidth, prevHeight, prevOrigin) {\n  if (prevWidth === void 0) {\n    prevWidth = width;\n  }\n  if (prevHeight === void 0) {\n    prevHeight = height;\n  }\n  if (prevOrigin === void 0) {\n    prevOrigin = [0, 0];\n  }\n  if (!transformOrigin) {\n    return prevOrigin;\n  }\n  return transformOrigin.map(function (pos, i) {\n    var _a = splitUnit(pos),\n      value = _a.value,\n      unit = _a.unit;\n    var prevSize = i ? prevHeight : prevWidth;\n    var size = i ? height : width;\n    if (pos === \"%\" || isNaN(value)) {\n      // no value but %\n      var measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n      return size * measureRatio;\n    } else if (unit !== \"%\") {\n      return value;\n    }\n    return size * value / 100;\n  });\n}\nfunction getPosIndexesByDirection(direction) {\n  var indexes = [];\n  if (direction[1] >= 0) {\n    if (direction[0] >= 0) {\n      indexes.push(3);\n    }\n    if (direction[0] <= 0) {\n      indexes.push(2);\n    }\n  }\n  if (direction[1] <= 0) {\n    if (direction[0] >= 0) {\n      indexes.push(1);\n    }\n    if (direction[0] <= 0) {\n      indexes.push(0);\n    }\n  }\n  return indexes;\n}\nfunction getPosesByDirection(poses, direction) {\n  /*\n  [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n  [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n  [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n  */\n  return getPosIndexesByDirection(direction).map(function (index) {\n    return poses[index];\n  });\n}\nfunction getPosByDirection(poses, direction) {\n  /*\n  [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n  [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n  [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n  */\n  var nextPoses = getPosesByDirection(poses, direction);\n  return [average(nextPoses.map(function (pos) {\n    return pos[0];\n  })), average(nextPoses.map(function (pos) {\n    return pos[1];\n  }))];\n}\nfunction getDist(startPos, matrix, width, height, n, fixedDirection) {\n  var poses = calculatePoses(matrix, width, height, n);\n  var fixedPos = getPosByDirection(poses, fixedDirection);\n  var distX = startPos[0] - fixedPos[0];\n  var distY = startPos[1] - fixedPos[1];\n  return [distX, distY];\n}\nfunction getNextMatrix(offsetMatrix, targetMatrix, origin, n) {\n  return multiply(offsetMatrix, getAbsoluteMatrix(targetMatrix, n, origin), n);\n}\nfunction getNextTransformMatrix(state, datas, transform) {\n  var transformOrigin = state.transformOrigin,\n    offsetMatrix = state.offsetMatrix,\n    is3d = state.is3d;\n  var beforeTransform = datas.beforeTransform,\n    afterTransform = datas.afterTransform;\n  var n = is3d ? 4 : 3;\n  var targetTransform = parseMat([transform]);\n  return getNextMatrix(offsetMatrix, convertDimension(multiply(multiply(beforeTransform, targetTransform, 4), afterTransform, 4), 4, n), transformOrigin, n);\n}\nfunction scaleMatrix(state, scale) {\n  var transformOrigin = state.transformOrigin,\n    offsetMatrix = state.offsetMatrix,\n    is3d = state.is3d,\n    targetMatrix = state.targetMatrix;\n  var n = is3d ? 4 : 3;\n  return getNextMatrix(offsetMatrix, multiply(targetMatrix, createScaleMatrix(scale, n), n), transformOrigin, n);\n}\nfunction fillTransformStartEvent(e) {\n  var originalDatas = e.originalDatas.beforeRenderable;\n  return {\n    setTransform: function (transform, index) {\n      if (index === void 0) {\n        index = -1;\n      }\n      originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n      setTransformIndex(e, index);\n    },\n    setTransformIndex: function (index) {\n      setTransformIndex(e, index);\n    }\n  };\n}\nfunction setDefaultTransformIndex(e, property) {\n  var originalDatas = e.originalDatas.beforeRenderable;\n  var startTransforms = originalDatas.startTransforms;\n  setTransformIndex(e, findIndex(startTransforms, function (func) {\n    return func.indexOf(\"\".concat(property, \"(\")) === 0;\n  }));\n}\nfunction setTransformIndex(e, index) {\n  var originalDatas = e.originalDatas.beforeRenderable;\n  var datas = e.datas;\n  datas.transformIndex = index;\n  if (index === -1) {\n    return;\n  }\n  var transform = originalDatas.startTransforms[index];\n  if (!transform) {\n    return;\n  }\n  var info = parse([transform]);\n  datas.startValue = info[0].functionValue;\n}\nfunction fillOriginalTransform(e, transform) {\n  var originalDatas = e.originalDatas.beforeRenderable;\n  originalDatas.nextTransforms = splitSpace(transform);\n}\nfunction getNextTransformText(e) {\n  var originalDatas = e.originalDatas.beforeRenderable;\n  return originalDatas.nextTransforms.join(\" \");\n}\nfunction fillTransformEvent(moveable, nextTransform, delta, isPinch, e) {\n  fillOriginalTransform(e, nextTransform);\n  return {\n    transform: nextTransform,\n    drag: Draggable.drag(moveable, setCustomDrag(e, moveable.state, delta, isPinch, false))\n  };\n}\nfunction getTranslateDist(moveable, transform, fixedDirection, fixedPosition, datas) {\n  var state = moveable.state;\n  var left = state.left,\n    top = state.top;\n  var groupable = moveable.props.groupable;\n  var nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n  var groupLeft = groupable ? left : 0;\n  var groupTop = groupable ? top : 0;\n  var nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n  var dist = minus(fixedPosition, nextFixedPosition);\n  return minus(dist, [groupLeft, groupTop]);\n}\nfunction getScaleDist(moveable, scaleDist, fixedDirection, fixedPosition, datas) {\n  var dist = getTranslateDist(moveable, \"scale(\".concat(scaleDist.join(\", \"), \")\"), fixedDirection, fixedPosition, datas);\n  return dist;\n}\nfunction getOriginDirection(moveable) {\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height,\n    transformOrigin = _a.transformOrigin;\n  return [-1 + transformOrigin[0] / (width / 2), -1 + transformOrigin[1] / (height / 2)];\n}\nfunction getDirectionOffset(moveable, direction, nextMatrix) {\n  if (nextMatrix === void 0) {\n    nextMatrix = moveable.state.allMatrix;\n  }\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height,\n    is3d = _a.is3d;\n  var n = is3d ? 4 : 3;\n  var nextFixedOffset = [width / 2 * (1 + direction[0]), height / 2 * (1 + direction[1])];\n  return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nfunction getRotateDist(moveable, rotateDist, fixedPosition, datas) {\n  var fixedDirection = getOriginDirection(moveable);\n  return getTranslateDist(moveable, \"rotate(\".concat(rotateDist, \"deg)\"), fixedDirection, fixedPosition, datas);\n}\nfunction getResizeDist(moveable, width, height, fixedDirection, fixedPosition, transformOrigin) {\n  var groupable = moveable.props.groupable;\n  var _a = moveable.state,\n    prevOrigin = _a.transformOrigin,\n    targetMatrix = _a.targetMatrix,\n    offsetMatrix = _a.offsetMatrix,\n    is3d = _a.is3d,\n    prevWidth = _a.width,\n    prevHeight = _a.height,\n    left = _a.left,\n    top = _a.top;\n  var n = is3d ? 4 : 3;\n  var nextOrigin = calculateTransformOrigin(transformOrigin, width, height, prevWidth, prevHeight, prevOrigin);\n  var groupLeft = groupable ? left : 0;\n  var groupTop = groupable ? top : 0;\n  var nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n  var dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n  return minus(dist, [groupLeft, groupTop]);\n}\nfunction getAbsolutePosition(moveable, direction) {\n  return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\nfunction multiply2(pos1, pos2) {\n  return [pos1[0] * pos2[0], pos1[1] * pos2[1]];\n}\nfunction prefix() {\n  var classNames = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    classNames[_i] = arguments[_i];\n  }\n  return prefixNames.apply(void 0, __spreadArray([PREFIX], classNames, false));\n}\nfunction defaultSync(fn) {\n  fn();\n}\nfunction getTransformMatrix(transform) {\n  if (!transform || transform === \"none\") {\n    return [1, 0, 0, 1, 0, 0];\n  }\n  if (isObject(transform)) {\n    return transform;\n  }\n  return parseMat(transform);\n}\nfunction getAbsoluteMatrix(matrix, n, origin) {\n  return multiplies(n, createOriginMatrix(origin, n), matrix, createOriginMatrix(origin.map(function (a) {\n    return -a;\n  }), n));\n}\nfunction measureSVGSize(el, unit, isHorizontal) {\n  if (unit === \"%\") {\n    var viewBox = getSVGViewBox(el.ownerSVGElement);\n    return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n  }\n  return 1;\n}\nfunction getBeforeTransformOrigin(el) {\n  var relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n  return relativeOrigin.map(function (o, i) {\n    var _a = splitUnit(o),\n      value = _a.value,\n      unit = _a.unit;\n    return value * measureSVGSize(el, unit, i === 0);\n  });\n}\nfunction getTransformOrigin(style) {\n  var transformOrigin = style.transformOrigin;\n  return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nfunction getElementTransform(target, computedStyle) {\n  if (computedStyle === void 0) {\n    computedStyle = getComputedStyle(target);\n  }\n  var computedTransform = computedStyle.transform;\n  if (computedTransform && computedTransform !== \"none\") {\n    return computedStyle.transform;\n  }\n  if (\"transform\" in target) {\n    var list = target.transform;\n    var baseVal = list.baseVal;\n    if (!baseVal) {\n      return \"\";\n    }\n    var length = baseVal.length;\n    if (!length) {\n      return \"\";\n    }\n    var matrixes = [];\n    var _loop_1 = function (i) {\n      var matrix = baseVal[i].matrix;\n      matrixes.push(\"matrix(\".concat([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].map(function (chr) {\n        return matrix[chr];\n      }).join(\", \"), \")\"));\n    };\n    for (var i = 0; i < length; ++i) {\n      _loop_1(i);\n    }\n    return matrixes.join(\" \");\n  }\n  return \"\";\n}\nfunction getOffsetInfo(el, lastParent, isParent) {\n  var body = document.body;\n  var target = !el || isParent ? el : el.parentElement;\n  var isEnd = el === lastParent || target === lastParent;\n  var position = \"relative\";\n  while (target && target !== body) {\n    if (lastParent === target) {\n      isEnd = true;\n    }\n    var style = getComputedStyle(target);\n    var tagName = target.tagName.toLowerCase();\n    var transform = getElementTransform(target, style);\n    position = style.position;\n    if (tagName === \"svg\" || position !== \"static\" || transform && transform !== \"none\") {\n      break;\n    }\n    target = target.parentElement;\n    position = \"relative\";\n  }\n  return {\n    isStatic: position === \"static\",\n    isEnd: isEnd || !target || target === body,\n    offsetParent: target || body\n  };\n}\nfunction getOffsetPosInfo(el, style) {\n  var _a;\n  var tagName = el.tagName.toLowerCase();\n  var offsetLeft = el.offsetLeft;\n  var offsetTop = el.offsetTop; // svg\n\n  var isSVG = isUndefined(offsetLeft);\n  var hasOffset = !isSVG;\n  var origin;\n  var targetOrigin; // inner svg element\n\n  if (!hasOffset && tagName !== \"svg\") {\n    origin = IS_WEBKIT605 ? getBeforeTransformOrigin(el) : getTransformOrigin(style).map(function (pos) {\n      return parseFloat(pos);\n    });\n    targetOrigin = origin.slice();\n    hasOffset = true;\n    _a = getSVGGraphicsOffset(el, origin), offsetLeft = _a[0], offsetTop = _a[1], origin[0] = _a[2], origin[1] = _a[3];\n  } else {\n    origin = getTransformOrigin(style).map(function (pos) {\n      return parseFloat(pos);\n    });\n    targetOrigin = origin.slice();\n  }\n  return {\n    tagName: tagName,\n    isSVG: isSVG,\n    hasOffset: hasOffset,\n    offset: [offsetLeft || 0, offsetTop || 0],\n    origin: origin,\n    targetOrigin: targetOrigin\n  };\n}\nfunction getBodyOffset(el, isSVG, style) {\n  if (style === void 0) {\n    style = getComputedStyle(el);\n  }\n  var bodyStyle = getComputedStyle(document.body);\n  var bodyPosition = bodyStyle.position;\n  if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n    return [0, 0];\n  }\n  var marginLeft = parseInt(bodyStyle.marginLeft, 10);\n  var marginTop = parseInt(bodyStyle.marginTop, 10);\n  if (style.position === \"absolute\") {\n    if (style.top !== \"auto\" || style.bottom !== \"auto\") {\n      marginTop = 0;\n    }\n    if (style.left !== \"auto\" || style.right !== \"auto\") {\n      marginLeft = 0;\n    }\n  }\n  return [marginLeft, marginTop];\n}\nfunction convert3DMatrixes(matrixes) {\n  matrixes.forEach(function (info) {\n    var matrix = info.matrix;\n    if (matrix) {\n      info.matrix = convertDimension(matrix, 3, 4);\n    }\n  });\n}\nfunction getBodyScrollPos() {\n  return [document.documentElement.scrollLeft || document.body.scrollLeft, document.documentElement.scrollTop || document.body.scrollTop];\n}\nfunction getPositionFixedInfo(el) {\n  var fixedContainer = el.parentElement;\n  var hasTransform = false;\n  while (fixedContainer) {\n    var transform = getComputedStyle(fixedContainer).transform;\n    if (transform && transform !== \"none\") {\n      hasTransform = true;\n      break;\n    }\n    if (fixedContainer === document.body) {\n      break;\n    }\n    fixedContainer = fixedContainer.parentElement;\n  }\n  return {\n    fixedContainer: fixedContainer || document.body,\n    hasTransform: hasTransform\n  };\n}\nfunction getMatrixStackInfo(target, container, checkContainer) {\n  var el = target;\n  var matrixes = [];\n  var requestEnd = !checkContainer && target === container || target === document.body;\n  var isEnd = requestEnd;\n  var is3d = false;\n  var n = 3;\n  var transformOrigin;\n  var targetTransformOrigin;\n  var targetMatrix;\n  var hasFixed = false;\n  var offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n  while (el && !isEnd) {\n    isEnd = requestEnd;\n    var style = getComputedStyle(el);\n    var position = style.position;\n    var transform = getElementTransform(el, style);\n    var matrix = convertCSStoMatrix(getTransformMatrix(transform));\n    var isFixed = position === \"fixed\";\n    var fixedInfo = {\n      hasTransform: false,\n      fixedContainer: null\n    };\n    if (isFixed) {\n      hasFixed = true;\n      fixedInfo = getPositionFixedInfo(el);\n      offsetContainer = fixedInfo.fixedContainer;\n    } // convert 3 to 4\n\n    var length = matrix.length;\n    if (!is3d && length === 16) {\n      is3d = true;\n      n = 4;\n      convert3DMatrixes(matrixes);\n      if (targetMatrix) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n      }\n    }\n    if (is3d && length === 9) {\n      matrix = convertDimension(matrix, 3, 4);\n    }\n    var _a = getOffsetPosInfo(el, style),\n      tagName = _a.tagName,\n      hasOffset = _a.hasOffset,\n      isSVG = _a.isSVG,\n      origin = _a.origin,\n      targetOrigin = _a.targetOrigin,\n      offsetPos = _a.offset;\n    var offsetLeft = offsetPos[0],\n      offsetTop = offsetPos[1];\n    if (tagName === \"svg\" && targetMatrix) {\n      // scale matrix for svg's SVGElements.\n      matrixes.push({\n        type: \"target\",\n        target: el,\n        matrix: getSVGMatrix(el, n)\n      });\n      matrixes.push({\n        type: \"offset\",\n        target: el,\n        matrix: createIdentityMatrix(n)\n      });\n    } else if (tagName === \"g\" && target !== el) {\n      offsetLeft = 0;\n      offsetTop = 0;\n    }\n    var offsetParent = void 0;\n    var isOffsetEnd = false;\n    var isStatic = false;\n    if (isFixed) {\n      offsetParent = fixedInfo.fixedContainer;\n      isOffsetEnd = true;\n    } else {\n      var offsetInfo = getOffsetInfo(el, container);\n      offsetParent = offsetInfo.offsetParent;\n      isOffsetEnd = offsetInfo.isEnd;\n      isStatic = offsetInfo.isStatic;\n    }\n    if (IS_WEBKIT && hasOffset && !isSVG && isStatic && (position === \"relative\" || position === \"static\")) {\n      offsetLeft -= offsetParent.offsetLeft;\n      offsetTop -= offsetParent.offsetTop;\n      requestEnd = requestEnd || isOffsetEnd;\n    }\n    var parentClientLeft = 0;\n    var parentClientTop = 0;\n    var fixedClientLeft = 0;\n    var fixedClientTop = 0;\n    if (isFixed) {\n      if (hasOffset && fixedInfo.hasTransform) {\n        // border\n        fixedClientLeft = offsetParent.clientLeft;\n        fixedClientTop = offsetParent.clientTop;\n      }\n    } else {\n      if (hasOffset && offsetContainer !== offsetParent) {\n        // border\n        parentClientLeft = offsetParent.clientLeft;\n        parentClientTop = offsetParent.clientTop;\n      }\n      if (hasOffset && offsetParent === document.body) {\n        var margin = getBodyOffset(el, false, style);\n        offsetLeft += margin[0];\n        offsetTop += margin[1];\n      }\n    }\n    matrixes.push({\n      type: \"target\",\n      target: el,\n      matrix: getAbsoluteMatrix(matrix, n, origin)\n    });\n    if (hasOffset) {\n      matrixes.push({\n        type: \"offset\",\n        target: el,\n        matrix: createOriginMatrix([offsetLeft - el.scrollLeft + parentClientLeft - fixedClientLeft, offsetTop - el.scrollTop + parentClientTop - fixedClientTop], n)\n      });\n    } else {\n      // svg\n      matrixes.push({\n        type: \"offset\",\n        target: el,\n        origin: origin\n      });\n    }\n    if (!targetMatrix) {\n      targetMatrix = matrix;\n    }\n    if (!transformOrigin) {\n      transformOrigin = origin;\n    }\n    if (!targetTransformOrigin) {\n      targetTransformOrigin = targetOrigin;\n    }\n    if (isEnd || isFixed) {\n      break;\n    } else {\n      el = offsetParent;\n      requestEnd = isOffsetEnd;\n    }\n    if (!checkContainer || el === document.body) {\n      isEnd = requestEnd;\n    }\n  }\n  if (!targetMatrix) {\n    targetMatrix = createIdentityMatrix(n);\n  }\n  if (!transformOrigin) {\n    transformOrigin = [0, 0];\n  }\n  if (!targetTransformOrigin) {\n    targetTransformOrigin = [0, 0];\n  }\n  return {\n    offsetContainer: offsetContainer,\n    matrixes: matrixes,\n    targetMatrix: targetMatrix,\n    transformOrigin: transformOrigin,\n    targetOrigin: targetTransformOrigin,\n    is3d: is3d,\n    hasFixed: hasFixed\n  };\n}\nfunction calculateElementInfo(target, container, rootContainer, isAbsolute3d) {\n  if (rootContainer === void 0) {\n    rootContainer = container;\n  }\n  var width = 0;\n  var height = 0;\n  var rotation = 0;\n  var allResult = {};\n  if (target) {\n    var _a = getSize(target),\n      offsetWidth = _a.offsetWidth,\n      offsetHeight = _a.offsetHeight;\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  if (target) {\n    var result = calculateMatrixStack(target, container, rootContainer, isAbsolute3d);\n    var position = calculateMoveablePosition(result.allMatrix, result.transformOrigin, width, height);\n    allResult = __assign(__assign({}, result), position);\n    var rotationPosition = calculateMoveablePosition(result.allMatrix, [50, 50], 100, 100);\n    rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n  }\n  var n = isAbsolute3d ? 4 : 3;\n  return __assign({\n    width: width,\n    height: height,\n    rotation: rotation,\n    rootMatrix: createIdentityMatrix(n),\n    beforeMatrix: createIdentityMatrix(n),\n    offsetMatrix: createIdentityMatrix(n),\n    allMatrix: createIdentityMatrix(n),\n    targetMatrix: createIdentityMatrix(n),\n    targetTransform: \"\",\n    transformOrigin: [0, 0],\n    targetOrigin: [0, 0],\n    is3d: !!isAbsolute3d,\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    origin: [0, 0],\n    pos1: [0, 0],\n    pos2: [0, 0],\n    pos3: [0, 0],\n    pos4: [0, 0],\n    direction: 1,\n    hasFixed: false\n  }, allResult);\n}\nfunction getElementInfo(target, container, rootContainer) {\n  if (rootContainer === void 0) {\n    rootContainer = container;\n  }\n  return calculateElementInfo(target, container, rootContainer, true);\n}\nfunction calculateMatrixStack(target, container, rootContainer, isAbsolute3d) {\n  var _a;\n  if (rootContainer === void 0) {\n    rootContainer = container;\n  }\n  var _b = getMatrixStackInfo(target, container),\n    matrixes = _b.matrixes,\n    is3d = _b.is3d,\n    prevTargetMatrix = _b.targetMatrix,\n    transformOrigin = _b.transformOrigin,\n    targetOrigin = _b.targetOrigin,\n    offsetContainer = _b.offsetContainer,\n    hasFixed = _b.hasFixed; // prevMatrix\n\n  var _c = getMatrixStackInfo(offsetContainer, rootContainer, true),\n    rootMatrixes = _c.matrixes,\n    isRoot3d = _c.is3d; // prevRootMatrix\n  // if (rootContainer === document.body) {\n  //     console.log(offsetContainer, rootContainer, rootMatrixes);\n  // }\n\n  var isNext3d = isAbsolute3d || isRoot3d || is3d;\n  var n = isNext3d ? 4 : 3;\n  var isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n  var targetMatrix = prevTargetMatrix; // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n  // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n  // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n\n  var allMatrix = createIdentityMatrix(n);\n  var rootMatrix = createIdentityMatrix(n);\n  var beforeMatrix = createIdentityMatrix(n);\n  var offsetMatrix = createIdentityMatrix(n);\n  var length = matrixes.length;\n  rootMatrixes.reverse();\n  matrixes.reverse();\n  if (!is3d && isNext3d) {\n    targetMatrix = convertDimension(targetMatrix, 3, 4);\n    convert3DMatrixes(matrixes);\n  }\n  if (!isRoot3d && isNext3d) {\n    convert3DMatrixes(rootMatrixes);\n  } // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n  // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\n  // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n  // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n  rootMatrixes.forEach(function (info) {\n    rootMatrix = multiply(rootMatrix, info.matrix, n);\n  });\n  var originalRootContainer = rootContainer || document.body;\n  var endContainer = ((_a = rootMatrixes[0]) === null || _a === void 0 ? void 0 : _a.target) || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\n  var rootMatrixBeforeOffset = rootMatrixes.slice(1).reduce(function (matrix, info) {\n    return multiply(matrix, info.matrix, n);\n  }, createIdentityMatrix(n));\n  matrixes.forEach(function (info, i) {\n    if (length - 2 === i) {\n      // length - 3\n      beforeMatrix = allMatrix.slice();\n    }\n    if (length - 1 === i) {\n      // length - 2\n      offsetMatrix = allMatrix.slice();\n    } // calculate for SVGElement\n\n    if (!info.matrix) {\n      var nextInfo = matrixes[i + 1];\n      var offset = getSVGOffset(info, nextInfo, endContainer, n, multiply(rootMatrixBeforeOffset, allMatrix, n));\n      info.matrix = createOriginMatrix(offset, n);\n    }\n    allMatrix = multiply(allMatrix, info.matrix, n);\n  });\n  var isMatrix3d = !isSVGGraphicElement && is3d;\n  if (!targetMatrix) {\n    targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n  }\n  var targetTransform = makeMatrixCSS(isSVGGraphicElement && targetMatrix.length === 16 ? convertDimension(targetMatrix, 4, 3) : targetMatrix, isMatrix3d);\n  rootMatrix = ignoreDimension(rootMatrix, n, n);\n  return {\n    hasFixed: hasFixed,\n    rootMatrix: rootMatrix,\n    beforeMatrix: beforeMatrix,\n    offsetMatrix: offsetMatrix,\n    allMatrix: allMatrix,\n    targetMatrix: targetMatrix,\n    targetTransform: targetTransform,\n    transformOrigin: transformOrigin,\n    targetOrigin: targetOrigin,\n    is3d: isNext3d\n  };\n}\nfunction makeMatrixCSS(matrix, is3d) {\n  if (is3d === void 0) {\n    is3d = matrix.length > 9;\n  }\n  return \"\".concat(is3d ? \"matrix3d\" : \"matrix\", \"(\").concat(convertMatrixtoCSS(matrix, !is3d).join(\",\"), \")\");\n}\nfunction getSVGViewBox(el) {\n  var clientWidth = el.clientWidth;\n  var clientHeight = el.clientHeight;\n  if (!el) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      clientWidth: clientWidth,\n      clientHeight: clientHeight\n    };\n  }\n  var viewBox = el.viewBox;\n  var baseVal = viewBox && viewBox.baseVal || {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  };\n  return {\n    x: baseVal.x,\n    y: baseVal.y,\n    width: baseVal.width || clientWidth,\n    height: baseVal.height || clientHeight,\n    clientWidth: clientWidth,\n    clientHeight: clientHeight\n  };\n}\nfunction getSVGMatrix(el, n) {\n  var _a = getSVGViewBox(el),\n    viewBoxWidth = _a.width,\n    viewBoxHeight = _a.height,\n    clientWidth = _a.clientWidth,\n    clientHeight = _a.clientHeight;\n  var scaleX = clientWidth / viewBoxWidth;\n  var scaleY = clientHeight / viewBoxHeight;\n  var preserveAspectRatio = el.preserveAspectRatio.baseVal; // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n\n  var align = preserveAspectRatio.align; // 1 : meet 2: slice\n\n  var meetOrSlice = preserveAspectRatio.meetOrSlice;\n  var svgOrigin = [0, 0];\n  var scale = [scaleX, scaleY];\n  var translate = [0, 0];\n  if (align !== 1) {\n    var xAlign = (align - 2) % 3;\n    var yAlign = Math.floor((align - 2) / 3);\n    svgOrigin[0] = viewBoxWidth * xAlign / 2;\n    svgOrigin[1] = viewBoxHeight * yAlign / 2;\n    var scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n    scale[0] = scaleDimension;\n    scale[1] = scaleDimension;\n    translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n    translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n  }\n  var scaleMatrix = createScaleMatrix(scale, n);\n  scaleMatrix[n * (n - 1)] = translate[0], scaleMatrix[n * (n - 1) + 1] = translate[1];\n  return getAbsoluteMatrix(scaleMatrix, n, svgOrigin);\n}\nfunction getSVGGraphicsOffset(el, origin) {\n  if (!el.getBBox || el.tagName.toLowerCase() === \"g\") {\n    return [0, 0, 0, 0];\n  }\n  var bbox = el.getBBox();\n  var viewBox = getSVGViewBox(el.ownerSVGElement);\n  var left = bbox.x - viewBox.x;\n  var top = bbox.y - viewBox.y;\n  return [left, top, origin[0] - left, origin[1] - top];\n}\nfunction calculatePosition(matrix, pos, n) {\n  return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nfunction calculatePoses(matrix, width, height, n) {\n  return [[0, 0], [width, 0], [0, height], [width, height]].map(function (pos) {\n    return calculatePosition(matrix, pos, n);\n  });\n}\nfunction getRect(poses) {\n  var posesX = poses.map(function (pos) {\n    return pos[0];\n  });\n  var posesY = poses.map(function (pos) {\n    return pos[1];\n  });\n  var left = Math.min.apply(Math, posesX);\n  var top = Math.min.apply(Math, posesY);\n  var right = Math.max.apply(Math, posesX);\n  var bottom = Math.max.apply(Math, posesY);\n  var rectWidth = right - left;\n  var rectHeight = bottom - top;\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom,\n    width: rectWidth,\n    height: rectHeight\n  };\n}\nfunction calculateRect(matrix, width, height, n) {\n  var poses = calculatePoses(matrix, width, height, n);\n  return getRect(poses);\n}\nfunction getSVGOffset(offsetInfo, targetInfo, container, n, beforeMatrix) {\n  var _a;\n  var target = offsetInfo.target;\n  var origin = offsetInfo.origin;\n  var targetMatrix = targetInfo.matrix;\n  var _b = getSize(target),\n    width = _b.offsetWidth,\n    height = _b.offsetHeight;\n  var containerClientRect = container.getBoundingClientRect();\n  var margin = [0, 0];\n  if (container === document.body) {\n    margin = getBodyOffset(target, true);\n  }\n  var rect = target.getBoundingClientRect();\n  var rectLeft = rect.left - containerClientRect.left + container.scrollLeft - (container.clientLeft || 0) + margin[0];\n  var rectTop = rect.top - containerClientRect.top + container.scrollTop - (container.clientTop || 0) + margin[1];\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n  var mat = multiplies(n, beforeMatrix, targetMatrix);\n  var _c = calculateRect(mat, width, height, n),\n    prevLeft = _c.left,\n    prevTop = _c.top,\n    prevWidth = _c.width,\n    prevHeight = _c.height;\n  var posOrigin = calculatePosition(mat, origin, n);\n  var prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n  var rectOrigin = [rectLeft + prevOrigin[0] * rectWidth / prevWidth, rectTop + prevOrigin[1] * rectHeight / prevHeight];\n  var offset = [0, 0];\n  var count = 0;\n  while (++count < 10) {\n    var inverseBeforeMatrix = invert(beforeMatrix, n);\n    _a = minus(calculatePosition(inverseBeforeMatrix, rectOrigin, n), calculatePosition(inverseBeforeMatrix, posOrigin, n)), offset[0] = _a[0], offset[1] = _a[1];\n    var mat2 = multiplies(n, beforeMatrix, createOriginMatrix(offset, n), targetMatrix);\n    var _d = calculateRect(mat2, width, height, n),\n      nextLeft = _d.left,\n      nextTop = _d.top;\n    var distLeft = nextLeft - rectLeft;\n    var distTop = nextTop - rectTop;\n    if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n      break;\n    }\n    rectOrigin[0] -= distLeft;\n    rectOrigin[1] -= distTop;\n  }\n  return offset.map(function (p) {\n    return Math.round(p);\n  });\n}\nfunction calculateMoveablePosition(matrix, origin, width, height) {\n  var is3d = matrix.length === 16;\n  var n = is3d ? 4 : 3;\n  var poses = calculatePoses(matrix, width, height, n);\n  var _a = poses[0],\n    x1 = _a[0],\n    y1 = _a[1],\n    _b = poses[1],\n    x2 = _b[0],\n    y2 = _b[1],\n    _c = poses[2],\n    x3 = _c[0],\n    y3 = _c[1],\n    _d = poses[3],\n    x4 = _d[0],\n    y4 = _d[1];\n  var _e = calculatePosition(matrix, origin, n),\n    originX = _e[0],\n    originY = _e[1];\n  var left = Math.min(x1, x2, x3, x4);\n  var top = Math.min(y1, y2, y3, y4);\n  var right = Math.max(x1, x2, x3, x4);\n  var bottom = Math.max(y1, y2, y3, y4);\n  x1 = x1 - left || 0;\n  x2 = x2 - left || 0;\n  x3 = x3 - left || 0;\n  x4 = x4 - left || 0;\n  y1 = y1 - top || 0;\n  y2 = y2 - top || 0;\n  y3 = y3 - top || 0;\n  y4 = y4 - top || 0;\n  originX = originX - left || 0;\n  originY = originY - top || 0;\n  var direction = getShapeDirection(poses);\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom,\n    origin: [originX, originY],\n    pos1: [x1, y1],\n    pos2: [x2, y2],\n    pos3: [x3, y3],\n    pos4: [x4, y4],\n    direction: direction\n  };\n}\nfunction getDistSize(vec) {\n  return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nfunction getDiagonalSize(pos1, pos2) {\n  return getDistSize([pos2[0] - pos1[0], pos2[1] - pos1[1]]);\n}\nfunction getLineStyle(pos1, pos2, zoom, rad) {\n  if (zoom === void 0) {\n    zoom = 1;\n  }\n  if (rad === void 0) {\n    rad = getRad(pos1, pos2);\n  }\n  var width = getDiagonalSize(pos1, pos2);\n  return {\n    transform: \"translateY(-50%) translate(\".concat(pos1[0], \"px, \").concat(pos1[1], \"px) rotate(\").concat(rad, \"rad) scaleY(\").concat(zoom, \")\"),\n    width: \"\".concat(width, \"px\")\n  };\n}\nfunction getControlTransform(rotation, zoom) {\n  var poses = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    poses[_i - 2] = arguments[_i];\n  }\n  var length = poses.length;\n  var x = poses.reduce(function (prev, pos) {\n    return prev + pos[0];\n  }, 0) / length;\n  var y = poses.reduce(function (prev, pos) {\n    return prev + pos[1];\n  }, 0) / length;\n  return {\n    transform: \"translateZ(0px) translate(\".concat(x, \"px, \").concat(y, \"px) rotate(\").concat(rotation, \"rad) scale(\").concat(zoom, \")\")\n  };\n}\nfunction getCSSSize(target) {\n  var style = getComputedStyle(target);\n  return [parseFloat(style.width), parseFloat(style.height)];\n}\nfunction getSize(target, style) {\n  if (style === void 0) {\n    style = getComputedStyle(target);\n  }\n  var hasOffset = !isUndefined(target.offsetWidth);\n  if (!hasOffset && target.tagName.toLowerCase() !== \"svg\") {\n    var bbox = target.getBBox();\n    var offsetWidth = bbox.width;\n    var offsetHeight = bbox.height;\n    return {\n      svg: true,\n      offsetWidth: offsetWidth,\n      offsetHeight: offsetHeight,\n      clientWidth: offsetWidth,\n      clientHeight: offsetHeight,\n      cssWidth: offsetWidth,\n      cssHeight: offsetHeight\n    };\n  } else {\n    var boxSizing = style.boxSizing === \"border-box\";\n    var borderLeft = parseFloat(style.borderLeftWidth) || 0;\n    var borderRight = parseFloat(style.borderRightWidth) || 0;\n    var borderTop = parseFloat(style.borderTopWidth) || 0;\n    var borderBottom = parseFloat(style.borderBottomWidth) || 0;\n    var paddingLeft = parseFloat(style.paddingLeft) || 0;\n    var paddingRight = parseFloat(style.paddingRight) || 0;\n    var paddingTop = parseFloat(style.paddingTop) || 0;\n    var paddingBottom = parseFloat(style.paddingBottom) || 0;\n    var cssWidth = parseFloat(style.width);\n    var cssHeight = parseFloat(style.height);\n    var offsetWidth = cssWidth;\n    var offsetHeight = cssHeight;\n    var clientWidth = cssWidth;\n    var clientHeight = cssHeight;\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorder = borderLeft + borderRight;\n    var verticalBorder = borderTop + borderBottom;\n    var horizontalOffset = horizontalPadding + horizontalBorder;\n    var verticalOffset = verticalPadding + verticalBorder;\n    if (boxSizing) {\n      cssWidth = offsetWidth - horizontalOffset;\n      cssHeight = offsetHeight - verticalOffset;\n    } else {\n      offsetWidth = cssWidth + horizontalOffset;\n      offsetHeight = cssHeight + verticalOffset;\n    }\n    clientWidth = cssWidth + horizontalPadding;\n    clientHeight = cssHeight + verticalPadding;\n    return {\n      svg: false,\n      offsetWidth: offsetWidth,\n      offsetHeight: offsetHeight,\n      clientWidth: clientWidth,\n      clientHeight: clientHeight,\n      cssWidth: cssWidth,\n      cssHeight: cssHeight\n    };\n  }\n}\nfunction getRotationRad(poses, direction) {\n  return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\nfunction getTargetInfo(moveableElement, target, container, parentContainer, rootContainer) {\n  var beforeDirection = 1;\n  var beforeOrigin = [0, 0];\n  var targetClientRect = resetClientRect();\n  var containerClientRect = resetClientRect();\n  var moveableClientRect = resetClientRect();\n  var result = calculateElementInfo(target, container, rootContainer, false);\n  if (target) {\n    var n = result.is3d ? 4 : 3;\n    var beforePosition = calculateMoveablePosition(result.offsetMatrix, plus(result.transformOrigin, getOrigin(result.targetMatrix, n)), result.width, result.height);\n    beforeDirection = beforePosition.direction;\n    beforeOrigin = plus(beforePosition.origin, [beforePosition.left - result.left, beforePosition.top - result.top]);\n    targetClientRect = getClientRect(target);\n    containerClientRect = getClientRect(getOffsetInfo(parentContainer, parentContainer, true).offsetParent || document.body, true);\n    if (moveableElement) {\n      moveableClientRect = getClientRect(moveableElement);\n    }\n  }\n  return __assign({\n    targetClientRect: targetClientRect,\n    containerClientRect: containerClientRect,\n    moveableClientRect: moveableClientRect,\n    beforeDirection: beforeDirection,\n    beforeOrigin: beforeOrigin,\n    originalBeforeOrigin: beforeOrigin,\n    target: target\n  }, result);\n}\nfunction resetClientRect() {\n  return {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    width: 0,\n    height: 0,\n    clientLeft: 0,\n    clientTop: 0,\n    clientWidth: 0,\n    clientHeight: 0,\n    scrollWidth: 0,\n    scrollHeight: 0\n  };\n}\nfunction getClientRect(el, isExtends) {\n  var _a;\n  var left = 0;\n  var top = 0;\n  var width = 0;\n  var height = 0;\n  if (el === document.body || el === document.documentElement) {\n    width = window.innerWidth;\n    height = window.innerHeight;\n    var scrollPos = getBodyScrollPos();\n    _a = [-scrollPos[0], -scrollPos[1]], left = _a[0], top = _a[1];\n  } else {\n    var clientRect = el.getBoundingClientRect();\n    left = clientRect.left;\n    top = clientRect.top;\n    width = clientRect.width;\n    height = clientRect.height;\n  }\n  var rect = {\n    left: left,\n    right: left + width,\n    top: top,\n    bottom: top + height,\n    width: width,\n    height: height\n  };\n  if (isExtends) {\n    rect.clientLeft = el.clientLeft;\n    rect.clientTop = el.clientTop;\n    rect.clientWidth = el.clientWidth;\n    rect.clientHeight = el.clientHeight;\n    rect.scrollWidth = el.scrollWidth;\n    rect.scrollHeight = el.scrollHeight;\n    rect.overflow = getComputedStyle(el).overflow !== \"visible\";\n  }\n  return rect;\n}\nfunction getDirection(target) {\n  if (!target) {\n    return;\n  }\n  var direciton = target.getAttribute(\"data-direction\");\n  if (!direciton) {\n    return;\n  }\n  var dir = [0, 0];\n  direciton.indexOf(\"w\") > -1 && (dir[0] = -1);\n  direciton.indexOf(\"e\") > -1 && (dir[0] = 1);\n  direciton.indexOf(\"n\") > -1 && (dir[1] = -1);\n  direciton.indexOf(\"s\") > -1 && (dir[1] = 1);\n  return dir;\n}\nfunction getAbsolutePoses(poses, dist) {\n  return [plus(dist, poses[0]), plus(dist, poses[1]), plus(dist, poses[2]), plus(dist, poses[3])];\n}\nfunction getAbsolutePosesByState(_a) {\n  var left = _a.left,\n    top = _a.top,\n    pos1 = _a.pos1,\n    pos2 = _a.pos2,\n    pos3 = _a.pos3,\n    pos4 = _a.pos4;\n  return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\nfunction roundSign(num) {\n  return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\nfunction unset(self, name) {\n  var _a;\n  (_a = self[name]) === null || _a === void 0 ? void 0 : _a.unset();\n  self[name] = null;\n}\nfunction fillParams(moveable, e, params, isBeforeEvent) {\n  var datas = e.datas;\n  if (!datas.datas) {\n    datas.datas = {};\n  }\n  var nextParams = __assign(__assign({}, params), {\n    target: moveable.state.target,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    inputEvent: e.inputEvent,\n    currentTarget: moveable,\n    moveable: moveable,\n    datas: datas.datas\n  });\n  if (!datas.isStartEvent) {\n    datas.isStartEvent = true;\n  } else if (!isBeforeEvent) {\n    datas.lastEvent = nextParams;\n  }\n  return nextParams;\n}\nfunction fillEndParams(moveable, e, params) {\n  var datas = e.datas;\n  var isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n  if (!datas.datas) {\n    datas.datas = {};\n  }\n  return __assign(__assign({\n    isDrag: isDrag\n  }, params), {\n    moveable: moveable,\n    target: moveable.state.target,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    inputEvent: e.inputEvent,\n    currentTarget: moveable,\n    lastEvent: datas.lastEvent,\n    isDouble: e.isDouble,\n    datas: datas.datas\n  });\n}\nfunction catchEvent(moveable, name, callback) {\n  moveable._emitter.on(name, callback);\n}\nfunction triggerEvent(moveable, name, params, isManager) {\n  return moveable.triggerEvent(name, params, isManager);\n}\nfunction getComputedStyle(el, pseudoElt) {\n  return window.getComputedStyle(el, pseudoElt);\n}\nfunction filterAbles(ables, methods, triggerAblesSimultaneously) {\n  var enabledAbles = {};\n  var ableGroups = {};\n  return ables.filter(function (able) {\n    var name = able.name;\n    if (enabledAbles[name] || !methods.some(function (method) {\n      return able[method];\n    })) {\n      return false;\n    }\n    if (!triggerAblesSimultaneously && able.ableGroup) {\n      if (ableGroups[able.ableGroup]) {\n        return false;\n      }\n      ableGroups[able.ableGroup] = true;\n    }\n    enabledAbles[name] = true;\n    return true;\n  });\n}\nfunction equals(a1, a2) {\n  return a1 === a2 || a1 == null && a2 == null;\n}\nfunction selectValue() {\n  var values = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    values[_i] = arguments[_i];\n  }\n  var length = values.length - 1;\n  for (var i = 0; i < length; ++i) {\n    var value = values[i];\n    if (!isUndefined(value)) {\n      return value;\n    }\n  }\n  return values[length];\n}\nfunction groupBy(arr, func) {\n  var groups = [];\n  var groupKeys = [];\n  arr.forEach(function (el, index) {\n    var groupKey = func(el, index, arr);\n    var keyIndex = groupKeys.indexOf(groupKey);\n    var group = groups[keyIndex] || [];\n    if (keyIndex === -1) {\n      groupKeys.push(groupKey);\n      groups.push(group);\n    }\n    group.push(el);\n  });\n  return groups;\n}\nfunction groupByMap(arr, func) {\n  var groups = [];\n  var groupKeys = {};\n  arr.forEach(function (el, index) {\n    var groupKey = func(el, index, arr);\n    var group = groupKeys[groupKey];\n    if (!group) {\n      group = [];\n      groupKeys[groupKey] = group;\n      groups.push(group);\n    }\n    group.push(el);\n  });\n  return groups;\n}\nfunction flat(arr) {\n  return arr.reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n}\nfunction maxOffset() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  args.sort(function (a, b) {\n    return Math.abs(b) - Math.abs(a);\n  });\n  return args[0];\n}\nfunction calculateInversePosition(matrix, pos, n) {\n  return calculate(invert(matrix, n), convertPositionMatrix(pos, n), n);\n}\nfunction convertDragDist(state, e) {\n  var _a;\n  var is3d = state.is3d,\n    rootMatrix = state.rootMatrix;\n  var n = is3d ? 4 : 3;\n  _a = calculateInversePosition(rootMatrix, [e.distX, e.distY], n), e.distX = _a[0], e.distY = _a[1];\n  return e;\n}\nfunction calculatePadding(matrix, pos, transformOrigin, origin, n) {\n  return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\nfunction convertCSSSize(value, size, isRelative) {\n  return isRelative ? \"\".concat(value / size * 100, \"%\") : \"\".concat(value, \"px\");\n}\nfunction getTinyDist(v) {\n  return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\nfunction directionCondition(moveable, e) {\n  if (e.isRequest) {\n    if (e.requestAble === \"resizable\" || e.requestAble === \"scalable\") {\n      return e.parentDirection;\n    } else {\n      return false;\n    }\n  }\n  return hasClass(e.inputEvent.target, prefix(\"direction\"));\n}\nfunction invertObject(obj) {\n  var nextObj = {};\n  for (var name in obj) {\n    nextObj[obj[name]] = name;\n  }\n  return nextObj;\n}\nfunction convertTransformInfo(transforms, index) {\n  var beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n  var beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n  var targetFunctionText = transforms[index] || \"\";\n  var afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n  var afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n  var beforeFunctions = parse(beforeFunctionTexts);\n  var beforeFunctions2 = parse(beforeFunctionTexts2);\n  var targetFunctions = parse([targetFunctionText]);\n  var afterFunctions = parse(afterFunctionTexts);\n  var afterFunctions2 = parse(afterFunctionTexts2);\n  var beforeFunctionMatrix = toMat(beforeFunctions);\n  var beforeFunctionMatrix2 = toMat(beforeFunctions2);\n  var afterFunctionMatrix = toMat(afterFunctions);\n  var afterFunctionMatrix2 = toMat(afterFunctions2);\n  var allFunctionMatrix = multiply(beforeFunctionMatrix, afterFunctionMatrix, 4);\n  return {\n    transforms: transforms,\n    beforeFunctionMatrix: beforeFunctionMatrix,\n    beforeFunctionMatrix2: beforeFunctionMatrix2,\n    targetFunctionMatrix: toMat(targetFunctions),\n    afterFunctionMatrix: afterFunctionMatrix,\n    afterFunctionMatrix2: afterFunctionMatrix2,\n    allFunctionMatrix: allFunctionMatrix,\n    beforeFunctions: beforeFunctions,\n    beforeFunctions2: beforeFunctions2,\n    targetFunction: targetFunctions[0],\n    afterFunctions: afterFunctions,\n    afterFunctions2: afterFunctions2,\n    beforeFunctionTexts: beforeFunctionTexts,\n    beforeFunctionTexts2: beforeFunctionTexts2,\n    targetFunctionText: targetFunctionText,\n    afterFunctionTexts: afterFunctionTexts,\n    afterFunctionTexts2: afterFunctionTexts2\n  };\n}\nfunction isArrayFormat(arr) {\n  if (!arr || !isObject(arr)) {\n    return false;\n  }\n  if (arr instanceof Element) {\n    return false;\n  }\n  return isArray(arr) || \"length\" in arr;\n}\nfunction getRefTarget(target, isSelector) {\n  if (!target) {\n    return null;\n  }\n  if (isString(target)) {\n    if (isSelector) {\n      return document.querySelector(target);\n    }\n    return target;\n  }\n  if (isFunction(target)) {\n    return target();\n  }\n  if (\"current\" in target) {\n    return target.current;\n  }\n  return target;\n}\nfunction getRefTargets(targets, isSelector) {\n  if (!targets) {\n    return [];\n  }\n  var userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n  return userTargets.reduce(function (prev, target) {\n    if (isString(target) && isSelector) {\n      return __spreadArray(__spreadArray([], prev, true), [].slice.call(document.querySelectorAll(target)), true);\n    }\n    prev.push(getRefTarget(target, isSelector));\n    return prev;\n  }, []);\n}\nfunction getElementTargets(targets, selectorMap) {\n  var elementTargets = [];\n  targets.forEach(function (target) {\n    if (!target) {\n      return;\n    }\n    if (isString(target)) {\n      if (selectorMap[target]) {\n        elementTargets.push.apply(elementTargets, selectorMap[target]);\n      }\n      return;\n    }\n    elementTargets.push(target);\n  });\n  return elementTargets;\n}\nfunction getAbsoluteRotation(pos1, pos2, direction) {\n  var deg = getRad(pos1, pos2) / Math.PI * 180;\n  deg = direction >= 0 ? deg : 180 - deg;\n  deg = deg >= 0 ? deg : 360 + deg;\n  return deg;\n}\nfunction getDragDistByState(state, dist) {\n  var rootMatrix = state.rootMatrix,\n    is3d = state.is3d;\n  var n = is3d ? 4 : 3;\n  var inverseMatrix = invert(rootMatrix, n);\n  if (!is3d) {\n    inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n  }\n  inverseMatrix[12] = 0;\n  inverseMatrix[13] = 0;\n  inverseMatrix[14] = 0;\n  return calculateMatrixDist(inverseMatrix, dist);\n}\nfunction getSizeDistByDist(startSize, dist, ratio, direction, keepRatio) {\n  var startOffsetWidth = startSize[0],\n    startOffsetHeight = startSize[1];\n  var distWidth = 0;\n  var distHeight = 0;\n  if (keepRatio && startOffsetWidth && startOffsetHeight) {\n    var rad = getRad([0, 0], dist);\n    var standardRad = getRad([0, 0], direction);\n    var size = getDistSize(dist);\n    var signSize = Math.cos(rad - standardRad) * size;\n    if (!direction[0]) {\n      // top, bottom\n      distHeight = signSize;\n      distWidth = distHeight * ratio;\n    } else if (!direction[1]) {\n      // left, right\n      distWidth = signSize;\n      distHeight = distWidth / ratio;\n    } else {\n      // two-way\n      var startWidthSize = direction[0] * 2 * startOffsetWidth;\n      var startHeightSize = direction[1] * 2 * startOffsetHeight;\n      var distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]]) - getDistSize([startWidthSize, startHeightSize]);\n      var ratioRad = getRad([0, 0], [ratio, 1]);\n      distWidth = Math.cos(ratioRad) * distSize;\n      distHeight = Math.sin(ratioRad) * distSize;\n    }\n  } else {\n    distWidth = direction[0] * dist[0];\n    distHeight = direction[1] * dist[1];\n  }\n  return [distWidth, distHeight];\n}\nfunction getOffsetSizeDist(sizeDirection, keepRatio, datas, e) {\n  var _a;\n  var ratio = datas.ratio,\n    startOffsetWidth = datas.startOffsetWidth,\n    startOffsetHeight = datas.startOffsetHeight;\n  var distWidth = 0;\n  var distHeight = 0;\n  var distX = e.distX,\n    distY = e.distY,\n    parentDistance = e.parentDistance,\n    parentDist = e.parentDist,\n    parentScale = e.parentScale,\n    isPinch = e.isPinch;\n  var startFixedDirection = datas.fixedDirection;\n  if (parentDist) {\n    distWidth = parentDist[0];\n    distHeight = parentDist[1];\n    if (keepRatio) {\n      if (!distWidth) {\n        distWidth = distHeight * ratio;\n      } else if (!distHeight) {\n        distHeight = distWidth / ratio;\n      }\n    }\n  } else if (parentScale) {\n    distWidth = (parentScale[0] - 1) * startOffsetWidth;\n    distHeight = (parentScale[1] - 1) * startOffsetHeight;\n  } else if (isPinch) {\n    if (parentDistance) {\n      distWidth = parentDistance;\n      distHeight = parentDistance * startOffsetHeight / startOffsetWidth;\n    }\n  } else {\n    var dist_1 = getDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    });\n    dist_1 = [0, 1].map(function (index) {\n      var directionRatio = Math.abs(sizeDirection[index] - startFixedDirection[index]);\n      if (directionRatio !== 0) {\n        directionRatio = 2 / directionRatio;\n      }\n      return dist_1[index] * directionRatio;\n    });\n    _a = getSizeDistByDist([startOffsetWidth, startOffsetHeight], dist_1, ratio, sizeDirection, keepRatio), distWidth = _a[0], distHeight = _a[1];\n  }\n  return {\n    // direction,\n    // sizeDirection,\n    distWidth: distWidth,\n    distHeight: distHeight\n  };\n}\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\n\nvar Pinchable = makeAble(\"pinchable\", {\n  events: {\n    onPinchStart: \"pinchStart\",\n    onPinch: \"pinch\",\n    onPinchEnd: \"pinchEnd\",\n    onPinchGroupStart: \"pinchGroupStart\",\n    onPinchGroup: \"pinchGroup\",\n    onPinchGroupEnd: \"pinchGroupEnd\"\n  },\n  dragStart: function () {\n    return true;\n  },\n  pinchStart: function (moveable, e) {\n    var datas = e.datas,\n      targets = e.targets,\n      angle = e.angle,\n      originalDatas = e.originalDatas;\n    var _a = moveable.props,\n      pinchable = _a.pinchable,\n      ables = _a.ables;\n    if (!pinchable) {\n      return false;\n    }\n    var eventName = \"onPinch\".concat(targets ? \"Group\" : \"\", \"Start\");\n    var controlEventName = \"drag\".concat(targets ? \"Group\" : \"\", \"ControlStart\");\n    var pinchAbles = (pinchable === true ? moveable.controlAbles : ables.filter(function (able) {\n      return pinchable.indexOf(able.name) > -1;\n    })).filter(function (able) {\n      return able.canPinch && able[controlEventName];\n    });\n    var params = fillParams(moveable, e, {});\n    if (targets) {\n      params.targets = targets;\n    }\n    var result = triggerEvent(moveable, eventName, params);\n    datas.isPinch = result !== false;\n    datas.ables = pinchAbles;\n    var isPinch = datas.isPinch;\n    if (!isPinch) {\n      return false;\n    }\n    pinchAbles.forEach(function (able) {\n      originalDatas[able.name] = originalDatas[able.name] || {};\n      if (!able[controlEventName]) {\n        return;\n      }\n      var ableEvent = __assign(__assign({}, e), {\n        datas: originalDatas[able.name],\n        parentRotate: angle,\n        isPinch: true\n      });\n      able[controlEventName](moveable, ableEvent);\n    });\n    moveable.state.snapRenderInfo = {\n      request: e.isRequest,\n      direction: [0, 0]\n    };\n    return isPinch;\n  },\n  pinch: function (moveable, e) {\n    var datas = e.datas,\n      pinchScale = e.scale,\n      distance = e.distance,\n      originalDatas = e.originalDatas,\n      inputEvent = e.inputEvent,\n      targets = e.targets,\n      angle = e.angle;\n    if (!datas.isPinch) {\n      return;\n    }\n    var parentDistance = distance * (1 - 1 / pinchScale);\n    var params = fillParams(moveable, e, {});\n    if (targets) {\n      params.targets = targets;\n    }\n    var eventName = \"onPinch\".concat(targets ? \"Group\" : \"\");\n    triggerEvent(moveable, eventName, params);\n    var ables = datas.ables;\n    var controlEventName = \"drag\".concat(targets ? \"Group\" : \"\", \"Control\");\n    ables.forEach(function (able) {\n      if (!able[controlEventName]) {\n        return;\n      }\n      able[controlEventName](moveable, __assign(__assign({}, e), {\n        datas: originalDatas[able.name],\n        inputEvent: inputEvent,\n        parentDistance: parentDistance,\n        parentRotate: angle,\n        isPinch: true\n      }));\n    });\n    return params;\n  },\n  pinchEnd: function (moveable, e) {\n    var datas = e.datas,\n      isPinch = e.isPinch,\n      inputEvent = e.inputEvent,\n      targets = e.targets,\n      originalDatas = e.originalDatas;\n    if (!datas.isPinch) {\n      return;\n    }\n    var eventName = \"onPinch\".concat(targets ? \"Group\" : \"\", \"End\");\n    var params = fillEndParams(moveable, e, {\n      isDrag: isPinch\n    });\n    if (targets) {\n      params.targets = targets;\n    }\n    triggerEvent(moveable, eventName, params);\n    var ables = datas.ables;\n    var controlEventName = \"drag\".concat(targets ? \"Group\" : \"\", \"ControlEnd\");\n    ables.forEach(function (able) {\n      if (!able[controlEventName]) {\n        return;\n      }\n      able[controlEventName](moveable, __assign(__assign({}, e), {\n        isDrag: isPinch,\n        datas: originalDatas[able.name],\n        inputEvent: inputEvent,\n        isPinch: true\n      }));\n    });\n    return isPinch;\n  },\n  pinchGroupStart: function (moveable, e) {\n    return this.pinchStart(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  pinchGroup: function (moveable, e) {\n    return this.pinch(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  pinchGroupEnd: function (moveable, e) {\n    return this.pinchEnd(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  }\n});\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nvar Resizable = {\n  name: \"resizable\",\n  ableGroup: \"size\",\n  canPinch: true,\n  props: {\n    resizable: Boolean,\n    throttleResize: Number,\n    renderDirections: Array,\n    keepRatio: Boolean,\n    resizeFormat: Function\n  },\n  events: {\n    onResizeStart: \"resizeStart\",\n    onBeforeResize: \"beforeResize\",\n    onResize: \"resize\",\n    onResizeEnd: \"resizeEnd\",\n    onResizeGroupStart: \"resizeGroupStart\",\n    onBeforeResizeGroup: \"beforeResizeGroup\",\n    onResizeGroup: \"resizeGroup\",\n    onResizeGroupEnd: \"resizeGroupEnd\"\n  },\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      resizable = _a.resizable,\n      edge = _a.edge;\n    if (resizable) {\n      if (edge) {\n        return renderDiagonalDirections(moveable, React);\n      }\n      return renderAllDirections(moveable, React);\n    }\n  },\n  dragControlCondition: directionCondition,\n  dragControlStart: function (moveable, e) {\n    var _a;\n    var inputEvent = e.inputEvent,\n      isPinch = e.isPinch,\n      isGroup = e.isGroup,\n      parentDirection = e.parentDirection,\n      datas = e.datas;\n    var direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n    var _b = moveable.state,\n      target = _b.target,\n      width = _b.width,\n      height = _b.height;\n    if (!direction || !target) {\n      return false;\n    }\n    !isPinch && setDragStart(moveable, e);\n    datas.datas = {};\n    datas.direction = direction;\n    datas.startOffsetWidth = width;\n    datas.startOffsetHeight = height;\n    datas.prevWidth = 0;\n    datas.prevHeight = 0;\n    _a = getCSSSize(target), datas.startWidth = _a[0], datas.startHeight = _a[1];\n    var padding = [Math.max(0, width - datas.startWidth), Math.max(0, height - datas.startHeight)];\n    datas.minSize = padding;\n    datas.maxSize = [Infinity, Infinity];\n    if (!isGroup) {\n      var style = getComputedStyle(target);\n      var position = style.position,\n        minWidth = style.minWidth,\n        minHeight = style.minHeight,\n        maxWidth = style.maxWidth,\n        maxHeight = style.maxHeight;\n      var isParentElement = position === \"static\" || position === \"relative\";\n      var container = isParentElement ? target.parentElement : target.offsetParent;\n      var containerWidth = width;\n      var containerHeight = height;\n      if (container) {\n        containerWidth = container.clientWidth;\n        containerHeight = container.clientHeight;\n        if (isParentElement) {\n          var containerStyle = getComputedStyle(container);\n          containerWidth -= parseFloat(containerStyle.paddingLeft) || 0;\n          containerHeight -= parseFloat(containerStyle.paddingTop) || 0;\n        }\n      }\n      datas.minSize = plus([convertUnitSize(minWidth, containerWidth) || 0, convertUnitSize(minHeight, containerHeight) || 0], padding);\n      datas.maxSize = plus([convertUnitSize(maxWidth, containerWidth) || Infinity, convertUnitSize(maxHeight, containerHeight) || Infinity], padding);\n    }\n    var transformOrigin = moveable.props.transformOrigin || \"% %\";\n    datas.transformOrigin = transformOrigin && isString(transformOrigin) ? transformOrigin.split(\" \") : transformOrigin;\n    datas.isWidth = !direction[0] && !direction[1] || direction[0] || !direction[1];\n    function setRatio(ratio) {\n      datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n    }\n    datas.startPositions = getAbsolutePosesByState(moveable.state);\n    function setFixedDirection(fixedDirection) {\n      datas.fixedDirection = fixedDirection;\n      datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n    }\n    function setMin(minSize) {\n      datas.minSize = [convertUnitSize(\"\".concat(minSize[0]), 0) || 0, convertUnitSize(\"\".concat(minSize[1]), 0) || 0];\n    }\n    function setMax(maxSize) {\n      var nextMaxSize = [maxSize[0] || Infinity, maxSize[1] || Infinity];\n      if (!isNumber(nextMaxSize[0]) || isFinite(nextMaxSize[0])) {\n        nextMaxSize[0] = convertUnitSize(\"\".concat(nextMaxSize[0]), 0) || Infinity;\n      }\n      if (!isNumber(nextMaxSize[1]) || isFinite(nextMaxSize[1])) {\n        nextMaxSize[1] = convertUnitSize(\"\".concat(nextMaxSize[1]), 0) || Infinity;\n      }\n      datas.maxSize = nextMaxSize;\n    }\n    setRatio(width / height);\n    setFixedDirection([-direction[0], -direction[1]]);\n    datas.setFixedDirection = setFixedDirection;\n    datas.setMin = setMin;\n    datas.setMax = setMax;\n    var params = fillParams(moveable, e, {\n      direction: direction,\n      set: function (_a) {\n        var startWidth = _a[0],\n          startHeight = _a[1];\n        datas.startWidth = startWidth;\n        datas.startHeight = startHeight;\n      },\n      setMin: setMin,\n      setMax: setMax,\n      setRatio: setRatio,\n      setFixedDirection: setFixedDirection,\n      setOrigin: function (origin) {\n        datas.transformOrigin = origin;\n      },\n      dragStart: Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e))\n    });\n    var result = triggerEvent(moveable, \"onResizeStart\", params);\n    if (result !== false) {\n      datas.isResize = true;\n      moveable.state.snapRenderInfo = {\n        request: e.isRequest,\n        direction: direction\n      };\n    }\n    return datas.isResize ? params : false;\n  },\n  dragControl: function (moveable, e) {\n    var _a;\n    var datas = e.datas,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      parentKeepRatio = e.parentKeepRatio,\n      dragClient = e.dragClient,\n      parentDist = e.parentDist,\n      isRequest = e.isRequest;\n    var isResize = datas.isResize,\n      transformOrigin = datas.transformOrigin,\n      startWidth = datas.startWidth,\n      startHeight = datas.startHeight,\n      prevWidth = datas.prevWidth,\n      prevHeight = datas.prevHeight,\n      minSize = datas.minSize,\n      maxSize = datas.maxSize,\n      ratio = datas.ratio,\n      isWidth = datas.isWidth,\n      startOffsetWidth = datas.startOffsetWidth,\n      startOffsetHeight = datas.startOffsetHeight;\n    if (!isResize) {\n      return;\n    }\n    var props = moveable.props;\n    var resizeFormat = props.resizeFormat,\n      _b = props.throttleResize,\n      throttleResize = _b === void 0 ? 1 : _b,\n      parentMoveable = props.parentMoveable;\n    var direction = datas.direction;\n    var sizeDirection = direction;\n    var distWidth = 0;\n    var distHeight = 0;\n    if (!direction[0] && !direction[1]) {\n      sizeDirection = [1, 1];\n    }\n    var keepRatio = ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio) || false;\n    function getNextBoundingSize() {\n      var nextSize = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n      distWidth = nextSize.distWidth;\n      distHeight = nextSize.distHeight;\n      var nextWidth = sizeDirection[0] || keepRatio ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n      var nextHeight = sizeDirection[1] || keepRatio ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n      if (keepRatio && startOffsetWidth && startOffsetHeight) {\n        // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n        if (isWidth) {\n          nextHeight = nextWidth / ratio;\n        } else {\n          nextWidth = nextHeight * ratio;\n        }\n      }\n      return [nextWidth, nextHeight];\n    }\n    var _c = getNextBoundingSize(),\n      boundingWidth = _c[0],\n      boundingHeight = _c[1];\n    datas.setFixedDirection(datas.fixedDirection);\n    triggerEvent(moveable, \"onBeforeResize\", fillParams(moveable, e, {\n      setFixedDirection: function (nextFixedDirection) {\n        var _a;\n        datas.setFixedDirection(nextFixedDirection);\n        _a = getNextBoundingSize(), boundingWidth = _a[0], boundingHeight = _a[1];\n        return [boundingWidth, boundingHeight];\n      },\n      boundingWidth: boundingWidth,\n      boundingHeight: boundingHeight,\n      setSize: function (size) {\n        boundingWidth = size[0], boundingHeight = size[1];\n      }\n    }, true));\n    var fixedPosition = dragClient;\n    if (!dragClient) {\n      if (!parentFlag && isPinch) {\n        fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n      } else {\n        fixedPosition = datas.fixedPosition;\n      }\n    }\n    var snapDist = [0, 0];\n    if (!isPinch) {\n      snapDist = checkSnapResize(moveable, boundingWidth, boundingHeight, direction, fixedPosition, isRequest, datas);\n    }\n    if (parentDist) {\n      !parentDist[0] && (snapDist[0] = 0);\n      !parentDist[1] && (snapDist[1] = 0);\n    }\n    function computeSize() {\n      var _a;\n      if (resizeFormat) {\n        _a = resizeFormat([boundingWidth, boundingHeight]), boundingWidth = _a[0], boundingHeight = _a[1];\n      }\n      boundingWidth = throttle(boundingWidth, throttleResize);\n      boundingHeight = throttle(boundingHeight, throttleResize);\n    }\n    if (keepRatio) {\n      if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n        if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n          snapDist[1] = 0;\n        } else {\n          snapDist[0] = 0;\n        }\n      }\n      var isNoSnap = !snapDist[0] && !snapDist[1];\n      if (isNoSnap) {\n        // pre-compute before maintaining the ratio\n        computeSize();\n      }\n      if (sizeDirection[0] && !sizeDirection[1] || snapDist[0] && !snapDist[1] || isNoSnap && isWidth) {\n        boundingWidth += snapDist[0];\n        boundingHeight = boundingWidth / ratio;\n      } else if (!sizeDirection[0] && sizeDirection[1] || !snapDist[0] && snapDist[1] || isNoSnap && !isWidth) {\n        boundingHeight += snapDist[1];\n        boundingWidth = boundingHeight * ratio;\n      }\n    } else {\n      boundingWidth += snapDist[0];\n      boundingHeight += snapDist[1];\n      boundingWidth = Math.max(0, boundingWidth);\n      boundingHeight = Math.max(0, boundingHeight);\n    }\n    _a = calculateBoundSize([boundingWidth, boundingHeight], minSize, maxSize, keepRatio ? ratio : false), boundingWidth = _a[0], boundingHeight = _a[1];\n    computeSize();\n    distWidth = boundingWidth - startOffsetWidth;\n    distHeight = boundingHeight - startOffsetHeight;\n    var delta = [distWidth - prevWidth, distHeight - prevHeight];\n    datas.prevWidth = distWidth;\n    datas.prevHeight = distHeight;\n    var inverseDelta = getResizeDist(moveable, boundingWidth, boundingHeight, datas.fixedDirection, fixedPosition, transformOrigin);\n    if (!parentMoveable && delta.every(function (num) {\n      return !num;\n    }) && inverseDelta.every(function (num) {\n      return !num;\n    })) {\n      return;\n    }\n    var params = fillParams(moveable, e, {\n      width: startWidth + distWidth,\n      height: startHeight + distHeight,\n      offsetWidth: Math.round(boundingWidth),\n      offsetHeight: Math.round(boundingHeight),\n      boundingWidth: boundingWidth,\n      boundingHeight: boundingHeight,\n      direction: direction,\n      dist: [distWidth, distHeight],\n      delta: delta,\n      isPinch: !!isPinch,\n      drag: Draggable.drag(moveable, setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false))\n    });\n    triggerEvent(moveable, \"onResize\", params);\n    return params;\n  },\n  dragControlAfter: function (moveable, e) {\n    var datas = e.datas;\n    var isResize = datas.isResize,\n      startOffsetWidth = datas.startOffsetWidth,\n      startOffsetHeight = datas.startOffsetHeight,\n      prevWidth = datas.prevWidth,\n      prevHeight = datas.prevHeight;\n    if (!isResize) {\n      return;\n    }\n    var _a = moveable.state,\n      width = _a.width,\n      height = _a.height;\n    var errorWidth = width - (startOffsetWidth + prevWidth);\n    var errorHeight = height - (startOffsetHeight + prevHeight);\n    var isErrorWidth = Math.abs(errorWidth) > 3;\n    var isErrorHeight = Math.abs(errorHeight) > 3;\n    if (isErrorWidth) {\n      datas.startWidth += errorWidth;\n      datas.startOffsetWidth += errorWidth;\n      datas.prevWidth += errorWidth;\n    }\n    if (isErrorHeight) {\n      datas.startHeight += errorHeight;\n      datas.startOffsetHeight += errorHeight;\n      datas.prevHeight += errorHeight;\n    }\n    if (isErrorWidth || isErrorHeight) {\n      return this.dragControl(moveable, e);\n    }\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isResize) {\n      return;\n    }\n    datas.isResize = false;\n    var params = fillEndParams(moveable, e, {});\n    triggerEvent(moveable, \"onResizeEnd\", params);\n    return params;\n  },\n  dragGroupControlCondition: directionCondition,\n  dragGroupControlStart: function (moveable, e) {\n    var datas = e.datas;\n    var params = this.dragControlStart(moveable, __assign(__assign({}, e), {\n      isGroup: true\n    }));\n    if (!params) {\n      return false;\n    }\n    var originalEvents = fillChildEvents(moveable, \"resizable\", e);\n    function setDist(child, ev) {\n      var fixedDirection = datas.fixedDirection;\n      var fixedPosition = datas.fixedPosition;\n      var startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n      var pos = getPosByDirection(startPositions, fixedDirection);\n      var _a = calculate(createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3), [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1], 3),\n        originalX = _a[0],\n        originalY = _a[1];\n      ev.datas.originalX = originalX;\n      ev.datas.originalY = originalY;\n      return ev;\n    }\n    var parentStartOffsetWidth = datas.startOffsetWidth,\n      parentStartOffsetHeight = datas.startOffsetHeight;\n    function updateGroupMin() {\n      var originalMinSize = datas.minSize;\n      originalEvents.forEach(function (ev) {\n        var _a = ev.datas,\n          childMinSize = _a.minSize,\n          childStartOffsetWidth = _a.startOffsetWidth,\n          childStartOffsetHeight = _a.startOffsetHeight;\n        var parentMinWidth = parentStartOffsetWidth * (childStartOffsetWidth ? childMinSize[0] / childStartOffsetWidth : 0);\n        var parentMinHeight = parentStartOffsetHeight * (childStartOffsetHeight ? childMinSize[1] / childStartOffsetHeight : 0);\n        originalMinSize[0] = Math.max(originalMinSize[0], parentMinWidth);\n        originalMinSize[1] = Math.max(originalMinSize[1], parentMinHeight);\n      });\n    }\n    function updateGroupMax() {\n      var originalMaxSize = datas.maxSize;\n      originalEvents.forEach(function (ev) {\n        var _a = ev.datas,\n          childMaxSize = _a.maxSize,\n          childStartOffsetWidth = _a.startOffsetWidth,\n          childStartOffsetHeight = _a.startOffsetHeight;\n        var parentMaxWidth = parentStartOffsetWidth * (childStartOffsetWidth ? childMaxSize[0] / childStartOffsetWidth : 0);\n        var parentMaxHeight = parentStartOffsetHeight * (childStartOffsetHeight ? childMaxSize[1] / childStartOffsetHeight : 0);\n        originalMaxSize[0] = Math.min(originalMaxSize[0], parentMaxWidth);\n        originalMaxSize[1] = Math.min(originalMaxSize[1], parentMaxHeight);\n      });\n    }\n    var events = triggerChildAbles(moveable, this, \"dragControlStart\", e, function (child, ev) {\n      return setDist(child, ev);\n    });\n    updateGroupMin();\n    updateGroupMax();\n    var setFixedDirection = function (fixedDirection) {\n      params.setFixedDirection(fixedDirection);\n      events.forEach(function (ev, i) {\n        ev.setFixedDirection(fixedDirection);\n        setDist(ev.moveable, originalEvents[i]);\n      });\n    };\n    datas.setFixedDirection = setFixedDirection;\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events.map(function (ev) {\n        return __assign(__assign({}, ev), {\n          setMin: function (minSize) {\n            ev.setMin(minSize);\n            updateGroupMin();\n          },\n          setMax: function (maxSize) {\n            ev.setMax(maxSize);\n            updateGroupMax();\n          }\n        });\n      }),\n      setFixedDirection: setFixedDirection,\n      setMin: function (minSize) {\n        params.setMin(minSize);\n        updateGroupMin();\n      },\n      setMax: function (maxSize) {\n        params.setMax(maxSize);\n        updateGroupMax();\n      }\n    });\n    var result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n    datas.isResize = result !== false;\n    return datas.isResize ? params : false;\n  },\n  dragGroupControl: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isResize) {\n      return;\n    }\n    catchEvent(moveable, \"onBeforeResize\", function (parentEvent) {\n      triggerEvent(moveable, \"onBeforeResizeGroup\", fillParams(moveable, e, __assign(__assign({}, parentEvent), {\n        targets: moveable.props.targets\n      }), true));\n    });\n    var params = this.dragControl(moveable, e);\n    if (!params) {\n      return;\n    }\n    var boundingWidth = params.boundingWidth,\n      boundingHeight = params.boundingHeight,\n      dist = params.dist;\n    var keepRatio = moveable.props.keepRatio;\n    var parentScale = [boundingWidth / (boundingWidth - dist[0]), boundingHeight / (boundingHeight - dist[1])];\n    var fixedPosition = datas.fixedPosition;\n    var events = triggerChildAbles(moveable, this, \"dragControl\", e, function (_, ev) {\n      var _a = calculate(createRotateMatrix(moveable.rotation / 180 * Math.PI, 3), [ev.datas.originalX * parentScale[0], ev.datas.originalY * parentScale[1], 1], 3),\n        clientX = _a[0],\n        clientY = _a[1];\n      return __assign(__assign({}, ev), {\n        parentDist: null,\n        parentScale: parentScale,\n        dragClient: plus(fixedPosition, [clientX, clientY]),\n        parentKeepRatio: keepRatio\n      });\n    });\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events\n    }, params);\n    triggerEvent(moveable, \"onResizeGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isResize) {\n      return;\n    }\n    this.dragControlEnd(moveable, e);\n    var events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n    var nextParams = fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    });\n    triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n    return isDrag;\n  },\n  /**\n   * @method Moveable.Resizable#request\n   * @param {Moveable.Resizable.ResizableRequestParam} e - the Resizable's request parameter\n   * @return {Moveable.Requester} Moveable Requester\n   * @example\n    * // Instantly Request (requestStart - request - requestEnd)\n   * // Use Relative Value\n   * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n   *\n   * // Use Absolute Value\n   * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n   *\n   * // requestStart\n   * const requester = moveable.request(\"resizable\");\n   *\n   * // request\n   * // Use Relative Value\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   *\n   * // Use Absolute Value\n   * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n   * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n   * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n   *\n   * // requestEnd\n   * requester.requestEnd();\n   */\n  request: function (moveable) {\n    var datas = {};\n    var distWidth = 0;\n    var distHeight = 0;\n    var rect = moveable.getRect();\n    return {\n      isControl: true,\n      requestStart: function (e) {\n        return {\n          datas: datas,\n          parentDirection: e.direction || [1, 1]\n        };\n      },\n      request: function (e) {\n        if (\"offsetWidth\" in e) {\n          distWidth = e.offsetWidth - rect.offsetWidth;\n        } else if (\"deltaWidth\" in e) {\n          distWidth += e.deltaWidth;\n        }\n        if (\"offsetHeight\" in e) {\n          distHeight = e.offsetHeight - rect.offsetHeight;\n        } else if (\"deltaHeight\" in e) {\n          distHeight += e.deltaHeight;\n        }\n        return {\n          datas: datas,\n          parentDist: [distWidth, distHeight],\n          parentKeepRatio: e.keepRatio\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  }\n};\n/**\n * Whether or not target can be resized.\n * @name Moveable.Resizable#resizable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize. If throttleResize is set to less than 1, the target may shake.\n * @name Moveable.Resizable#throttleResize\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 1,\n * });\n *\n * moveable.throttleResize = 0;\n */\n\n/**\n * When resize or scale, keeps a ratio of the width, height.\n * @name Moveable.Resizable#keepRatio\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n\n/**\n * Set directions to show the control box.\n * @name Moveable.Resizable#renderDirections\n * @default [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * Function to convert size for resize\n * @name Moveable.Resizable#resizeFormat\n * @default oneself\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   resizeFormat: v => v,\n * });\n *\n * moveable.resizeFormat = (size: number[]) => ([Math.trunc(size[0]), Math.trunc(size[1])];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When resizing, `beforeResize` is called before `resize` occurs. In `beforeResize`, you can get and set the pre-value before resizing.\n * @memberof Moveable.Resizable\n * @event beforeResize\n * @param {Moveable.Resizable.OnBeforeResize} - Parameters for the `beforeResize` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"beforeResize\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"resize\", ({ target, width, height, drag }) => {\n *     target.style.width = `${width}px`;\n *     target.style.height = `${height}px`;\n *     target.style.transform = drag.transform;\n * });\n */\n\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\n\nvar Scalable = {\n  name: \"scalable\",\n  ableGroup: \"size\",\n  canPinch: true,\n  props: {\n    scalable: Boolean,\n    throttleScale: Number,\n    renderDirections: String,\n    keepRatio: Boolean\n  },\n  events: {\n    onScaleStart: \"scaleStart\",\n    onBeforeScale: \"beforeScale\",\n    onScale: \"scale\",\n    onScaleEnd: \"scaleEnd\",\n    onScaleGroupStart: \"scaleGroupStart\",\n    onBeforeScaleGroup: \"beforeScaleGroup\",\n    onScaleGroup: \"scaleGroup\",\n    onScaleGroupEnd: \"scaleGroupEnd\"\n  },\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      resizable = _a.resizable,\n      scalable = _a.scalable,\n      edge = _a.edge;\n    if (!resizable && scalable) {\n      if (edge) {\n        return renderDiagonalDirections(moveable, React);\n      }\n      return renderAllDirections(moveable, React);\n    }\n  },\n  dragControlCondition: directionCondition,\n  dragControlStart: function (moveable, e) {\n    var datas = e.datas,\n      isPinch = e.isPinch,\n      inputEvent = e.inputEvent,\n      parentDirection = e.parentDirection;\n    var direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n    var _a = moveable.state,\n      width = _a.width,\n      height = _a.height,\n      targetTransform = _a.targetTransform,\n      target = _a.target,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      pos4 = _a.pos4;\n    if (!direction || !target) {\n      return false;\n    }\n    if (!isPinch) {\n      setDragStart(moveable, e);\n    }\n    datas.datas = {};\n    datas.transform = targetTransform;\n    datas.prevDist = [1, 1];\n    datas.direction = direction;\n    datas.startOffsetWidth = width;\n    datas.startOffsetHeight = height;\n    datas.startValue = [1, 1];\n    var scaleWidth = getDist$1(pos1, pos2);\n    var scaleHeight = getDist$1(pos2, pos4);\n    var isWidth = !direction[0] && !direction[1] || direction[0] || !direction[1];\n    datas.scaleWidth = scaleWidth;\n    datas.scaleHeight = scaleHeight;\n    datas.scaleXRatio = scaleWidth / width;\n    datas.scaleYRatio = scaleHeight / height;\n    setDefaultTransformIndex(e, \"scale\");\n    datas.isWidth = isWidth;\n    function setRatio(ratio) {\n      datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n    }\n    datas.startPositions = getAbsolutePosesByState(moveable.state);\n    function setFixedDirection(fixedDirection) {\n      datas.fixedDirection = fixedDirection;\n      datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n    }\n    datas.setFixedDirection = setFixedDirection;\n    setRatio(getDist$1(pos1, pos2) / getDist$1(pos2, pos4));\n    setFixedDirection([-direction[0], -direction[1]]);\n    var params = fillParams(moveable, e, __assign(__assign({\n      direction: direction,\n      set: function (scale) {\n        datas.startValue = scale;\n      },\n      setRatio: setRatio,\n      setFixedDirection: setFixedDirection\n    }, fillTransformStartEvent(e)), {\n      dragStart: Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e))\n    }));\n    var result = triggerEvent(moveable, \"onScaleStart\", params);\n    if (result !== false) {\n      datas.isScale = true;\n      moveable.state.snapRenderInfo = {\n        request: e.isRequest,\n        direction: direction\n      };\n    }\n    return datas.isScale ? params : false;\n  },\n  dragControl: function (moveable, e) {\n    resolveTransformEvent(e, \"scale\");\n    var datas = e.datas,\n      parentKeepRatio = e.parentKeepRatio,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      dragClient = e.dragClient,\n      isRequest = e.isRequest;\n    var prevDist = datas.prevDist,\n      direction = datas.direction,\n      startOffsetWidth = datas.startOffsetWidth,\n      startOffsetHeight = datas.startOffsetHeight,\n      isScale = datas.isScale,\n      startValue = datas.startValue,\n      isWidth = datas.isWidth,\n      ratio = datas.ratio;\n    if (!isScale) {\n      return false;\n    }\n    var props = moveable.props;\n    var throttleScale = props.throttleScale,\n      parentMoveable = props.parentMoveable;\n    var sizeDirection = direction;\n    if (!direction[0] && !direction[1]) {\n      sizeDirection = [1, 1];\n    }\n    var keepRatio = ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio) || false;\n    var state = moveable.state;\n    function getNextScale() {\n      var _a = getOffsetSizeDist(sizeDirection, keepRatio, datas, e),\n        distWidth = _a.distWidth,\n        distHeight = _a.distHeight;\n      var scaleX = (startOffsetWidth + distWidth) / startOffsetWidth;\n      var scaleY = (startOffsetHeight + distHeight) / startOffsetHeight;\n      scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n      scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n      if (scaleX === 0) {\n        scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n      }\n      if (scaleY === 0) {\n        scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n      }\n      return [scaleX, scaleY];\n    }\n    var scale = getNextScale();\n    if (!isPinch && moveable.props.groupable) {\n      var snapRenderInfo = state.snapRenderInfo || {};\n      var stateDirection = snapRenderInfo.direction;\n      if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n        state.snapRenderInfo = {\n          direction: direction,\n          request: e.isRequest\n        };\n      }\n    }\n    triggerEvent(moveable, \"onBeforeScale\", fillParams(moveable, e, {\n      scale: scale,\n      setFixedDirection: function (nextFixedDirection) {\n        datas.setFixedDirection(nextFixedDirection);\n        scale = getNextScale();\n        return scale;\n      },\n      setScale: function (nextScale) {\n        scale = nextScale;\n      }\n    }, true));\n    var dist = [scale[0] / startValue[0], scale[1] / startValue[1]];\n    var fixedPosition = dragClient;\n    var snapDist = [0, 0];\n    if (!dragClient) {\n      if (!parentFlag && isPinch) {\n        fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n      } else {\n        fixedPosition = datas.fixedPosition;\n      }\n    }\n    if (!isPinch) {\n      snapDist = checkSnapScale(moveable, dist, direction, isRequest, datas);\n    }\n    if (keepRatio) {\n      if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n        if (Math.abs(snapDist[0] * startOffsetWidth) > Math.abs(snapDist[1] * startOffsetHeight)) {\n          snapDist[1] = 0;\n        } else {\n          snapDist[0] = 0;\n        }\n      }\n      var isNoSnap = !snapDist[0] && !snapDist[1];\n      if (isNoSnap) {\n        if (isWidth) {\n          dist[0] = throttle(dist[0] * startValue[0], throttleScale) / startValue[0];\n        } else {\n          dist[1] = throttle(dist[1] * startValue[1], throttleScale) / startValue[1];\n        }\n      }\n      if (sizeDirection[0] && !sizeDirection[1] || snapDist[0] && !snapDist[1] || isNoSnap && isWidth) {\n        dist[0] += snapDist[0];\n        var snapHeight = startOffsetWidth * dist[0] * startValue[0] / ratio;\n        dist[1] = snapHeight / startOffsetHeight / startValue[1];\n      } else if (!sizeDirection[0] && sizeDirection[1] || !snapDist[0] && snapDist[1] || isNoSnap && !isWidth) {\n        dist[1] += snapDist[1];\n        var snapWidth = startOffsetHeight * dist[1] * startValue[1] * ratio;\n        dist[0] = snapWidth / startOffsetWidth / startValue[0];\n      }\n    } else {\n      dist[0] += snapDist[0];\n      dist[1] += snapDist[1];\n      if (!snapDist[0]) {\n        dist[0] = throttle(dist[0] * startValue[0], throttleScale) / startValue[0];\n      }\n      if (!snapDist[1]) {\n        dist[1] = throttle(dist[1] * startValue[1], throttleScale) / startValue[1];\n      }\n    }\n    if (dist[0] === 0) {\n      dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n    }\n    if (dist[1] === 0) {\n      dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n    }\n    var delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n    scale = multiply2(dist, startValue);\n    var inverseDist = getScaleDist(moveable, dist, datas.fixedDirection, fixedPosition, datas);\n    var inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n    datas.prevDist = dist;\n    datas.prevInverseDist = inverseDist;\n    if (scale[0] === prevDist[0] && scale[1] === prevDist[1] && inverseDelta.every(function (num) {\n      return !num;\n    }) && !parentMoveable) {\n      return false;\n    }\n    var nextTransform = convertTransformFormat(datas, \"scale(\".concat(scale.join(\", \"), \")\"), \"scale(\".concat(dist.join(\", \"), \")\"));\n    var params = fillParams(moveable, e, __assign({\n      offsetWidth: startOffsetWidth,\n      offsetHeight: startOffsetHeight,\n      direction: direction,\n      scale: scale,\n      dist: dist,\n      delta: delta,\n      isPinch: !!isPinch\n    }, fillTransformEvent(moveable, nextTransform, inverseDelta, isPinch, e)));\n    triggerEvent(moveable, \"onScale\", params);\n    return params;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas,\n      isDrag = e.isDrag;\n    if (!datas.isScale) {\n      return false;\n    }\n    datas.isScale = false;\n    triggerEvent(moveable, \"onScaleEnd\", fillEndParams(moveable, e, {}));\n    return isDrag;\n  },\n  dragGroupControlCondition: directionCondition,\n  dragGroupControlStart: function (moveable, e) {\n    var datas = e.datas;\n    var params = this.dragControlStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    var originalEvents = fillChildEvents(moveable, \"resizable\", e);\n    function setDist(child, ev) {\n      var fixedDirection = datas.fixedDirection;\n      var fixedPosition = datas.fixedPosition;\n      var startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n      var pos = getPosByDirection(startPositions, fixedDirection);\n      var _a = calculate(createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3), [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1], 3),\n        originalX = _a[0],\n        originalY = _a[1];\n      ev.datas.originalX = originalX;\n      ev.datas.originalY = originalY;\n      return ev;\n    }\n    datas.moveableScale = moveable.scale;\n    var events = triggerChildAbles(moveable, this, \"dragControlStart\", e, function (child, ev) {\n      return setDist(child, ev);\n    });\n    var setFixedDirection = function (fixedDirection) {\n      params.setFixedDirection(fixedDirection);\n      events.forEach(function (ev, i) {\n        ev.setFixedDirection(fixedDirection);\n        setDist(ev.moveable, originalEvents[i]);\n      });\n    };\n    datas.setFixedDirection = setFixedDirection;\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events,\n      setFixedDirection: setFixedDirection\n    });\n    var result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n    datas.isScale = result !== false;\n    return datas.isScale ? nextParams : false;\n  },\n  dragGroupControl: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isScale) {\n      return;\n    }\n    catchEvent(moveable, \"onBeforeScale\", function (parentEvent) {\n      triggerEvent(moveable, \"onBeforeScaleGroup\", fillParams(moveable, e, __assign(__assign({}, parentEvent), {\n        targets: moveable.props.targets\n      }), true));\n    });\n    var params = this.dragControl(moveable, e);\n    if (!params) {\n      return;\n    }\n    var moveableScale = datas.moveableScale;\n    moveable.scale = [params.scale[0] * moveableScale[0], params.scale[1] * moveableScale[1]];\n    var keepRatio = moveable.props.keepRatio;\n    var dist = params.dist,\n      scale = params.scale;\n    var fixedPosition = datas.fixedPosition;\n    var events = triggerChildAbles(moveable, this, \"dragControl\", e, function (_, ev) {\n      var _a = calculate(createRotateMatrix(moveable.rotation / 180 * Math.PI, 3), [ev.datas.originalX * dist[0], ev.datas.originalY * dist[1], 1], 3),\n        clientX = _a[0],\n        clientY = _a[1];\n      return __assign(__assign({}, ev), {\n        parentDist: null,\n        parentScale: scale,\n        parentKeepRatio: keepRatio,\n        dragClient: plus(fixedPosition, [clientX, clientY])\n      });\n    });\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events\n    }, params);\n    triggerEvent(moveable, \"onScaleGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isScale) {\n      return;\n    }\n    this.dragControlEnd(moveable, e);\n    var events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n    var nextParams = fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    });\n    triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n    return isDrag;\n  },\n  /**\n   * @method Moveable.Scalable#request\n   * @param {Moveable.Scalable.ScalableRequestParam} e - the Scalable's request parameter\n   * @return {Moveable.Requester} Moveable Requester\n   * @example\n    * // Instantly Request (requestStart - request - requestEnd)\n   * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n   *\n   * // requestStart\n   * const requester = moveable.request(\"scalable\");\n   *\n   * // request\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   *\n   * // requestEnd\n   * requester.requestEnd();\n   */\n  request: function () {\n    var datas = {};\n    var distWidth = 0;\n    var distHeight = 0;\n    return {\n      isControl: true,\n      requestStart: function (e) {\n        return {\n          datas: datas,\n          parentDirection: e.direction || [1, 1]\n        };\n      },\n      request: function (e) {\n        distWidth += e.deltaWidth;\n        distHeight += e.deltaHeight;\n        return {\n          datas: datas,\n          parentDist: [distWidth, distHeight],\n          parentKeepRatio: e.keepRatio\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  }\n};\n/**\n * Whether or not target can scaled.\n *\n * @name Moveable.Scalable#scalable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When scaling, `beforeScale` is called before `scale` occurs. In `beforeScale`, you can get and set the pre-value before scaling.\n * @memberof Moveable.Scalable\n * @event beforeScale\n * @param {Moveable.Scalable.OnBeforeScale} - Parameters for the `beforeScale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"beforeScale\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When scaling, the `scale` event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the `scale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When the scale finishes, the `scaleEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the `scaleEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n\nfunction getMiddleLinePos(pos1, pos2) {\n  return pos1.map(function (pos, i) {\n    return dot(pos, pos2[i], 1, 2);\n  });\n}\nfunction getTriangleRad(pos1, pos2, pos3) {\n  // pos1 Rad\n  var rad1 = getRad(pos1, pos2);\n  var rad2 = getRad(pos1, pos3);\n  var rad = rad2 - rad1;\n  return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\nfunction isValidPos(poses1, poses2) {\n  var rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n  var rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n  var pi = Math.PI;\n  if (rad1 >= pi && rad2 <= pi || rad1 <= pi && rad2 >= pi) {\n    return false;\n  }\n  return true;\n}\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\n\nvar Warpable = {\n  name: \"warpable\",\n  ableGroup: \"size\",\n  props: {\n    warpable: Boolean,\n    renderDirections: Array\n  },\n  events: {\n    onWarpStart: \"warpStart\",\n    onWarp: \"warp\",\n    onWarpEnd: \"warpEnd\"\n  },\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      resizable = _a.resizable,\n      scalable = _a.scalable,\n      warpable = _a.warpable,\n      zoom = _a.zoom;\n    if (resizable || scalable || !warpable) {\n      return [];\n    }\n    var _b = moveable.state,\n      pos1 = _b.pos1,\n      pos2 = _b.pos2,\n      pos3 = _b.pos3,\n      pos4 = _b.pos4;\n    var linePosFrom1 = getMiddleLinePos(pos1, pos2);\n    var linePosFrom2 = getMiddleLinePos(pos2, pos1);\n    var linePosFrom3 = getMiddleLinePos(pos1, pos3);\n    var linePosFrom4 = getMiddleLinePos(pos3, pos1);\n    var linePosTo1 = getMiddleLinePos(pos3, pos4);\n    var linePosTo2 = getMiddleLinePos(pos4, pos3);\n    var linePosTo3 = getMiddleLinePos(pos2, pos4);\n    var linePosTo4 = getMiddleLinePos(pos4, pos2);\n    return __spreadArray([React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine1\",\n      style: getLineStyle(linePosFrom1, linePosTo1, zoom)\n    }), React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine2\",\n      style: getLineStyle(linePosFrom2, linePosTo2, zoom)\n    }), React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine3\",\n      style: getLineStyle(linePosFrom3, linePosTo3, zoom)\n    }), React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine4\",\n      style: getLineStyle(linePosFrom4, linePosTo4, zoom)\n    })], renderAllDirections(moveable, React), true);\n  },\n  dragControlCondition: function (moveable, e) {\n    if (e.isRequest) {\n      return false;\n    }\n    return hasClass(e.inputEvent.target, prefix(\"direction\"));\n  },\n  dragControlStart: function (moveable, e) {\n    var datas = e.datas,\n      inputEvent = e.inputEvent;\n    var target = moveable.props.target;\n    var inputTarget = inputEvent.target;\n    var direction = getDirection(inputTarget);\n    if (!direction || !target) {\n      return false;\n    }\n    var state = moveable.state;\n    var transformOrigin = state.transformOrigin,\n      is3d = state.is3d,\n      targetTransform = state.targetTransform,\n      targetMatrix = state.targetMatrix,\n      width = state.width,\n      height = state.height,\n      left = state.left,\n      top = state.top;\n    datas.datas = {};\n    datas.targetTransform = targetTransform;\n    datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n    datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n    datas.direction = direction;\n    datas.left = left;\n    datas.top = top;\n    datas.poses = [[0, 0], [width, 0], [0, height], [width, height]].map(function (p) {\n      return minus(p, transformOrigin);\n    });\n    datas.nextPoses = datas.poses.map(function (_a) {\n      var x = _a[0],\n        y = _a[1];\n      return calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4);\n    });\n    datas.startValue = createIdentityMatrix(4);\n    datas.prevMatrix = createIdentityMatrix(4);\n    datas.absolutePoses = getAbsolutePosesByState(state);\n    datas.posIndexes = getPosIndexesByDirection(direction);\n    setDragStart(moveable, e);\n    setDefaultTransformIndex(e, \"matrix3d\");\n    state.snapRenderInfo = {\n      request: e.isRequest,\n      direction: direction\n    };\n    var params = fillParams(moveable, e, __assign({\n      set: function (matrix) {\n        datas.startValue = matrix;\n      }\n    }, fillTransformStartEvent(e)));\n    var result = triggerEvent(moveable, \"onWarpStart\", params);\n    if (result !== false) {\n      datas.isWarp = true;\n    }\n    return datas.isWarp;\n  },\n  dragControl: function (moveable, e) {\n    var datas = e.datas,\n      isRequest = e.isRequest;\n    var distX = e.distX,\n      distY = e.distY;\n    var targetInverseMatrix = datas.targetInverseMatrix,\n      prevMatrix = datas.prevMatrix,\n      isWarp = datas.isWarp,\n      startValue = datas.startValue,\n      poses = datas.poses,\n      posIndexes = datas.posIndexes,\n      absolutePoses = datas.absolutePoses;\n    if (!isWarp) {\n      return false;\n    }\n    resolveTransformEvent(e, \"matrix3d\");\n    if (hasGuidelines(moveable, \"warpable\")) {\n      var selectedPoses = posIndexes.map(function (index) {\n        return absolutePoses[index];\n      });\n      if (selectedPoses.length > 1) {\n        selectedPoses.push([(selectedPoses[0][0] + selectedPoses[1][0]) / 2, (selectedPoses[0][1] + selectedPoses[1][1]) / 2]);\n      }\n      var _a = checkMoveableSnapBounds(moveable, isRequest, {\n          horizontal: selectedPoses.map(function (pos) {\n            return pos[1] + distY;\n          }),\n          vertical: selectedPoses.map(function (pos) {\n            return pos[0] + distX;\n          })\n        }),\n        horizontalSnapInfo = _a.horizontal,\n        verticalSnapInfo = _a.vertical;\n      distY -= horizontalSnapInfo.offset;\n      distX -= verticalSnapInfo.offset;\n    }\n    var dist = getDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }, true);\n    var nextPoses = datas.nextPoses.slice();\n    posIndexes.forEach(function (index) {\n      nextPoses[index] = plus(nextPoses[index], dist);\n    });\n    if (!NEARBY_POS.every(function (nearByPoses) {\n      return isValidPos(nearByPoses.map(function (i) {\n        return poses[i];\n      }), nearByPoses.map(function (i) {\n        return nextPoses[i];\n      }));\n    })) {\n      return false;\n    }\n    var h = createWarpMatrix(poses[0], poses[2], poses[1], poses[3], nextPoses[0], nextPoses[2], nextPoses[1], nextPoses[3]);\n    if (!h.length) {\n      return false;\n    } // B * A * M\n\n    var afterMatrix = multiply(targetInverseMatrix, h, 4); // B * M * A\n\n    var matrix = getTransfromMatrix(datas, afterMatrix, true);\n    var delta = multiply(invert(prevMatrix, 4), matrix, 4);\n    datas.prevMatrix = matrix;\n    var totalMatrix = multiply(startValue, matrix, 4);\n    var nextTransform = convertTransformFormat(datas, \"matrix3d(\".concat(totalMatrix.join(\", \"), \")\"), \"matrix3d(\".concat(matrix.join(\", \"), \")\"));\n    fillOriginalTransform(e, nextTransform);\n    triggerEvent(moveable, \"onWarp\", fillParams(moveable, e, {\n      delta: delta,\n      matrix: totalMatrix,\n      dist: matrix,\n      multiply: multiply,\n      transform: nextTransform\n    }));\n    return true;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas,\n      isDrag = e.isDrag;\n    if (!datas.isWarp) {\n      return false;\n    }\n    datas.isWarp = false;\n    triggerEvent(moveable, \"onWarpEnd\", fillEndParams(moveable, e, {}));\n    return isDrag;\n  }\n};\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\nvar AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nvar AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nvar AVOID = /*#__PURE__*/prefix(\"avoid\");\nfunction restoreStyle(moveable) {\n  var el = moveable.areaElement;\n  if (!el) {\n    return;\n  }\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height;\n  removeClass(el, AVOID);\n  el.style.cssText += \"left: 0px; top: 0px; width: \".concat(width, \"px; height: \").concat(height, \"px\");\n}\nfunction renderPieces(React) {\n  return React.createElement(\"div\", {\n    key: \"area_pieces\",\n    className: AREA_PIECES\n  }, React.createElement(\"div\", {\n    className: AREA_PIECE\n  }), React.createElement(\"div\", {\n    className: AREA_PIECE\n  }), React.createElement(\"div\", {\n    className: AREA_PIECE\n  }), React.createElement(\"div\", {\n    className: AREA_PIECE\n  }));\n}\nvar DragArea = {\n  name: \"dragArea\",\n  props: {\n    dragArea: Boolean,\n    passDragArea: Boolean\n  },\n  events: {\n    onClick: \"click\",\n    onClickGroup: \"clickGroup\"\n  },\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      target = _a.target,\n      dragArea = _a.dragArea,\n      groupable = _a.groupable,\n      passDragArea = _a.passDragArea;\n    var _b = moveable.state,\n      width = _b.width,\n      height = _b.height,\n      renderPoses = _b.renderPoses;\n    var className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n    if (groupable) {\n      return [React.createElement(\"div\", {\n        key: \"area\",\n        ref: ref(moveable, \"areaElement\"),\n        className: className\n      }), renderPieces(React)];\n    }\n    if (!target || !dragArea) {\n      return [];\n    }\n    var h = createWarpMatrix([0, 0], [width, 0], [0, height], [width, height], renderPoses[0], renderPoses[1], renderPoses[2], renderPoses[3]);\n    var transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n    return [React.createElement(\"div\", {\n      key: \"area\",\n      ref: ref(moveable, \"areaElement\"),\n      className: className,\n      style: {\n        top: \"0px\",\n        left: \"0px\",\n        width: \"\".concat(width, \"px\"),\n        height: \"\".concat(height, \"px\"),\n        transformOrigin: \"0 0\",\n        transform: transform\n      }\n    }), renderPieces(React)];\n  },\n  dragStart: function (moveable, _a) {\n    var datas = _a.datas,\n      clientX = _a.clientX,\n      clientY = _a.clientY,\n      inputEvent = _a.inputEvent;\n    if (!inputEvent) {\n      return false;\n    }\n    datas.isDragArea = false;\n    var areaElement = moveable.areaElement;\n    var state = moveable.state;\n    var moveableClientRect = state.moveableClientRect,\n      renderPoses = state.renderPoses,\n      rootMatrix = state.rootMatrix,\n      is3d = state.is3d;\n    var left = moveableClientRect.left,\n      top = moveableClientRect.top;\n    var _b = getRect(renderPoses),\n      relativeLeft = _b.left,\n      relativeTop = _b.top,\n      width = _b.width,\n      height = _b.height;\n    var n = is3d ? 4 : 3;\n    var _c = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n),\n      posX = _c[0],\n      posY = _c[1];\n    posX -= relativeLeft;\n    posY -= relativeTop;\n    var rects = [{\n      left: relativeLeft,\n      top: relativeTop,\n      width: width,\n      height: posY - 10\n    }, {\n      left: relativeLeft,\n      top: relativeTop,\n      width: posX - 10,\n      height: height\n    }, {\n      left: relativeLeft,\n      top: relativeTop + posY + 10,\n      width: width,\n      height: height - posY - 10\n    }, {\n      left: relativeLeft + posX + 10,\n      top: relativeTop,\n      width: width - posX - 10,\n      height: height\n    }];\n    var children = [].slice.call(areaElement.nextElementSibling.children);\n    rects.forEach(function (rect, i) {\n      children[i].style.cssText = \"left: \".concat(rect.left, \"px;top: \").concat(rect.top, \"px; width: \").concat(rect.width, \"px; height: \").concat(rect.height, \"px;\");\n    });\n    addClass(areaElement, AVOID);\n    state.disableNativeEvent = true;\n    return;\n  },\n  drag: function (moveable, _a) {\n    var datas = _a.datas,\n      inputEvent = _a.inputEvent;\n    this.enableNativeEvent(moveable);\n    if (!inputEvent) {\n      return false;\n    }\n    if (!datas.isDragArea) {\n      datas.isDragArea = true;\n      restoreStyle(moveable);\n    }\n  },\n  dragEnd: function (moveable, e) {\n    this.enableNativeEvent(moveable);\n    var inputEvent = e.inputEvent,\n      datas = e.datas;\n    if (!inputEvent) {\n      return false;\n    }\n    if (!datas.isDragArea) {\n      restoreStyle(moveable);\n    }\n  },\n  dragGroupStart: function (moveable, e) {\n    return this.dragStart(moveable, e);\n  },\n  dragGroup: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragGroupEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  unset: function (moveable) {\n    restoreStyle(moveable);\n    moveable.state.disableNativeEvent = false;\n  },\n  enableNativeEvent: function (moveable) {\n    var state = moveable.state;\n    if (state.disableNativeEvent) {\n      requestAnimationFrame(function () {\n        state.disableNativeEvent = false;\n      });\n    }\n  }\n};\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n\nvar Origin = makeAble(\"origin\", {\n  render: function (moveable, React) {\n    var zoom = moveable.props.zoom;\n    var _a = moveable.state,\n      beforeOrigin = _a.beforeOrigin,\n      rotation = _a.rotation;\n    return [React.createElement(\"div\", {\n      className: prefix(\"control\", \"origin\"),\n      style: getControlTransform(rotation, zoom, beforeOrigin),\n      key: \"beforeOrigin\"\n    })];\n  }\n});\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n\nfunction getDefaultScrollPosition(e) {\n  var scrollContainer = e.scrollContainer;\n  return [scrollContainer.scrollLeft, scrollContainer.scrollTop];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\n\nvar Scrollable = {\n  name: \"scrollable\",\n  canPinch: true,\n  props: {\n    scrollable: Boolean,\n    scrollContainer: Object,\n    scrollThreshold: Number,\n    getScrollPosition: Function\n  },\n  events: {\n    onScroll: \"scroll\",\n    onScrollGroup: \"scrollGroup\"\n  },\n  dragRelation: \"strong\",\n  dragStart: function (moveable, e) {\n    var props = moveable.props;\n    var _a = props.scrollContainer,\n      scrollContainer = _a === void 0 ? moveable.getContainer() : _a;\n    var dragScroll = new DragScroll();\n    var scrollContainerElement = getRefTarget(scrollContainer, true);\n    e.datas.dragScroll = dragScroll;\n    var gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n    var targets = e.targets;\n    dragScroll.on(\"scroll\", function (_a) {\n      var container = _a.container,\n        direction = _a.direction;\n      var params = fillParams(moveable, e, {\n        scrollContainer: container,\n        direction: direction\n      });\n      var eventName = targets ? \"onScrollGroup\" : \"onScroll\";\n      if (targets) {\n        params.targets = targets;\n      }\n      triggerEvent(moveable, eventName, params);\n    }).on(\"move\", function (_a) {\n      var offsetX = _a.offsetX,\n        offsetY = _a.offsetY;\n      moveable[gestoName].scrollBy(offsetX, offsetY, e.inputEvent, false);\n    });\n    dragScroll.dragStart(e, {\n      container: scrollContainerElement\n    });\n  },\n  checkScroll: function (moveable, e) {\n    var dragScroll = e.datas.dragScroll;\n    if (!dragScroll) {\n      return;\n    }\n    var _a = moveable.props,\n      _b = _a.scrollContainer,\n      scrollContainer = _b === void 0 ? moveable.getContainer() : _b,\n      _c = _a.scrollThreshold,\n      scrollThreshold = _c === void 0 ? 0 : _c,\n      _d = _a.getScrollPosition,\n      getScrollPosition = _d === void 0 ? getDefaultScrollPosition : _d;\n    dragScroll.drag(e, {\n      container: scrollContainer,\n      threshold: scrollThreshold,\n      getScrollPosition: function (ev) {\n        return getScrollPosition({\n          scrollContainer: ev.container,\n          direction: ev.direction\n        });\n      }\n    });\n    return true;\n  },\n  drag: function (moveable, e) {\n    return this.checkScroll(moveable, e);\n  },\n  dragEnd: function (moveable, e) {\n    e.datas.dragScroll.dragEnd();\n    e.datas.dragScroll = null;\n  },\n  dragControlStart: function (moveable, e) {\n    return this.dragStart(moveable, __assign(__assign({}, e), {\n      isControl: true\n    }));\n  },\n  dragControl: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragControlEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  dragGroupStart: function (moveable, e) {\n    return this.dragStart(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroup: function (moveable, e) {\n    return this.drag(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroupEnd: function (moveable, e) {\n    return this.dragEnd(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroupControlStart: function (moveable, e) {\n    return this.dragStart(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets,\n      isControl: true\n    }));\n  },\n  dragGroupContro: function (moveable, e) {\n    return this.drag(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroupControEnd: function (moveable, e) {\n    return this.dragEnd(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  }\n};\n/**\n * Whether or not target can be scrolled to the scroll container (default: false)\n * @name Moveable.Scrollable#scrollable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n * moveable.scrollable = true;\n */\n\n/**\n * The container to which scroll is applied (default: container)\n * @name Moveable.Scrollable#scrollContainer\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Expand the range of the scroll check area. (default: 0)\n * @name Moveable.Scrollable#scrollThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Sets a function to get the scroll position. (default: Function)\n * @name Moveable.Scrollable#getScrollPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\nvar Default = {\n  name: \"\",\n  props: {\n    target: Object,\n    dragTarget: Object,\n    container: Object,\n    portalContainer: Object,\n    rootContainer: Object,\n    useResizeObserver: Boolean,\n    zoom: Number,\n    transformOrigin: Array,\n    edge: Boolean,\n    ables: Array,\n    className: String,\n    pinchThreshold: Number,\n    pinchOutside: Boolean,\n    triggerAblesSimultaneously: Boolean,\n    checkInput: Boolean,\n    cspNonce: String,\n    translateZ: Number,\n    hideDefaultLines: Boolean,\n    props: Object,\n    flushSync: Function\n  },\n  events: {}\n};\nvar Padding = makeAble(\"padding\", {\n  render: function (moveable, React) {\n    var props = moveable.props;\n    if (props.dragArea) {\n      return [];\n    }\n    var padding = props.padding || {};\n    var _a = padding.left,\n      left = _a === void 0 ? 0 : _a,\n      _b = padding.top,\n      top = _b === void 0 ? 0 : _b,\n      _c = padding.right,\n      right = _c === void 0 ? 0 : _c,\n      _d = padding.bottom,\n      bottom = _d === void 0 ? 0 : _d;\n    var _e = moveable.state,\n      renderPoses = _e.renderPoses,\n      pos1 = _e.pos1,\n      pos2 = _e.pos2,\n      pos3 = _e.pos3,\n      pos4 = _e.pos4;\n    var poses = [pos1, pos2, pos3, pos4];\n    var paddingDirections = [];\n    if (left > 0) {\n      paddingDirections.push([0, 2]);\n    }\n    if (top > 0) {\n      paddingDirections.push([0, 1]);\n    }\n    if (right > 0) {\n      paddingDirections.push([1, 3]);\n    }\n    if (bottom > 0) {\n      paddingDirections.push([2, 3]);\n    }\n    return paddingDirections.map(function (_a, i) {\n      var dir1 = _a[0],\n        dir2 = _a[1];\n      var paddingPos1 = poses[dir1];\n      var paddingPos2 = poses[dir2];\n      var paddingPos3 = renderPoses[dir1];\n      var paddingPos4 = renderPoses[dir2];\n      var h = createWarpMatrix([0, 0], [100, 0], [0, 100], [100, 100], paddingPos1, paddingPos2, paddingPos3, paddingPos4);\n      if (!h.length) {\n        return undefined;\n      }\n      return React.createElement(\"div\", {\n        key: \"padding\".concat(i),\n        className: prefix(\"padding\"),\n        style: {\n          transform: makeMatrixCSS(h, true)\n        }\n      });\n    });\n  }\n});\n/**\n * Add padding around the target to increase the drag area.\n * @name Moveable#padding\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n\nvar RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"];\nfunction calculateRatio(values, size) {\n  var sumSize = values[0] + values[1];\n  var sumRatio = sumSize > size ? size / sumSize : 1;\n  values[0] *= sumRatio;\n  values[1] = size - values[1] * sumRatio;\n  return values;\n}\nvar HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nvar VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nvar HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1];\nvar VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1];\nfunction getRadiusStyles(poses, controlPoses, isRelative, width, height, left, top, right, bottom) {\n  if (left === void 0) {\n    left = 0;\n  }\n  if (top === void 0) {\n    top = 0;\n  }\n  if (right === void 0) {\n    right = width;\n  }\n  if (bottom === void 0) {\n    bottom = height;\n  }\n  var clipStyles = [];\n  var isVertical = false;\n  var raws = poses.map(function (pos, i) {\n    var _a = controlPoses[i],\n      horizontal = _a.horizontal,\n      vertical = _a.vertical;\n    if (vertical && !isVertical) {\n      isVertical = true;\n      clipStyles.push(\"/\");\n    }\n    if (isVertical) {\n      var rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n      clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n      return rawPos;\n    } else {\n      var rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n      clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n      return rawPos;\n    }\n  });\n  return {\n    styles: clipStyles,\n    raws: raws\n  };\n}\nfunction getRadiusRange(controlPoses) {\n  // [start, length]\n  var horizontalRange = [0, 0];\n  var verticalRange = [0, 0];\n  var length = controlPoses.length;\n  for (var i = 0; i < length; ++i) {\n    var clipPose = controlPoses[i];\n    if (!clipPose.sub) {\n      continue;\n    }\n    if (clipPose.horizontal) {\n      if (horizontalRange[1] === 0) {\n        horizontalRange[0] = i;\n      }\n      horizontalRange[1] = i - horizontalRange[0] + 1;\n      verticalRange[0] = i + 1;\n    }\n    if (clipPose.vertical) {\n      if (verticalRange[1] === 0) {\n        verticalRange[0] = i;\n      }\n      verticalRange[1] = i - verticalRange[0] + 1;\n    }\n  }\n  return {\n    horizontalRange: horizontalRange,\n    verticalRange: verticalRange\n  };\n}\nfunction getRadiusValues(values, width, height, left, top, minCounts) {\n  var _a, _b, _c, _d;\n  if (minCounts === void 0) {\n    minCounts = [0, 0];\n  }\n  var splitIndex = values.indexOf(\"/\");\n  var splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n  var horizontalValues = values.slice(0, splitLength);\n  var verticalValues = values.slice(splitLength + 1);\n  var _e = horizontalValues[0],\n    nwValue = _e === void 0 ? \"0px\" : _e,\n    _f = horizontalValues[1],\n    neValue = _f === void 0 ? nwValue : _f,\n    _g = horizontalValues[2],\n    seValue = _g === void 0 ? nwValue : _g,\n    _h = horizontalValues[3],\n    swValue = _h === void 0 ? neValue : _h;\n  var _j = verticalValues[0],\n    wnValue = _j === void 0 ? nwValue : _j,\n    _k = verticalValues[1],\n    enValue = _k === void 0 ? wnValue : _k,\n    _l = verticalValues[2],\n    esValue = _l === void 0 ? wnValue : _l,\n    _m = verticalValues[3],\n    wsValue = _m === void 0 ? enValue : _m;\n  var horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(function (pos) {\n    return convertUnitSize(pos, width);\n  });\n  var verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(function (pos) {\n    return convertUnitSize(pos, height);\n  });\n  var horizontalPoses = horizontalRawPoses.slice();\n  var verticalPoses = verticalRawPoses.slice();\n  _a = calculateRatio([horizontalPoses[0], horizontalPoses[1]], width), horizontalPoses[0] = _a[0], horizontalPoses[1] = _a[1];\n  _b = calculateRatio([horizontalPoses[3], horizontalPoses[2]], width), horizontalPoses[3] = _b[0], horizontalPoses[2] = _b[1];\n  _c = calculateRatio([verticalPoses[0], verticalPoses[3]], height), verticalPoses[0] = _c[0], verticalPoses[3] = _c[1];\n  _d = calculateRatio([verticalPoses[1], verticalPoses[2]], height), verticalPoses[1] = _d[0], verticalPoses[2] = _d[1];\n  var nextHorizontalPoses = horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValues.length));\n  var nextVerticalPoses = verticalPoses.slice(0, Math.max(minCounts[1], verticalValues.length));\n  return __spreadArray(__spreadArray([], nextHorizontalPoses.map(function (pos, i) {\n    var direction = RADIUS_DIRECTIONS[i];\n    return {\n      horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n      vertical: 0,\n      pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n      sub: true,\n      raw: horizontalRawPoses[i],\n      direction: direction\n    };\n  }), true), nextVerticalPoses.map(function (pos, i) {\n    var direction = RADIUS_DIRECTIONS[i];\n    return {\n      horizontal: 0,\n      vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n      pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n      sub: true,\n      raw: verticalRawPoses[i],\n      direction: direction\n    };\n  }), true);\n}\nfunction removeRadiusPos(controlPoses, poses, index, startIndex, length) {\n  if (length === void 0) {\n    length = poses.length;\n  }\n  var _a = getRadiusRange(controlPoses.slice(startIndex)),\n    horizontalRange = _a.horizontalRange,\n    verticalRange = _a.verticalRange;\n  var radiuslIndex = index - startIndex;\n  var deleteCount = 0;\n  if (radiuslIndex === 0) {\n    deleteCount = length;\n  } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n    deleteCount = horizontalRange[1] - radiuslIndex;\n  } else if (radiuslIndex >= verticalRange[0]) {\n    deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n  } else {\n    return;\n  }\n  controlPoses.splice(index, deleteCount);\n  poses.splice(index, deleteCount);\n}\nfunction addRadiusPos(controlPoses, poses, startIndex, horizontalIndex, verticalIndex, distX, distY, right, bottom, left, top) {\n  if (left === void 0) {\n    left = 0;\n  }\n  if (top === void 0) {\n    top = 0;\n  }\n  var _a = getRadiusRange(controlPoses.slice(startIndex)),\n    horizontalRange = _a.horizontalRange,\n    verticalRange = _a.verticalRange;\n  if (horizontalIndex > -1) {\n    var radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1 ? distX - left : right - distX;\n    for (var i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n      var y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n      var x = 0;\n      if (horizontalIndex === i) {\n        x = distX;\n      } else if (i === 0) {\n        x = left + radiusX;\n      } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n        x = right - (poses[startIndex][0] - left);\n      }\n      controlPoses.splice(startIndex + i, 0, {\n        horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n        vertical: 0,\n        pos: [x, y]\n      });\n      poses.splice(startIndex + i, 0, [x, y]);\n      if (i === 0) {\n        break;\n      }\n    }\n  } else if (verticalIndex > -1) {\n    var radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1 ? distY - top : bottom - distY;\n    if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n      var pos = [left + radiusY, top];\n      controlPoses.push({\n        horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n        vertical: 0,\n        pos: pos\n      });\n      poses.push(pos);\n    }\n    var startVerticalIndex = verticalRange[0];\n    for (var i = verticalRange[1]; i <= verticalIndex; ++i) {\n      var x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n      var y = 0;\n      if (verticalIndex === i) {\n        y = distY;\n      } else if (i === 0) {\n        y = top + radiusY;\n      } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n        y = poses[startIndex + startVerticalIndex][1];\n      } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n        y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n      }\n      controlPoses.push({\n        horizontal: 0,\n        vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n        pos: [x, y]\n      });\n      poses.push([x, y]);\n      if (i === 0) {\n        break;\n      }\n    }\n  }\n}\nfunction splitRadiusPoses(controlPoses, raws) {\n  if (raws === void 0) {\n    raws = controlPoses.map(function (pos) {\n      return pos.raw;\n    });\n  }\n  var horizontals = controlPoses.map(function (pos, i) {\n    return pos.horizontal ? raws[i] : null;\n  }).filter(function (pos) {\n    return pos != null;\n  });\n  var verticals = controlPoses.map(function (pos, i) {\n    return pos.vertical ? raws[i] : null;\n  }).filter(function (pos) {\n    return pos != null;\n  });\n  return {\n    horizontals: horizontals,\n    verticals: verticals\n  };\n}\nvar CLIP_DIRECTIONS = [[0, -1, \"n\"], [1, 0, \"e\"]];\nvar CLIP_RECT_DIRECTIONS = [[-1, -1, \"nw\"], [0, -1, \"n\"], [1, -1, \"ne\"], [1, 0, \"e\"], [1, 1, \"se\"], [0, 1, \"s\"], [-1, 1, \"sw\"], [-1, 0, \"w\"]]; // 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nfunction getClipStyles(moveable, clipPath, poses) {\n  var clipRelative = moveable.props.clipRelative;\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height;\n  var _b = clipPath,\n    clipType = _b.type,\n    clipPoses = _b.poses;\n  var isRect = clipType === \"rect\";\n  var isCircle = clipType === \"circle\";\n  if (clipType === \"polygon\") {\n    return poses.map(function (pos) {\n      return \"\".concat(convertCSSSize(pos[0], width, clipRelative), \" \").concat(convertCSSSize(pos[1], height, clipRelative));\n    });\n  } else if (isRect || clipType === \"inset\") {\n    var top = poses[1][1];\n    var right = poses[3][0];\n    var left = poses[7][0];\n    var bottom = poses[5][1];\n    if (isRect) {\n      return [top, right, bottom, left].map(function (pos) {\n        return \"\".concat(pos, \"px\");\n      });\n    }\n    var clipStyles = [top, width - right, height - bottom, left].map(function (pos, i) {\n      return convertCSSSize(pos, i % 2 ? width : height, clipRelative);\n    });\n    if (poses.length > 8) {\n      var _c = minus(poses[4], poses[0]),\n        subWidth = _c[0],\n        subHeight = _c[1];\n      clipStyles.push.apply(clipStyles, __spreadArray([\"round\"], getRadiusStyles(poses.slice(8), clipPoses.slice(8), clipRelative, subWidth, subHeight, left, top, right, bottom).styles, false));\n    }\n    return clipStyles;\n  } else if (isCircle || clipType === \"ellipse\") {\n    var center = poses[0];\n    var ry = convertCSSSize(Math.abs(poses[1][1] - center[1]), isCircle ? Math.sqrt((width * width + height * height) / 2) : height, clipRelative);\n    var clipStyles = isCircle ? [ry] : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n    clipStyles.push(\"at\", convertCSSSize(center[0], width, clipRelative), convertCSSSize(center[1], height, clipRelative));\n    return clipStyles;\n  }\n}\nfunction getRectPoses(top, right, bottom, left) {\n  var xs = [left, (left + right) / 2, right];\n  var ys = [top, (top + bottom) / 2, bottom];\n  return CLIP_RECT_DIRECTIONS.map(function (_a) {\n    var dirx = _a[0],\n      diry = _a[1],\n      dir = _a[2];\n    var x = xs[dirx + 1];\n    var y = ys[diry + 1];\n    return {\n      vertical: Math.abs(diry),\n      horizontal: Math.abs(dirx),\n      direction: dir,\n      pos: [x, y]\n    };\n  });\n}\nfunction getControlSize(controlPoses) {\n  var xRange = [Infinity, -Infinity];\n  var yRange = [Infinity, -Infinity];\n  controlPoses.forEach(function (_a) {\n    var pos = _a.pos;\n    xRange[0] = Math.min(xRange[0], pos[0]);\n    xRange[1] = Math.max(xRange[1], pos[0]);\n    yRange[0] = Math.min(yRange[0], pos[1]);\n    yRange[1] = Math.max(yRange[1], pos[1]);\n  });\n  return [Math.abs(xRange[1] - xRange[0]), Math.abs(yRange[1] - yRange[0])];\n}\nfunction moveControlPos(controlPoses, index, dist, isRect, keepRatio) {\n  var _a = controlPoses[index],\n    direction = _a.direction,\n    sub = _a.sub;\n  var dists = controlPoses.map(function () {\n    return [0, 0];\n  });\n  var directions = direction ? direction.split(\"\") : [];\n  if (isRect && index < 8) {\n    var verticalDirections = directions.filter(function (dir) {\n      return dir === \"w\" || dir === \"e\";\n    });\n    var horizontalDirections = directions.filter(function (dir) {\n      return dir === \"n\" || dir === \"s\";\n    });\n    var verticalDirection_1 = verticalDirections[0];\n    var horizontalDirection_1 = horizontalDirections[0];\n    dists[index] = dist;\n    var _b = getControlSize(controlPoses),\n      width = _b[0],\n      height = _b[1];\n    var ratio = width && height ? width / height : 0;\n    if (ratio && keepRatio) {\n      // 0 1 2\n      // 7   3\n      // 6 5 4\n      var fixedIndex = (index + 4) % 8;\n      var fixedPosition = controlPoses[fixedIndex].pos;\n      var sizeDirection = [0, 0];\n      if (direction.indexOf(\"w\") > -1) {\n        sizeDirection[0] = -1;\n      } else if (direction.indexOf(\"e\") > -1) {\n        sizeDirection[0] = 1;\n      }\n      if (direction.indexOf(\"n\") > -1) {\n        sizeDirection[1] = -1;\n      } else if (direction.indexOf(\"s\") > -1) {\n        sizeDirection[1] = 1;\n      }\n      var nextDist = getSizeDistByDist([width, height], dist, ratio, sizeDirection, true);\n      var nextWidth = width + nextDist[0];\n      var nextHeight = height + nextDist[1];\n      var top = fixedPosition[1];\n      var bottom = fixedPosition[1];\n      var left = fixedPosition[0];\n      var right = fixedPosition[0];\n      if (sizeDirection[0] === -1) {\n        left = right - nextWidth;\n      } else if (sizeDirection[0] === 1) {\n        right = left + nextWidth;\n      } else {\n        left = left - nextWidth / 2;\n        right = right + nextWidth / 2;\n      }\n      if (sizeDirection[1] === -1) {\n        top = bottom - nextHeight;\n      } else if (sizeDirection[1] === 1) {\n        bottom = top + nextHeight;\n      } else {\n        top = bottom - nextHeight / 2;\n        bottom = top + nextHeight;\n      }\n      var nextControlPoses_1 = getRectPoses(top, right, bottom, left);\n      controlPoses.forEach(function (controlPose, i) {\n        dists[i][0] = nextControlPoses_1[i].pos[0] - controlPose.pos[0];\n        dists[i][1] = nextControlPoses_1[i].pos[1] - controlPose.pos[1];\n      });\n    } else {\n      controlPoses.forEach(function (controlPose, i) {\n        var controlDir = controlPose.direction;\n        if (!controlDir) {\n          return;\n        }\n        if (controlDir.indexOf(verticalDirection_1) > -1) {\n          dists[i][0] = dist[0];\n        }\n        if (controlDir.indexOf(horizontalDirection_1) > -1) {\n          dists[i][1] = dist[1];\n        }\n      });\n      if (verticalDirection_1) {\n        dists[1][0] = dist[0] / 2;\n        dists[5][0] = dist[0] / 2;\n      }\n      if (horizontalDirection_1) {\n        dists[3][1] = dist[1] / 2;\n        dists[7][1] = dist[1] / 2;\n      }\n    }\n  } else if (direction && !sub) {\n    directions.forEach(function (dir) {\n      var isVertical = dir === \"n\" || dir === \"s\";\n      controlPoses.forEach(function (controlPose, i) {\n        var dirDir = controlPose.direction,\n          dirHorizontal = controlPose.horizontal,\n          dirVertical = controlPose.vertical;\n        if (!dirDir || dirDir.indexOf(dir) === -1) {\n          return;\n        }\n        dists[i] = [isVertical || !dirHorizontal ? 0 : dist[0], !isVertical || !dirVertical ? 0 : dist[1]];\n      });\n    });\n  } else {\n    dists[index] = dist;\n  }\n  return dists;\n}\nfunction getClipPath(target, width, height, defaultClip, customClip) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  var clipText = customClip;\n  if (!clipText) {\n    var style = getComputedStyle(target);\n    var clipPath = style.clipPath;\n    clipText = clipPath !== \"none\" ? clipPath : style.clip;\n  }\n  if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n    clipText = defaultClip;\n    if (!clipText) {\n      return;\n    }\n  }\n  var _h = splitBracket(clipText),\n    _j = _h.prefix,\n    clipPrefix = _j === void 0 ? clipText : _j,\n    _k = _h.value,\n    value = _k === void 0 ? \"\" : _k;\n  var isCircle = clipPrefix === \"circle\";\n  var splitter = \" \";\n  if (clipPrefix === \"polygon\") {\n    var values = splitComma(value || \"0% 0%, 100% 0%, 100% 100%, 0% 100%\");\n    splitter = \",\";\n    var poses = values.map(function (pos) {\n      var _a = pos.split(\" \"),\n        xPos = _a[0],\n        yPos = _a[1];\n      return {\n        vertical: 1,\n        horizontal: 1,\n        pos: [convertUnitSize(xPos, width), convertUnitSize(yPos, height)]\n      };\n    });\n    return {\n      type: clipPrefix,\n      clipText: clipText,\n      poses: poses,\n      splitter: splitter\n    };\n  } else if (isCircle || clipPrefix === \"ellipse\") {\n    var xPos = \"\";\n    var yPos = \"\";\n    var radiusX_1 = 0;\n    var radiusY_1 = 0;\n    var values = splitSpace(value);\n    if (isCircle) {\n      var radius = \"\";\n      _a = values[0], radius = _a === void 0 ? \"50%\" : _a, _b = values[2], xPos = _b === void 0 ? \"50%\" : _b, _c = values[3], yPos = _c === void 0 ? \"50%\" : _c;\n      radiusX_1 = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n      radiusY_1 = radiusX_1;\n    } else {\n      var xRadius = \"\";\n      var yRadius = \"\";\n      _d = values[0], xRadius = _d === void 0 ? \"50%\" : _d, _e = values[1], yRadius = _e === void 0 ? \"50%\" : _e, _f = values[3], xPos = _f === void 0 ? \"50%\" : _f, _g = values[4], yPos = _g === void 0 ? \"50%\" : _g;\n      radiusX_1 = convertUnitSize(xRadius, width);\n      radiusY_1 = convertUnitSize(yRadius, height);\n    }\n    var centerPos_1 = [convertUnitSize(xPos, width), convertUnitSize(yPos, height)];\n    var poses = __spreadArray([{\n      vertical: 1,\n      horizontal: 1,\n      pos: centerPos_1,\n      direction: \"nesw\"\n    }], CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(function (dir) {\n      return {\n        vertical: Math.abs(dir[1]),\n        horizontal: dir[0],\n        direction: dir[2],\n        sub: true,\n        pos: [centerPos_1[0] + dir[0] * radiusX_1, centerPos_1[1] + dir[1] * radiusY_1]\n      };\n    }), true);\n    return {\n      type: clipPrefix,\n      clipText: clipText,\n      radiusX: radiusX_1,\n      radiusY: radiusY_1,\n      left: centerPos_1[0] - radiusX_1,\n      top: centerPos_1[1] - radiusY_1,\n      poses: poses,\n      splitter: splitter\n    };\n  } else if (clipPrefix === \"inset\") {\n    var values = splitSpace(value || \"0 0 0 0\");\n    var roundIndex = values.indexOf(\"round\");\n    var rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n    var radiusValues = values.slice(rectLength + 1);\n    var _l = values.slice(0, rectLength),\n      topValue = _l[0],\n      _m = _l[1],\n      rightValue = _m === void 0 ? topValue : _m,\n      _o = _l[2],\n      bottomValue = _o === void 0 ? topValue : _o,\n      _p = _l[3],\n      leftValue = _p === void 0 ? rightValue : _p;\n    var _q = [topValue, bottomValue].map(function (pos) {\n        return convertUnitSize(pos, height);\n      }),\n      top = _q[0],\n      bottom = _q[1];\n    var _r = [leftValue, rightValue].map(function (pos) {\n        return convertUnitSize(pos, width);\n      }),\n      left = _r[0],\n      right = _r[1];\n    var nextRight = width - right;\n    var nextBottom = height - bottom;\n    var radiusPoses = getRadiusValues(radiusValues, nextRight - left, nextBottom - top, left, top);\n    var poses = __spreadArray(__spreadArray([], getRectPoses(top, nextRight, nextBottom, left), true), radiusPoses, true);\n    return {\n      type: \"inset\",\n      clipText: clipText,\n      poses: poses,\n      top: top,\n      left: left,\n      right: nextRight,\n      bottom: nextBottom,\n      radius: radiusValues,\n      splitter: splitter\n    };\n  } else if (clipPrefix === \"rect\") {\n    // top right bottom left\n    var values = splitComma(value || \"0px, \".concat(width, \"px, \").concat(height, \"px, 0px\"));\n    splitter = \",\";\n    var _s = values.map(function (pos) {\n        var posValue = splitUnit(pos).value;\n        return posValue;\n      }),\n      top = _s[0],\n      right = _s[1],\n      bottom = _s[2],\n      left = _s[3];\n    var poses = getRectPoses(top, right, bottom, left);\n    return {\n      type: \"rect\",\n      clipText: clipText,\n      poses: poses,\n      top: top,\n      right: right,\n      bottom: bottom,\n      left: left,\n      values: values,\n      splitter: splitter\n    };\n  }\n  return;\n}\nfunction addClipPath(moveable, e) {\n  var _a = calculatePointerDist(moveable, e),\n    distX = _a[0],\n    distY = _a[1];\n  var _b = e.datas,\n    clipPath = _b.clipPath,\n    clipIndex = _b.clipIndex;\n  var _c = clipPath,\n    clipType = _c.type,\n    clipPoses = _c.poses,\n    splitter = _c.splitter;\n  var poses = clipPoses.map(function (pos) {\n    return pos.pos;\n  });\n  if (clipType === \"polygon\") {\n    poses.splice(clipIndex, 0, [distX, distY]);\n  } else if (clipType === \"inset\") {\n    var horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(clipIndex);\n    var verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(clipIndex);\n    var length = clipPoses.length;\n    addRadiusPos(clipPoses, poses, 8, horizontalIndex, verticalIndex, distX, distY, poses[4][0], poses[4][1], poses[0][0], poses[0][1]);\n    if (length === clipPoses.length) {\n      return;\n    }\n  } else {\n    return;\n  }\n  var clipStyles = getClipStyles(moveable, clipPath, poses);\n  triggerEvent(moveable, \"onClip\", fillParams(moveable, e, {\n    clipEventType: \"added\",\n    clipType: clipType,\n    poses: poses,\n    clipStyles: clipStyles,\n    clipStyle: \"\".concat(clipType, \"(\").concat(clipStyles.join(splitter), \")\"),\n    distX: 0,\n    distY: 0\n  }));\n}\nfunction removeClipPath(moveable, e) {\n  var _a = e.datas,\n    clipPath = _a.clipPath,\n    clipIndex = _a.clipIndex;\n  var _b = clipPath,\n    clipType = _b.type,\n    clipPoses = _b.poses,\n    splitter = _b.splitter;\n  var poses = clipPoses.map(function (pos) {\n    return pos.pos;\n  });\n  var length = poses.length;\n  if (clipType === \"polygon\") {\n    clipPoses.splice(clipIndex, 1);\n    poses.splice(clipIndex, 1);\n  } else if (clipType === \"inset\") {\n    if (clipIndex < 8) {\n      return;\n    }\n    removeRadiusPos(clipPoses, poses, clipIndex, 8, length);\n    if (length === clipPoses.length) {\n      return;\n    }\n  } else {\n    return;\n  }\n  var clipStyles = getClipStyles(moveable, clipPath, poses);\n  triggerEvent(moveable, \"onClip\", fillParams(moveable, e, {\n    clipEventType: \"removed\",\n    clipType: clipType,\n    poses: poses,\n    clipStyles: clipStyles,\n    clipStyle: \"\".concat(clipType, \"(\").concat(clipStyles.join(splitter), \")\"),\n    distX: 0,\n    distY: 0\n  }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nvar Clippable = {\n  name: \"clippable\",\n  props: {\n    clippable: Boolean,\n    defaultClipPath: String,\n    customClipPath: String,\n    keepRatio: Boolean,\n    clipRelative: Boolean,\n    clipArea: Boolean,\n    dragWithClip: Boolean,\n    clipTargetBounds: Boolean,\n    clipVerticalGuidelines: Array,\n    clipHorizontalGuidelines: Array,\n    clipSnapThreshold: Boolean\n  },\n  events: {\n    onClipStart: \"clipStart\",\n    onClip: \"clip\",\n    onClipEnd: \"clipEnd\"\n  },\n  css: [\".control.clip-control {\\n    background: #6d6;\\n    cursor: pointer;\\n}\\n.control.clip-control.clip-radius {\\n    background: #d66;\\n}\\n.line.clip-line {\\n    background: #6e6;\\n    cursor: move;\\n    z-index: 1;\\n}\\n.clip-area {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n}\\n.clip-ellipse {\\n    position: absolute;\\n    cursor: move;\\n    border: 1px solid #6d6;\\n    border: var(--zoompx) solid #6d6;\\n    border-radius: 50%;\\n    transform-origin: 0px 0px;\\n}\", \":host {\\n    --bounds-color: #d66;\\n}\", \".guideline {\\n    pointer-events: none;\\n    z-index: 2;\\n}\", \".line.guideline.bounds {\\n    background: #d66;\\n    background: var(--bounds-color);\\n}\"],\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      customClipPath = _a.customClipPath,\n      defaultClipPath = _a.defaultClipPath,\n      clipArea = _a.clipArea,\n      zoom = _a.zoom;\n    var _b = moveable.state,\n      target = _b.target,\n      width = _b.width,\n      height = _b.height,\n      allMatrix = _b.allMatrix,\n      is3d = _b.is3d,\n      left = _b.left,\n      top = _b.top,\n      pos1 = _b.pos1,\n      pos2 = _b.pos2,\n      pos3 = _b.pos3,\n      pos4 = _b.pos4,\n      clipPathState = _b.clipPathState,\n      snapBoundInfos = _b.snapBoundInfos,\n      rotationRad = _b.rotation;\n    if (!target) {\n      return [];\n    }\n    var clipPath = getClipPath(target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n    if (!clipPath) {\n      return [];\n    }\n    var n = is3d ? 4 : 3;\n    var type = clipPath.type;\n    var clipPoses = clipPath.poses;\n    var poses = clipPoses.map(function (pos) {\n      // return [x, y];\n      var calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n      return [calculatedPos[0] - left, calculatedPos[1] - top];\n    });\n    var controls = [];\n    var lines = [];\n    var isRect = type === \"rect\";\n    var isInset = type === \"inset\";\n    var isPolygon = type === \"polygon\";\n    if (isRect || isInset || isPolygon) {\n      var linePoses_1 = isInset ? poses.slice(0, 8) : poses;\n      lines = linePoses_1.map(function (to, i) {\n        var from = i === 0 ? linePoses_1[linePoses_1.length - 1] : linePoses_1[i - 1];\n        var rad = getRad(from, to);\n        var dist = getDiagonalSize(from, to);\n        return React.createElement(\"div\", {\n          key: \"clipLine\".concat(i),\n          className: prefix(\"line\", \"clip-line\", \"snap-control\"),\n          \"data-clip-index\": i,\n          style: {\n            width: \"\".concat(dist, \"px\"),\n            transform: \"translate(\".concat(from[0], \"px, \").concat(from[1], \"px) rotate(\").concat(rad, \"rad) scaleY(\").concat(zoom, \")\")\n          }\n        });\n      });\n    }\n    controls = poses.map(function (pos, i) {\n      return React.createElement(\"div\", {\n        key: \"clipControl\".concat(i),\n        className: prefix(\"control\", \"clip-control\", \"snap-control\"),\n        \"data-clip-index\": i,\n        style: {\n          transform: \"translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) rotate(\").concat(rotationRad, \"rad) scale(\").concat(zoom, \")\")\n        }\n      });\n    });\n    if (isInset) {\n      controls.push.apply(controls, poses.slice(8).map(function (pos, i) {\n        return React.createElement(\"div\", {\n          key: \"clipRadiusControl\".concat(i),\n          className: prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\"),\n          \"data-clip-index\": 8 + i,\n          style: {\n            transform: \"translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) rotate(\").concat(rotationRad, \"rad) scale(\").concat(zoom, \")\")\n          }\n        });\n      }));\n    }\n    if (type === \"circle\" || type === \"ellipse\") {\n      var clipLeft = clipPath.left,\n        clipTop = clipPath.top,\n        radiusX = clipPath.radiusX,\n        radiusY = clipPath.radiusY;\n      var _c = minus(calculatePosition(allMatrix, [clipLeft, clipTop], n), calculatePosition(allMatrix, [0, 0], n)),\n        distLeft = _c[0],\n        distTop = _c[1];\n      var ellipseClipPath = \"none\";\n      if (!clipArea) {\n        var piece = Math.max(10, radiusX / 5, radiusY / 5);\n        var areaPoses = [];\n        for (var i = 0; i <= piece; ++i) {\n          var rad = Math.PI * 2 / piece * i;\n          areaPoses.push([radiusX + (radiusX - zoom) * Math.cos(rad), radiusY + (radiusY - zoom) * Math.sin(rad)]);\n        }\n        areaPoses.push([radiusX, -2]);\n        areaPoses.push([-2, -2]);\n        areaPoses.push([-2, radiusY * 2 + 2]);\n        areaPoses.push([radiusX * 2 + 2, radiusY * 2 + 2]);\n        areaPoses.push([radiusX * 2 + 2, -2]);\n        areaPoses.push([radiusX, -2]);\n        ellipseClipPath = \"polygon(\".concat(areaPoses.map(function (pos) {\n          return \"\".concat(pos[0], \"px \").concat(pos[1], \"px\");\n        }).join(\", \"), \")\");\n      }\n      controls.push(React.createElement(\"div\", {\n        key: \"clipEllipse\",\n        className: prefix(\"clip-ellipse\", \"snap-control\"),\n        style: {\n          width: \"\".concat(radiusX * 2, \"px\"),\n          height: \"\".concat(radiusY * 2, \"px\"),\n          clipPath: ellipseClipPath,\n          transform: \"translate(\".concat(-left + distLeft, \"px, \").concat(-top + distTop, \"px) \").concat(makeMatrixCSS(allMatrix))\n        }\n      }));\n    }\n    if (clipArea) {\n      var _d = getRect(__spreadArray([pos1, pos2, pos3, pos4], poses, true)),\n        allWidth = _d.width,\n        allHeight = _d.height,\n        allLeft_1 = _d.left,\n        allTop_1 = _d.top;\n      if (isPolygon || isRect || isInset) {\n        var areaPoses = isInset ? poses.slice(0, 8) : poses;\n        controls.push(React.createElement(\"div\", {\n          key: \"clipArea\",\n          className: prefix(\"clip-area\", \"snap-control\"),\n          style: {\n            width: \"\".concat(allWidth, \"px\"),\n            height: \"\".concat(allHeight, \"px\"),\n            transform: \"translate(\".concat(allLeft_1, \"px, \").concat(allTop_1, \"px)\"),\n            clipPath: \"polygon(\".concat(areaPoses.map(function (pos) {\n              return \"\".concat(pos[0] - allLeft_1, \"px \").concat(pos[1] - allTop_1, \"px\");\n            }).join(\", \"), \")\")\n          }\n        }));\n      }\n    }\n    if (snapBoundInfos) {\n      [\"vertical\", \"horizontal\"].forEach(function (directionType) {\n        var info = snapBoundInfos[directionType];\n        var isHorizontal = directionType === \"horizontal\";\n        if (info.isSnap) {\n          lines.push.apply(lines, info.snap.posInfos.map(function (_a, i) {\n            var pos = _a.pos;\n            var snapPos1 = minus(calculatePosition(allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n            var snapPos2 = minus(calculatePosition(allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n            return renderLine(React, \"\", snapPos1, snapPos2, zoom, \"clip\".concat(directionType, \"snap\").concat(i), \"guideline\");\n          }));\n        }\n        if (info.isBound) {\n          lines.push.apply(lines, info.bounds.map(function (_a, i) {\n            var pos = _a.pos;\n            var snapPos1 = minus(calculatePosition(allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n            var snapPos2 = minus(calculatePosition(allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n            return renderLine(React, \"\", snapPos1, snapPos2, zoom, \"clip\".concat(directionType, \"bounds\").concat(i), \"guideline\", \"bounds\", \"bold\");\n          }));\n        }\n      });\n    }\n    return __spreadArray(__spreadArray([], controls, true), lines, true);\n  },\n  dragControlCondition: function (moveable, e) {\n    return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n  },\n  dragStart: function (moveable, e) {\n    var props = moveable.props;\n    var _a = props.dragWithClip,\n      dragWithClip = _a === void 0 ? true : _a;\n    if (dragWithClip) {\n      return false;\n    }\n    return this.dragControlStart(moveable, e);\n  },\n  drag: function (moveable, e) {\n    return this.dragControl(moveable, __assign(__assign({}, e), {\n      isDragTarget: true\n    }));\n  },\n  dragEnd: function (moveable, e) {\n    return this.dragControlEnd(moveable, e);\n  },\n  dragControlStart: function (moveable, e) {\n    var state = moveable.state;\n    var _a = moveable.props,\n      defaultClipPath = _a.defaultClipPath,\n      customClipPath = _a.customClipPath;\n    var target = state.target,\n      width = state.width,\n      height = state.height;\n    var inputTarget = e.inputEvent ? e.inputEvent.target : null;\n    var className = inputTarget && inputTarget.getAttribute(\"class\") || \"\";\n    var datas = e.datas;\n    var clipPath = getClipPath(target, width, height, defaultClipPath || \"inset\", customClipPath);\n    if (!clipPath) {\n      return false;\n    }\n    var clipText = clipPath.clipText,\n      type = clipPath.type,\n      poses = clipPath.poses;\n    var result = triggerEvent(moveable, \"onClipStart\", fillParams(moveable, e, {\n      clipType: type,\n      clipStyle: clipText,\n      poses: poses.map(function (pos) {\n        return pos.pos;\n      })\n    }));\n    if (result === false) {\n      datas.isClipStart = false;\n      return false;\n    }\n    datas.isControl = className && className.indexOf(\"clip-control\") > -1;\n    datas.isLine = className.indexOf(\"clip-line\") > -1;\n    datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n    datas.clipIndex = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n    datas.clipPath = clipPath;\n    datas.isClipStart = true;\n    state.clipPathState = clipText;\n    setDragStart(moveable, e);\n    return true;\n  },\n  dragControl: function (moveable, e) {\n    var _a;\n    var datas = e.datas,\n      originalDatas = e.originalDatas,\n      isDragTarget = e.isDragTarget;\n    if (!datas.isClipStart) {\n      return false;\n    }\n    var _b = datas,\n      isControl = _b.isControl,\n      isLine = _b.isLine,\n      isArea = _b.isArea,\n      clipIndex = _b.clipIndex,\n      clipPath = _b.clipPath;\n    if (!clipPath) {\n      return false;\n    }\n    var keepRatio = moveable.props.keepRatio;\n    var distX = 0;\n    var distY = 0;\n    var originalDraggable = originalDatas.draggable;\n    var originalDist = getDragDist(e);\n    if (isDragTarget && originalDraggable) {\n      _a = originalDraggable.prevBeforeDist, distX = _a[0], distY = _a[1];\n    } else {\n      distX = originalDist[0], distY = originalDist[1];\n    }\n    var firstDist = [distX, distY];\n    var props = moveable.props;\n    var state = moveable.state;\n    var width = state.width,\n      height = state.height;\n    var isDragWithTarget = !isArea && !isControl && !isLine;\n    var clipType = clipPath.type,\n      clipPoses = clipPath.poses,\n      splitter = clipPath.splitter;\n    var poses = clipPoses.map(function (pos) {\n      return pos.pos;\n    });\n    if (isDragWithTarget) {\n      distX = -distX;\n      distY = -distY;\n    }\n    var isAll = !isControl || clipPoses[clipIndex].direction === \"nesw\";\n    var isRect = clipType === \"inset\" || clipType === \"rect\";\n    var dists = clipPoses.map(function () {\n      return [0, 0];\n    });\n    if (isControl && !isAll) {\n      var _c = clipPoses[clipIndex],\n        horizontal = _c.horizontal,\n        vertical = _c.vertical;\n      var dist = [distX * Math.abs(horizontal), distY * Math.abs(vertical)];\n      dists = moveControlPos(clipPoses, clipIndex, dist, isRect, keepRatio);\n    } else if (isAll) {\n      dists = poses.map(function () {\n        return [distX, distY];\n      });\n    }\n    var nextPoses = poses.map(function (pos, i) {\n      return plus(pos, dists[i]);\n    });\n    var guidePoses = __spreadArray([], nextPoses, true);\n    state.snapBoundInfos = null;\n    var isCircle = clipPath.type === \"circle\";\n    var isEllipse = clipPath.type === \"ellipse\";\n    if (isCircle || isEllipse) {\n      var guideRect = getRect(nextPoses);\n      var ry = Math.abs(guideRect.bottom - guideRect.top);\n      var rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n      var bottom = nextPoses[0][1] + ry;\n      var left = nextPoses[0][0] - rx;\n      var right = nextPoses[0][0] + rx; // right\n\n      if (isCircle) {\n        guidePoses.push([right, guideRect.bottom]);\n        dists.push([1, 0]);\n      } // bottom\n\n      guidePoses.push([guideRect.left, bottom]);\n      dists.push([0, 1]); // left\n\n      guidePoses.push([left, guideRect.bottom]);\n      dists.push([1, 0]);\n    }\n    var guidelines = getDefaultGuidelines((props.clipHorizontalGuidelines || []).map(function (v) {\n      return convertUnitSize(\"\".concat(v), height);\n    }), (props.clipVerticalGuidelines || []).map(function (v) {\n      return convertUnitSize(\"\".concat(v), width);\n    }), width, height);\n    var guideXPoses = [];\n    var guideYPoses = [];\n    if (isCircle || isEllipse) {\n      guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n      guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n    } else if (isRect) {\n      var rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n      var rectDists_1 = [dists[0], dists[2], dists[4], dists[6]];\n      guideXPoses = rectPoses.filter(function (_, i) {\n        return rectDists_1[i][0];\n      }).map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = rectPoses.filter(function (_, i) {\n        return rectDists_1[i][1];\n      }).map(function (pos) {\n        return pos[1];\n      });\n    } else {\n      guideXPoses = guidePoses.filter(function (_, i) {\n        return dists[i][0];\n      }).map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = guidePoses.filter(function (_, i) {\n        return dists[i][1];\n      }).map(function (pos) {\n        return pos[1];\n      });\n    }\n    var boundDelta = [0, 0];\n    var _d = checkSnapBounds(guidelines, props.clipTargetBounds && {\n        left: 0,\n        top: 0,\n        right: width,\n        bottom: height\n      }, guideXPoses, guideYPoses, 5),\n      horizontalSnapInfo = _d.horizontal,\n      verticalSnapInfo = _d.vertical;\n    var snapOffsetY = horizontalSnapInfo.offset;\n    var snapOffsetX = verticalSnapInfo.offset;\n    if (horizontalSnapInfo.isBound) {\n      boundDelta[1] += snapOffsetY;\n    }\n    if (verticalSnapInfo.isBound) {\n      boundDelta[0] += snapOffsetX;\n    }\n    if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n      var guideRect = getRect(nextPoses);\n      var cy = guideRect.bottom - guideRect.top;\n      var cx = isEllipse ? guideRect.right - guideRect.left : cy;\n      var distSnapX = verticalSnapInfo.isBound ? Math.abs(snapOffsetX) : verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX;\n      var distSnapY = horizontalSnapInfo.isBound ? Math.abs(snapOffsetY) : horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY;\n      cx -= distSnapX;\n      cy -= distSnapY;\n      if (isCircle) {\n        cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n        cx = cy;\n      }\n      var center = guidePoses[0];\n      guidePoses[1][1] = center[1] - cy;\n      guidePoses[2][0] = center[0] + cx;\n      guidePoses[3][1] = center[1] + cy;\n      guidePoses[4][0] = center[0] - cx;\n    } else if (isRect && keepRatio && isControl) {\n      var _e = getControlSize(clipPoses),\n        width_1 = _e[0],\n        height_1 = _e[1];\n      var ratio = width_1 && height_1 ? width_1 / height_1 : 0;\n      var clipPose = clipPoses[clipIndex];\n      var direction = clipPose.direction || \"\";\n      var top = guidePoses[1][1];\n      var bottom = guidePoses[5][1];\n      var left = guidePoses[7][0];\n      var right = guidePoses[3][0];\n      if (snapOffsetY <= snapOffsetX) {\n        snapOffsetY = snapOffsetX / ratio;\n      } else {\n        snapOffsetX = snapOffsetY * ratio;\n      }\n      if (direction.indexOf(\"w\") > -1) {\n        left -= snapOffsetX;\n      } else if (direction.indexOf(\"e\") > -1) {\n        right -= snapOffsetX;\n      } else {\n        left += snapOffsetX / 2;\n        right -= snapOffsetX / 2;\n      }\n      if (direction.indexOf(\"n\") > -1) {\n        top -= snapOffsetY;\n      } else if (direction.indexOf(\"s\") > -1) {\n        bottom -= snapOffsetY;\n      } else {\n        top += snapOffsetY / 2;\n        bottom -= snapOffsetY / 2;\n      }\n      var nextControlPoses_2 = getRectPoses(top, right, bottom, left);\n      guidePoses.forEach(function (pos, i) {\n        var _a;\n        _a = nextControlPoses_2[i].pos, pos[0] = _a[0], pos[1] = _a[1];\n      });\n    } else {\n      guidePoses.forEach(function (pos, j) {\n        var dist = dists[j];\n        if (dist[0]) {\n          pos[0] -= snapOffsetX;\n        }\n        if (dist[1]) {\n          pos[1] -= snapOffsetY;\n        }\n      });\n    }\n    var nextClipStyles = getClipStyles(moveable, clipPath, nextPoses);\n    var clipStyle = \"\".concat(clipType, \"(\").concat(nextClipStyles.join(splitter), \")\");\n    state.clipPathState = clipStyle;\n    if (isCircle || isEllipse) {\n      guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n      guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n    } else if (isRect) {\n      var rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n      guideXPoses = rectPoses.map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = rectPoses.map(function (pos) {\n        return pos[1];\n      });\n    } else {\n      guideXPoses = guidePoses.map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = guidePoses.map(function (pos) {\n        return pos[1];\n      });\n    }\n    state.snapBoundInfos = checkSnapBounds(guidelines, props.clipTargetBounds && {\n      left: 0,\n      top: 0,\n      right: width,\n      bottom: height\n    }, guideXPoses, guideYPoses, 1);\n    if (originalDraggable) {\n      var is3d = state.is3d,\n        allMatrix = state.allMatrix;\n      var n = is3d ? 4 : 3;\n      var dragDist = boundDelta;\n      if (isDragTarget) {\n        dragDist = [firstDist[0] + boundDelta[0] - originalDist[0], firstDist[1] + boundDelta[1] - originalDist[1]];\n      }\n      originalDraggable.deltaOffset = multiply(allMatrix, [dragDist[0], dragDist[1], 0, 0], n);\n    }\n    triggerEvent(moveable, \"onClip\", fillParams(moveable, e, {\n      clipEventType: \"changed\",\n      clipType: clipType,\n      poses: nextPoses,\n      clipStyle: clipStyle,\n      clipStyles: nextClipStyles,\n      distX: distX,\n      distY: distY\n    }));\n    return true;\n  },\n  dragControlEnd: function (moveable, e) {\n    this.unset(moveable);\n    var isDrag = e.isDrag,\n      datas = e.datas,\n      isDouble = e.isDouble;\n    var isLine = datas.isLine,\n      isClipStart = datas.isClipStart,\n      isControl = datas.isControl;\n    if (!isClipStart) {\n      return false;\n    }\n    triggerEvent(moveable, \"onClipEnd\", fillEndParams(moveable, e, {}));\n    if (isDouble) {\n      if (isControl) {\n        removeClipPath(moveable, e);\n      } else if (isLine) {\n        // add\n        addClipPath(moveable, e);\n      }\n    }\n    return isDouble || isDrag;\n  },\n  unset: function (moveable) {\n    moveable.state.clipPathState = \"\";\n    moveable.state.snapBoundInfos = null;\n  }\n};\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea. (default: false)\n * @name Moveable.Clippable#clipArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target. (default: false)\n* @name Moveable.Clippable#clipTargetBounds\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* Add clip guidelines in the vertical direction. (default: [])\n* @name Moveable.Clippable#clipVerticalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction. (default: [])\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* istance value that can snap to clip guidelines. (default: 5)\n* @name Moveable.Clippable#clipSnapThreshold\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\n\nvar OriginDraggable = {\n  name: \"originDraggable\",\n  props: {\n    originDraggable: Boolean,\n    originRelative: Boolean\n  },\n  events: {\n    onDragOriginStart: \"dragOriginStart\",\n    onDragOrigin: \"dragOrigin\",\n    onDragOriginEnd: \"dragOriginEnd\"\n  },\n  css: [\":host[data-able-origindraggable] .control.origin {\\n    pointer-events: auto;\\n}\"],\n  dragControlCondition: function (_, e) {\n    if (e.isRequest) {\n      return e.requestAble === \"originDraggable\";\n    }\n    return hasClass(e.inputEvent.target, prefix(\"origin\"));\n  },\n  dragControlStart: function (moveable, e) {\n    var datas = e.datas;\n    setDragStart(moveable, e);\n    var params = fillParams(moveable, e, {\n      dragStart: Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e))\n    });\n    var result = triggerEvent(moveable, \"onDragOriginStart\", params);\n    datas.startOrigin = moveable.state.transformOrigin;\n    datas.startTargetOrigin = moveable.state.targetOrigin;\n    datas.prevOrigin = [0, 0];\n    datas.isDragOrigin = true;\n    if (result === false) {\n      datas.isDragOrigin = false;\n      return false;\n    }\n    return params;\n  },\n  dragControl: function (moveable, e) {\n    var datas = e.datas,\n      isPinch = e.isPinch,\n      isRequest = e.isRequest;\n    if (!datas.isDragOrigin) {\n      return false;\n    }\n    var _a = getDragDist(e),\n      distX = _a[0],\n      distY = _a[1];\n    var state = moveable.state;\n    var width = state.width,\n      height = state.height,\n      offsetMatrix = state.offsetMatrix,\n      targetMatrix = state.targetMatrix,\n      is3d = state.is3d;\n    var _b = moveable.props.originRelative,\n      originRelative = _b === void 0 ? true : _b;\n    var n = is3d ? 4 : 3;\n    var dist = [distX, distY];\n    if (isRequest) {\n      var distOrigin = e.distOrigin;\n      if (distOrigin[0] || distOrigin[1]) {\n        dist = distOrigin;\n      }\n    }\n    var origin = plus(datas.startOrigin, dist);\n    var targetOrigin = plus(datas.startTargetOrigin, dist);\n    var delta = minus(dist, datas.prevOrigin);\n    var nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, origin, n);\n    var rect = moveable.getRect();\n    var nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n    var dragDelta = [rect.left - nextRect.left, rect.top - nextRect.top];\n    datas.prevOrigin = dist;\n    var transformOrigin = [convertCSSSize(targetOrigin[0], width, originRelative), convertCSSSize(targetOrigin[1], height, originRelative)].join(\" \");\n    var params = fillParams(moveable, e, {\n      width: width,\n      height: height,\n      origin: origin,\n      dist: dist,\n      delta: delta,\n      transformOrigin: transformOrigin,\n      drag: Draggable.drag(moveable, setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false))\n    });\n    triggerEvent(moveable, \"onDragOrigin\", params);\n    return params;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isDragOrigin) {\n      return false;\n    }\n    triggerEvent(moveable, \"onDragOriginEnd\", fillEndParams(moveable, e, {}));\n    return true;\n  },\n  dragGroupControlCondition: function (moveable, e) {\n    return this.dragControlCondition(moveable, e);\n  },\n  dragGroupControlStart: function (moveable, e) {\n    var params = this.dragControlStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    return true;\n  },\n  dragGroupControl: function (moveable, e) {\n    var params = this.dragControl(moveable, e);\n    if (!params) {\n      return false;\n    }\n    moveable.transformOrigin = params.transformOrigin;\n    return true;\n  },\n  /**\n  * @method Moveable.OriginDraggable#request\n  * @param {object} e - the OriginDraggable's request parameter\n  * @param {number} [e.x] - x position\n  * @param {number} [e.y] - y position\n  * @param {number} [e.deltaX] - x number to move\n  * @param {number} [e.deltaY] - y number to move\n  * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n  * @param {array} [e.origin] - transform-origin position\n  * @param {number} [e.isInstant] - Whether to execute the request instantly\n  * @return {Moveable.Requester} Moveable Requester\n  * @example\n   * // Instantly Request (requestStart - request - requestEnd)\n  * // Use Relative Value\n  * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n  * // Use Absolute Value\n  * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n  * // Use Transform Value\n  * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n  * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n  * // requestStart\n  * const requester = moveable.request(\"originDraggable\");\n  *\n  * // request\n  * // Use Relative Value\n  * requester.request({ deltaX: 10, deltaY: 10 });\n  * requester.request({ deltaX: 10, deltaY: 10 });\n  * requester.request({ deltaX: 10, deltaY: 10 });\n  * // Use Absolute Value\n  * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n  * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n  * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n  *\n  * // requestEnd\n  * requester.requestEnd();\n  */\n  request: function (moveable) {\n    var datas = {};\n    var rect = moveable.getRect();\n    var distX = 0;\n    var distY = 0;\n    var transformOrigin = rect.transformOrigin;\n    var distOrigin = [0, 0];\n    return {\n      isControl: true,\n      requestStart: function () {\n        return {\n          datas: datas\n        };\n      },\n      request: function (e) {\n        if (\"deltaOrigin\" in e) {\n          distOrigin[0] += e.deltaOrigin[0];\n          distOrigin[1] += e.deltaOrigin[1];\n        } else if (\"origin\" in e) {\n          distOrigin[0] = e.origin[0] - transformOrigin[0];\n          distOrigin[1] = e.origin[1] - transformOrigin[1];\n        } else {\n          if (\"x\" in e) {\n            distX = e.x - rect.left;\n          } else if (\"deltaX\" in e) {\n            distX += e.deltaX;\n          }\n          if (\"y\" in e) {\n            distY = e.y - rect.top;\n          } else if (\"deltaY\" in e) {\n            distY += e.deltaY;\n          }\n        }\n        return {\n          datas: datas,\n          distX: distX,\n          distY: distY,\n          distOrigin: distOrigin\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  }\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\nfunction addBorderRadius(controlPoses, poses, lineIndex, distX, distY, width, height) {\n  var _a = splitRadiusPoses(controlPoses),\n    horizontals = _a.horizontals,\n    verticals = _a.verticals;\n  var horizontalsLength = horizontals.length;\n  var verticalsLength = verticals.length; // lineIndex\n  // 0 top\n  // 1 right\n  // 2 left\n  // 3 bottom\n  // 0 top - left\n  // 1 top - right\n  // 2 bottom - right\n  // 3 bottom - left\n  // 0 left - top\n  // 1 right - top\n  // 2 right - bottom\n  // 3 left - bottom\n\n  var horizontalIndex = -1;\n  var verticalIndex = -1;\n  if (lineIndex === 0) {\n    if (horizontalsLength === 0) {\n      horizontalIndex = 0;\n    } else if (horizontalsLength === 1) {\n      horizontalIndex = 1;\n    }\n  } else if (lineIndex === 3) {\n    if (horizontalsLength <= 2) {\n      horizontalIndex = 2;\n    } else if (horizontalsLength <= 3) {\n      horizontalIndex = 3;\n    }\n  }\n  if (lineIndex === 2) {\n    if (verticalsLength === 0) {\n      verticalIndex = 0;\n    } else if (verticalsLength < 4) {\n      verticalIndex = 3;\n    }\n  } else if (lineIndex === 1) {\n    if (verticalsLength <= 1) {\n      verticalIndex = 1;\n    } else if (verticalsLength <= 2) {\n      verticalIndex = 2;\n    }\n  }\n  addRadiusPos(controlPoses, poses, 0, horizontalIndex, verticalIndex, distX, distY, width, height);\n}\nfunction getBorderRadius(target, width, height, minCounts, state) {\n  if (minCounts === void 0) {\n    minCounts = [0, 0];\n  }\n  var borderRadius;\n  var values = [];\n  if (!state) {\n    var style = getComputedStyle(target);\n    borderRadius = style && style.borderRadius || \"\";\n  } else {\n    borderRadius = state;\n  }\n  if (!borderRadius || !state && borderRadius === \"0px\") {\n    values = [];\n  } else {\n    values = splitSpace(borderRadius);\n  }\n  return getRadiusValues(values, width, height, 0, 0, minCounts);\n}\nfunction triggerRoundEvent(moveable, e, dist, delta, controlPoses, nextPoses) {\n  var state = moveable.state;\n  var width = state.width,\n    height = state.height;\n  var _a = getRadiusStyles(nextPoses, controlPoses, moveable.props.roundRelative, width, height),\n    raws = _a.raws,\n    styles = _a.styles;\n  var _b = splitRadiusPoses(controlPoses, raws),\n    horizontals = _b.horizontals,\n    verticals = _b.verticals;\n  var borderRadius = styles.join(\" \");\n  state.borderRadiusState = borderRadius;\n  triggerEvent(moveable, \"onRound\", fillParams(moveable, e, {\n    horizontals: horizontals,\n    verticals: verticals,\n    borderRadius: borderRadius,\n    width: width,\n    height: height,\n    delta: delta,\n    dist: dist\n  }));\n}\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nvar Roundable = {\n  name: \"roundable\",\n  props: {\n    roundable: Boolean,\n    roundRelative: Boolean,\n    minRoundControls: Array,\n    maxRoundControls: Array,\n    roundClickable: Boolean\n  },\n  events: {\n    onRoundStart: \"roundStart\",\n    onRound: \"round\",\n    onRoundEnd: \"roundEnd\"\n  },\n  css: [\".control.border-radius {\\n    background: #d66;\\n    cursor: pointer;\\n}\", \":host[data-able-roundable] .line.direction {\\n    cursor: pointer;\\n}\"],\n  render: function (moveable, React) {\n    var _a = moveable.state,\n      target = _a.target,\n      width = _a.width,\n      height = _a.height,\n      allMatrix = _a.allMatrix,\n      is3d = _a.is3d,\n      left = _a.left,\n      top = _a.top,\n      borderRadiusState = _a.borderRadiusState;\n    var _b = moveable.props,\n      _c = _b.minRoundControls,\n      minRoundControls = _c === void 0 ? [0, 0] : _c,\n      _d = _b.maxRoundControls,\n      maxRoundControls = _d === void 0 ? [4, 4] : _d,\n      zoom = _b.zoom;\n    if (!target) {\n      return null;\n    }\n    var n = is3d ? 4 : 3;\n    var radiusValues = getBorderRadius(target, width, height, minRoundControls, borderRadiusState);\n    if (!radiusValues) {\n      return null;\n    }\n    var verticalCount = 0;\n    var horizontalCount = 0;\n    return radiusValues.map(function (v, i) {\n      horizontalCount += Math.abs(v.horizontal);\n      verticalCount += Math.abs(v.vertical);\n      var pos = minus(calculatePosition(allMatrix, v.pos, n), [left, top]);\n      var isDisplay = v.vertical ? verticalCount <= maxRoundControls[1] : horizontalCount <= maxRoundControls[0];\n      return React.createElement(\"div\", {\n        key: \"borderRadiusControl\".concat(i),\n        className: prefix(\"control\", \"border-radius\"),\n        \"data-radius-index\": i,\n        style: {\n          display: isDisplay ? \"block\" : \"none\",\n          transform: \"translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) scale(\").concat(zoom, \")\")\n        }\n      });\n    });\n  },\n  dragControlCondition: function (moveable, e) {\n    if (!e.inputEvent || e.isRequest) {\n      return false;\n    }\n    var className = e.inputEvent.target.getAttribute(\"class\") || \"\";\n    return className.indexOf(\"border-radius\") > -1 || className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n  },\n  dragControlStart: function (moveable, e) {\n    var inputEvent = e.inputEvent,\n      datas = e.datas;\n    var inputTarget = inputEvent.target;\n    var className = inputTarget.getAttribute(\"class\") || \"\";\n    var isControl = className.indexOf(\"border-radius\") > -1;\n    var isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n    var controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n    var lineIndex = isLine ? parseInt(inputTarget.getAttribute(\"data-line-index\"), 10) : -1;\n    if (!isControl && !isLine) {\n      return false;\n    }\n    var result = triggerEvent(moveable, \"onRoundStart\", fillParams(moveable, e, {}));\n    if (result === false) {\n      return false;\n    }\n    datas.lineIndex = lineIndex;\n    datas.controlIndex = controlIndex;\n    datas.isControl = isControl;\n    datas.isLine = isLine;\n    setDragStart(moveable, e);\n    var _a = moveable.props,\n      roundRelative = _a.roundRelative,\n      _b = _a.minRoundControls,\n      minRoundControls = _b === void 0 ? [0, 0] : _b;\n    var state = moveable.state;\n    var target = state.target,\n      width = state.width,\n      height = state.height;\n    datas.isRound = true;\n    datas.prevDist = [0, 0];\n    var controlPoses = getBorderRadius(target, width, height, minRoundControls) || [];\n    datas.controlPoses = controlPoses;\n    state.borderRadiusState = getRadiusStyles(controlPoses.map(function (pos) {\n      return pos.pos;\n    }), controlPoses, roundRelative, width, height).styles.join(\" \");\n    return true;\n  },\n  dragControl: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isRound || !datas.isControl || !datas.controlPoses.length) {\n      return false;\n    }\n    var index = datas.controlIndex;\n    var controlPoses = datas.controlPoses;\n    var _a = getDragDist(e),\n      distX = _a[0],\n      distY = _a[1];\n    var dist = [distX, distY];\n    var delta = minus(dist, datas.prevDist);\n    var _b = moveable.props.maxRoundControls,\n      maxRoundControls = _b === void 0 ? [4, 4] : _b;\n    var _c = moveable.state,\n      width = _c.width,\n      height = _c.height;\n    var selectedControlPose = controlPoses[index];\n    var selectedVertical = selectedControlPose.vertical;\n    var selectedHorizontal = selectedControlPose.horizontal; // 0: [0, 1, 2, 3] maxCount === 1\n    // 0: [0, 2] maxCount === 2\n    // 1: [1, 3] maxCount === 2\n    // 0: [0] maxCount === 3\n    // 1: [1, 3] maxCount === 3\n\n    var dists = controlPoses.map(function (pose) {\n      var horizontal = pose.horizontal,\n        vertical = pose.vertical;\n      var poseDist = [horizontal * selectedHorizontal * dist[0], vertical * selectedVertical * dist[1]];\n      if (horizontal) {\n        if (maxRoundControls[0] === 1) {\n          return poseDist;\n        } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n          return poseDist;\n        }\n      } else if (maxRoundControls[1] === 0) {\n        poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n        return poseDist;\n      } else if (selectedVertical) {\n        if (maxRoundControls[1] === 1) {\n          return poseDist;\n        } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n          return poseDist;\n        }\n      }\n      return [0, 0];\n    });\n    dists[index] = dist;\n    var nextPoses = controlPoses.map(function (pos, i) {\n      return plus(pos.pos, dists[i]);\n    });\n    datas.prevDist = [distX, distY];\n    triggerRoundEvent(moveable, e, dist, delta, controlPoses, nextPoses);\n    return true;\n  },\n  dragControlEnd: function (moveable, e) {\n    var state = moveable.state;\n    state.borderRadiusState = \"\";\n    var datas = e.datas,\n      isDouble = e.isDouble;\n    if (!datas.isRound) {\n      return false;\n    }\n    var width = state.width,\n      height = state.height;\n    var isControl = datas.isControl,\n      controlIndex = datas.controlIndex,\n      isLine = datas.isLine,\n      lineIndex = datas.lineIndex;\n    var controlPoses = datas.controlPoses;\n    var poses = controlPoses.map(function (pos) {\n      return pos.pos;\n    });\n    var length = poses.length;\n    var _a = moveable.props.roundClickable,\n      roundClickable = _a === void 0 ? true : _a;\n    if (isDouble && roundClickable) {\n      if (isControl) {\n        removeRadiusPos(controlPoses, poses, controlIndex, 0);\n      } else if (isLine) {\n        var _b = calculatePointerDist(moveable, e),\n          distX = _b[0],\n          distY = _b[1];\n        addBorderRadius(controlPoses, poses, lineIndex, distX, distY, width, height);\n      }\n      if (length !== controlPoses.length) {\n        triggerRoundEvent(moveable, e, [0, 0], [0, 0], controlPoses, poses);\n      }\n    }\n    triggerEvent(moveable, \"onRoundEnd\", fillEndParams(moveable, e, {}));\n    state.borderRadiusState = \"\";\n    return true;\n  },\n  unset: function (moveable) {\n    moveable.state.borderRadiusState = \"\";\n  }\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n\n/**\n * @property - Whether you can add/delete round controls by double-clicking a line or control. (default: true)\n * @name Moveable.Roundable#roundClickable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\nfunction isIdentityMatrix(matrix, is3d) {\n  var value = is3d ? \"matrix3d(\".concat(createIdentityMatrix(4)) : \"matrix(\".concat(createIdentityMatrix(3), \")\");\n  return matrix === value || matrix === \"matrix(1,0,0,1,0,0)\";\n}\nvar BeforeRenderable = {\n  isPinch: true,\n  name: \"beforeRenderable\",\n  props: {},\n  events: {\n    onBeforeRenderStart: \"beforeRenderStart\",\n    onBeforeRender: \"beforeRender\",\n    onBeforeRenderEnd: \"beforeRenderEnd\",\n    onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n    onBeforeRenderGroup: \"beforeRenderGroup\",\n    onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\"\n  },\n  dragRelation: \"weak\",\n  setTransform: function (moveable, e) {\n    var _a = moveable.state,\n      is3d = _a.is3d,\n      target = _a.target,\n      targetMatrix = _a.targetMatrix;\n    var transform = target === null || target === void 0 ? void 0 : target.style.transform;\n    var cssMatrix = is3d ? \"matrix3d(\".concat(targetMatrix.join(\",\"), \")\") : \"matrix(\".concat(convertMatrixtoCSS(targetMatrix, true), \")\");\n    var startTransform = !transform || transform === \"none\" ? cssMatrix : transform;\n    e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\n  },\n  resetTransform: function (e) {\n    e.datas.nextTransforms = e.datas.startTransforms;\n    e.datas.nextTransformAppendedIndexes = [];\n  },\n  fillDragStartParams: function (moveable, e) {\n    return fillParams(moveable, e, {\n      setTransform: function (transform) {\n        e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n      },\n      isPinch: !!e.isPinch\n    });\n  },\n  fillDragParams: function (moveable, e) {\n    return fillParams(moveable, e, {\n      isPinch: !!e.isPinch\n    });\n  },\n  dragStart: function (moveable, e) {\n    this.setTransform(moveable, e);\n    triggerEvent(moveable, \"onBeforeRenderStart\", this.fillDragStartParams(moveable, e));\n  },\n  drag: function (moveable, e) {\n    this.resetTransform(e);\n    triggerEvent(moveable, \"onBeforeRender\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch\n    }));\n  },\n  dragEnd: function (moveable, e) {\n    triggerEvent(moveable, \"onBeforeRenderEnd\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag\n    }));\n  },\n  dragGroupStart: function (moveable, e) {\n    var _this = this;\n    this.dragStart(moveable, e);\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      _this.setTransform(childMoveable, childEvent);\n      return _this.fillDragStartParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onBeforeRenderGroupStart\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets,\n      setTransform: function () {},\n      events: params\n    }));\n  },\n  dragGroup: function (moveable, e) {\n    var _this = this;\n    this.drag(moveable, e);\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      _this.resetTransform(childEvent);\n      return _this.fillDragParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onBeforeRenderGroup\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets,\n      events: params\n    }));\n  },\n  dragGroupEnd: function (moveable, e) {\n    this.dragEnd(moveable, e);\n    triggerEvent(moveable, \"onBeforeRenderGroupEnd\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag,\n      targets: moveable.props.targets\n    }));\n  },\n  dragControlStart: function (moveable, e) {\n    return this.dragStart(moveable, e);\n  },\n  dragControl: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragControlEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  dragGroupControlStart: function (moveable, e) {\n    return this.dragGroupStart(moveable, e);\n  },\n  dragGroupControl: function (moveable, e) {\n    return this.dragGroup(moveable, e);\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    return this.dragGroupEnd(moveable, e);\n  }\n};\nvar Renderable = {\n  name: \"renderable\",\n  props: {},\n  events: {\n    onRenderStart: \"renderStart\",\n    onRender: \"render\",\n    onRenderEnd: \"renderEnd\",\n    onRenderGroupStart: \"renderGroupStart\",\n    onRenderGroup: \"renderGroup\",\n    onRenderGroupEnd: \"renderGroupEnd\"\n  },\n  dragRelation: \"weak\",\n  dragStart: function (moveable, e) {\n    triggerEvent(moveable, \"onRenderStart\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch\n    }));\n  },\n  drag: function (moveable, e) {\n    triggerEvent(moveable, \"onRender\", this.fillDragParams(moveable, e));\n  },\n  dragAfter: function (moveable, e) {\n    if (e.resultCount) {\n      return this.drag(moveable, e);\n    }\n  },\n  dragEnd: function (moveable, e) {\n    triggerEvent(moveable, \"onRenderEnd\", this.fillDragEndParams(moveable, e));\n  },\n  dragGroupStart: function (moveable, e) {\n    triggerEvent(moveable, \"onRenderGroupStart\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroup: function (moveable, e) {\n    var _this = this;\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      return _this.fillDragParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onRenderGroup\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets,\n      transform: getNextTransformText(e),\n      events: params\n    }));\n  },\n  dragGroupEnd: function (moveable, e) {\n    var _this = this;\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      return _this.fillDragEndParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onRenderGroupEnd\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag,\n      targets: moveable.props.targets,\n      events: params\n    }));\n  },\n  dragControlStart: function (moveable, e) {\n    return this.dragStart(moveable, e);\n  },\n  dragControl: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragControlAfter: function (moveable, e) {\n    return this.dragAfter(moveable, e);\n  },\n  dragControlEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  dragGroupControlStart: function (moveable, e) {\n    return this.dragGroupStart(moveable, e);\n  },\n  dragGroupControl: function (moveable, e) {\n    return this.dragGroup(moveable, e);\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    return this.dragGroupEnd(moveable, e);\n  },\n  fillDragParams: function (moveable, e) {\n    return fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      transform: getNextTransformText(e)\n    });\n  },\n  fillDragEndParams: function (moveable, e) {\n    return fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag\n    });\n  }\n};\nfunction triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e, requestInstant) {\n  var isStart = eventType === \"Start\";\n  var target = moveable.state.target;\n  var isRequest = e.isRequest;\n  if (!target || isStart && eventAffix.indexOf(\"Control\") > -1 && !isRequest && moveable.areaElement === e.inputEvent.target) {\n    return false;\n  } // \"drag\" \"Control\" \"After\"\n\n  var eventName = \"\".concat(eventOperation).concat(eventAffix).concat(eventType);\n  var conditionName = \"\".concat(eventOperation).concat(eventAffix, \"Condition\");\n  var isEnd = eventType === \"End\";\n  var isAfter = eventType === \"After\";\n  var isFirstStart = isStart && (!moveable.targetGesto || !moveable.controlGesto || !moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag());\n  if (isFirstStart) {\n    moveable.updateRect(eventType, true, false);\n  }\n  if (eventType === \"\" && !isRequest) {\n    convertDragDist(moveable.state, e);\n  } // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n\n  var ables = __spreadArray([], moveable[ableType], true);\n  if (isRequest) {\n    var requestAble_1 = e.requestAble;\n    if (!ables.some(function (able) {\n      return able.name === requestAble_1;\n    })) {\n      ables.push.apply(ables, moveable.props.ables.filter(function (able) {\n        return able.name === requestAble_1;\n      }));\n    }\n  }\n  if (!ables.length) {\n    return false;\n  }\n  var eventAbles = __spreadArray(__spreadArray([BeforeRenderable], ables, true), [Renderable], false).filter(function (able) {\n    return able[eventName];\n  });\n  var datas = e.datas;\n  if (isFirstStart) {\n    eventAbles.forEach(function (able) {\n      able.unset && able.unset(moveable);\n    });\n  }\n  var inputEvent = e.inputEvent;\n  var inputTarget;\n  if (isEnd && inputEvent) {\n    inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n  }\n  var resultCount = 0;\n  var results = eventAbles.filter(function (able) {\n    var ableName = able.name;\n    var nextDatas = datas[ableName] || (datas[ableName] = {});\n    if (isStart) {\n      nextDatas.isEventStart = !able[conditionName] || able[conditionName](moveable, e);\n    }\n    if (nextDatas.isEventStart) {\n      var result = able[eventName](moveable, __assign(__assign({}, e), {\n        resultCount: resultCount,\n        datas: nextDatas,\n        originalDatas: datas,\n        inputTarget: inputTarget\n      }));\n      moveable._emitter.off();\n      if (isStart && result === false) {\n        nextDatas.isEventStart = false;\n      }\n      resultCount += result ? 1 : 0;\n      return result;\n    }\n    return false;\n  });\n  var isUpdate = results.length;\n  var isForceEnd = false; // end ables\n\n  if (isStart && eventAbles.length && !isUpdate) {\n    isForceEnd = eventAbles.filter(function (able) {\n      var ableName = able.name;\n      var nextDatas = datas[ableName];\n      if (nextDatas.isEventStart) {\n        if (able.dragRelation === \"strong\") {\n          // cancel drag\n          nextDatas.isEventStart = false;\n          return false;\n        } // start drag\n\n        return true;\n      } // cancel event\n\n      return false;\n    }).length === 0;\n  }\n  if (isEnd || isForceEnd) {\n    moveable.state.gesto = null;\n    if (moveable.moveables) {\n      moveable.moveables.forEach(function (childMoveable) {\n        childMoveable.state.gesto = null;\n      });\n    }\n  }\n  if (isFirstStart && isForceEnd) {\n    eventAbles.forEach(function (able) {\n      able.unset && able.unset(moveable);\n    });\n  }\n  if (isStart && !isRequest && isUpdate) {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n  }\n  if (moveable.isUnmounted || isForceEnd) {\n    return false;\n  }\n  if (!isStart && isUpdate && !requestInstant || isEnd) {\n    var flushSync = moveable.props.flushSync || defaultSync;\n    flushSync(function () {\n      moveable.updateRect(isEnd ? eventType : \"\", true, false);\n      moveable.forceUpdate();\n    });\n  }\n  if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n    triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n  }\n  return true;\n}\nfunction getTargetAbleGesto(moveable, moveableTarget, eventAffix) {\n  var controlBox = moveable.controlBox.getElement();\n  var targets = [];\n  targets.push(controlBox);\n  if (!moveable.props.dragArea || moveable.props.dragTarget) {\n    targets.push(moveableTarget);\n  }\n  var startFunc = function (e) {\n    var eventTarget = e.inputEvent.target;\n    var areaElement = moveable.areaElement;\n    return eventTarget === areaElement || !moveable.isMoveableElement(eventTarget) && !moveable.controlBox.getElement().contains(eventTarget) || hasClass(eventTarget, \"moveable-area\") || hasClass(eventTarget, \"moveable-padding\");\n  };\n  return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n    dragStart: startFunc,\n    pinchStart: startFunc\n  });\n}\nfunction getAbleGesto(moveable, target, ableType, eventAffix, conditionFunctions) {\n  if (conditionFunctions === void 0) {\n    conditionFunctions = {};\n  }\n  var _a = moveable.props,\n    pinchOutside = _a.pinchOutside,\n    pinchThreshold = _a.pinchThreshold;\n  var options = {\n    preventDefault: false,\n    preventRightClick: true,\n    preventWheelClick: true,\n    container: window,\n    pinchThreshold: pinchThreshold,\n    pinchOutside: pinchOutside\n  };\n  var gesto = new Gesto(target, options);\n  [\"drag\", \"pinch\"].forEach(function (eventOperation) {\n    [\"Start\", \"\", \"End\"].forEach(function (eventType) {\n      gesto.on(\"\".concat(eventOperation).concat(eventType), function (e) {\n        var eventName = e.eventType;\n        if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n          e.stop();\n          return;\n        }\n        var result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n        if (!result) {\n          e.stop();\n        }\n      });\n    });\n  });\n  return gesto;\n}\nvar EventManager = /*#__PURE__*/\nfunction () {\n  function EventManager(target, moveable, eventName) {\n    var _this = this;\n    this.target = target;\n    this.moveable = moveable;\n    this.eventName = eventName;\n    this.ables = [];\n    this._onEvent = function (e) {\n      var eventName = _this.eventName;\n      var moveable = _this.moveable;\n      if (moveable.state.disableNativeEvent) {\n        return;\n      }\n      _this.ables.forEach(function (able) {\n        able[eventName](moveable, {\n          inputEvent: e\n        });\n      });\n    };\n    target.addEventListener(eventName.toLowerCase(), this._onEvent);\n  }\n  var __proto = EventManager.prototype;\n  __proto.setAbles = function (ables) {\n    this.ables = ables;\n  };\n  __proto.destroy = function () {\n    this.target.removeEventListener(this.eventName.toLowerCase(), this._onEvent);\n    this.target = null;\n    this.moveable = null;\n  };\n  return EventManager;\n}();\nvar MoveableManager = /*#__PURE__*/\nfunction (_super) {\n  __extends(MoveableManager, _super);\n  function MoveableManager() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = __assign({\n      container: null,\n      gesto: null,\n      renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n      disableNativeEvent: false\n    }, getTargetInfo(null));\n    _this.enabledAbles = [];\n    _this.targetAbles = [];\n    _this.controlAbles = [];\n    _this.rotation = 0;\n    _this.scale = [1, 1];\n    _this.isUnmounted = false;\n    _this.events = {\n      \"mouseEnter\": null,\n      \"mouseLeave\": null\n    };\n    _this._emitter = new EventEmitter();\n    _this._prevTarget = null;\n    _this._prevDragArea = false;\n    _this._observer = null;\n    _this._observerId = 0;\n    _this.onPreventClick = function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      removeEvent(window, \"click\", _this.onPreventClick, true);\n    };\n    _this.checkUpdateRect = function () {\n      if (_this.isDragging()) {\n        return;\n      }\n      var parentMoveable = _this.props.parentMoveable;\n      if (parentMoveable) {\n        parentMoveable.checkUpdateRect();\n        return;\n      }\n      cancelAnimationFrame(_this._observerId);\n      _this._observerId = requestAnimationFrame(function () {\n        if (_this.isDragging()) {\n          return;\n        }\n        _this.updateRect();\n      });\n    };\n    return _this;\n  }\n  var __proto = MoveableManager.prototype;\n  __proto.render = function () {\n    var props = this.props;\n    var state = this.state;\n    var parentPosition = props.parentPosition,\n      className = props.className,\n      propsTarget = props.target,\n      zoom = props.zoom,\n      cspNonce = props.cspNonce,\n      translateZ = props.translateZ,\n      ControlBoxElement = props.cssStyled,\n      portalContainer = props.portalContainer;\n    this.checkUpdate();\n    this.updateRenderPoses();\n    var _a = parentPosition || {\n        left: 0,\n        top: 0\n      },\n      parentLeft = _a.left,\n      parentTop = _a.top;\n    var left = state.left,\n      top = state.top,\n      stateTarget = state.target,\n      direction = state.direction,\n      hasFixed = state.hasFixed;\n    var groupTargets = props.targets;\n    var isDisplay = (groupTargets && groupTargets.length || propsTarget) && stateTarget;\n    var isDragging = this.isDragging();\n    var ableAttributes = {};\n    this.getEnabledAbles().forEach(function (able) {\n      ableAttributes[\"data-able-\".concat(able.name.toLowerCase())] = true;\n    });\n    return React.createElement(ControlBoxElement, __assign({\n      cspNonce: cspNonce,\n      ref: ref(this, \"controlBox\"),\n      className: \"\".concat(prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\"), \" \").concat(className)\n    }, ableAttributes, {\n      onClick: this.onPreventClick,\n      portalContainer: portalContainer,\n      style: {\n        \"position\": hasFixed ? \"fixed\" : \"absolute\",\n        \"display\": isDisplay ? \"block\" : \"none\",\n        \"transform\": \"translate3d(\".concat(left - parentLeft, \"px, \").concat(top - parentTop, \"px, \").concat(translateZ, \")\"),\n        \"--zoom\": zoom,\n        \"--zoompx\": \"\".concat(zoom, \"px\")\n      }\n    }), this.renderAbles(), this._renderLines());\n  };\n  __proto.componentDidMount = function () {\n    this.isUnmounted = false;\n    this.controlBox.getElement();\n    var props = this.props;\n    var parentMoveable = props.parentMoveable,\n      container = props.container,\n      wrapperMoveable = props.wrapperMoveable;\n    this._updateTargets();\n    this._updateNativeEvents();\n    this._updateEvents();\n    if (!container && !parentMoveable && !wrapperMoveable) {\n      this.updateRect(\"\", false, true);\n    }\n    this.updateCheckInput();\n    this._updateObserver(this.props);\n  };\n  __proto.componentDidUpdate = function (prevProps) {\n    this._updateNativeEvents();\n    this._updateEvents();\n    this._updateTargets();\n    this.updateCheckInput();\n    this._updateObserver(prevProps);\n  };\n  __proto.componentWillUnmount = function () {\n    this.isUnmounted = true;\n    this._emitter.off();\n    unset(this, \"targetGesto\");\n    unset(this, \"controlGesto\");\n    var events = this.events;\n    for (var name in events) {\n      var manager = events[name];\n      manager && manager.destroy();\n    }\n  };\n  __proto.getContainer = function () {\n    var _a = this.props,\n      parentMoveable = _a.parentMoveable,\n      wrapperMoveable = _a.wrapperMoveable,\n      container = _a.container;\n    return container || wrapperMoveable && wrapperMoveable.getContainer() || parentMoveable && parentMoveable.getContainer() || this.controlBox.getElement().parentElement;\n  };\n  /**\n   * Check if the target is an element included in the moveable.\n   * @method Moveable#isMoveableElement\n   * @param - the target\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * window.addEventListener(\"click\", e => {\n   *     if (!moveable.isMoveableElement(e.target)) {\n   *         moveable.target = e.target;\n   *     }\n   * });\n   */\n\n  __proto.isMoveableElement = function (target) {\n    return target && (target.getAttribute(\"class\") || \"\").indexOf(PREFIX) > -1;\n  };\n  /**\n   * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n   * @method Moveable#dragStart\n   * @param - external `MouseEvent`or `TouchEvent`\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * document.body.addEventListener(\"mousedown\", e => {\n   *     if (!moveable.isMoveableElement(e.target)) {\n   *          moveable.dragStart(e);\n   *     }\n   * });\n   */\n\n  __proto.dragStart = function (e) {\n    var targetGesto = this.targetGesto;\n    if (targetGesto && !targetGesto.isFlag()) {\n      targetGesto.triggerDragStart(e);\n    }\n    return this;\n  };\n  /**\n   * Hit test an element or rect on a moveable target.\n   * @method Moveable#hitTest\n   * @param - element or rect to test\n   * @return - Get hit test rate (rate > 0 is hitted)\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * document.body.addEventListener(\"mousedown\", e => {\n   *     if (moveable.hitTest(e.target) > 0) {\n   *          console.log(\"hiited\");\n   *     }\n   * });\n   */\n\n  __proto.hitTest = function (el) {\n    var _a = this.state,\n      target = _a.target,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      pos3 = _a.pos3,\n      pos4 = _a.pos4,\n      targetClientRect = _a.targetClientRect;\n    if (!target) {\n      return 0;\n    }\n    var rect;\n    if (el instanceof Element) {\n      var clientRect = el.getBoundingClientRect();\n      rect = {\n        left: clientRect.left,\n        top: clientRect.top,\n        width: clientRect.width,\n        height: clientRect.height\n      };\n    } else {\n      rect = __assign({\n        width: 0,\n        height: 0\n      }, el);\n    }\n    var rectLeft = rect.left,\n      rectTop = rect.top,\n      rectWidth = rect.width,\n      rectHeight = rect.height;\n    var points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n    var size = getOverlapSize(points, [[rectLeft, rectTop], [rectLeft + rectWidth, rectTop], [rectLeft + rectWidth, rectTop + rectHeight], [rectLeft, rectTop + rectHeight]]);\n    var totalSize = getAreaSize(points);\n    if (!size || !totalSize) {\n      return 0;\n    }\n    return Math.min(100, size / totalSize * 100);\n  };\n  /**\n   * Whether the coordinates are inside Moveable\n   * @method Moveable#isInside\n   * @param - x coordinate\n   * @param - y coordinate\n   * @return - True if the coordinate is in moveable or false\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * document.body.addEventListener(\"mousedown\", e => {\n   *     if (moveable.isInside(e.clientX, e.clientY)) {\n   *          console.log(\"inside\");\n   *     }\n   * });\n   */\n\n  __proto.isInside = function (clientX, clientY) {\n    var _a = this.state,\n      target = _a.target,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      pos3 = _a.pos3,\n      pos4 = _a.pos4,\n      targetClientRect = _a.targetClientRect;\n    if (!target) {\n      return false;\n    }\n    return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n  };\n  /**\n   * If the width, height, left, and top of all elements change, update the shape of the moveable.\n   * @method Moveable#updateRect\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * window.addEventListener(\"resize\", e => {\n   *     moveable.updateRect();\n   * });\n   */\n\n  __proto.updateRect = function (type, isTarget, isSetState) {\n    if (isSetState === void 0) {\n      isSetState = true;\n    }\n    var props = this.props;\n    var parentMoveable = props.parentMoveable;\n    var state = this.state;\n    var target = state.target || this.props.target;\n    var container = this.getContainer();\n    var rootContainer = parentMoveable ? parentMoveable.props.rootContainer : props.rootContainer;\n    this.updateState(getTargetInfo(this.controlBox && this.controlBox.getElement(), target, container, container, rootContainer || container), parentMoveable ? false : isSetState);\n  };\n  /**\n   * Check if the moveable state is being dragged.\n   * @method Moveable#isDragging\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * // false\n   * console.log(moveable.isDragging());\n   *\n   * moveable.on(\"drag\", () => {\n   *   // true\n   *   console.log(moveable.isDragging());\n   * });\n   */\n\n  __proto.isDragging = function () {\n    return (this.targetGesto ? this.targetGesto.isFlag() : false) || (this.controlGesto ? this.controlGesto.isFlag() : false);\n  };\n  /**\n   * If the width, height, left, and top of the only target change, update the shape of the moveable.\n   * @method Moveable#updateTarget\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * moveable.updateTarget();\n   */\n\n  __proto.updateTarget = function (type) {\n    this.updateRect(type, true);\n  };\n  /**\n   * You can get the vertex information, position and offset size information of the target based on the container.\n   * @method Moveable#getRect\n   * @return - The Rect Info\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * const rectInfo = moveable.getRect();\n   */\n\n  __proto.getRect = function () {\n    var state = this.state;\n    var poses = getAbsolutePosesByState(this.state);\n    var pos1 = poses[0],\n      pos2 = poses[1],\n      pos3 = poses[2],\n      pos4 = poses[3];\n    var rect = getRect(poses);\n    var offsetWidth = state.width,\n      offsetHeight = state.height;\n    var width = rect.width,\n      height = rect.height,\n      left = rect.left,\n      top = rect.top;\n    var statePos = [state.left, state.top];\n    var origin = plus(statePos, state.origin);\n    var beforeOrigin = plus(statePos, state.beforeOrigin);\n    var transformOrigin = state.transformOrigin;\n    return {\n      width: width,\n      height: height,\n      left: left,\n      top: top,\n      pos1: pos1,\n      pos2: pos2,\n      pos3: pos3,\n      pos4: pos4,\n      offsetWidth: offsetWidth,\n      offsetHeight: offsetHeight,\n      beforeOrigin: beforeOrigin,\n      origin: origin,\n      transformOrigin: transformOrigin,\n      rotation: this.getRotation()\n    };\n  };\n  /**\n   * Get a manager that manages the moveable's state and props.\n   * @method Moveable#getManager\n   * @return - The Rect Info\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * const manager = moveable.getManager(); // real moveable class instance\n   */\n\n  __proto.getManager = function () {\n    return this;\n  };\n  __proto.getRotation = function () {\n    var _a = this.state,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      direction = _a.direction;\n    return getAbsoluteRotation(pos1, pos2, direction);\n  };\n  /**\n   * Request able through a method rather than an event.\n   * At the moment of execution, requestStart is executed,\n   * and then request and requestEnd can be executed through Requester.\n   * @method Moveable#request\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n   * @param - ableName\n   * @param - request to be able params.\n   * @param - If isInstant is true, request and requestEnd are executed immediately.\n   * @return - Able Requester. If there is no request in able, nothing will work.\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * // Instantly Request (requestStart - request - requestEnd)\n   * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n   *\n   * // Start move\n   * const requester = moveable.request(\"draggable\");\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.requestEnd();\n   */\n\n  __proto.request = function (ableName, param, isInstant) {\n    if (param === void 0) {\n      param = {};\n    }\n    var _a = this.props,\n      ables = _a.ables,\n      groupable = _a.groupable;\n    var requsetAble = ables.filter(function (able) {\n      return able.name === ableName;\n    })[0];\n    if (this.isDragging() || !requsetAble || !requsetAble.request) {\n      return {\n        request: function () {\n          return this;\n        },\n        requestEnd: function () {\n          return this;\n        }\n      };\n    }\n    var self = this;\n    var ableRequester = requsetAble.request(this);\n    var requestInstant = isInstant || param.isInstant;\n    var ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n    var eventAffix = \"\".concat(groupable ? \"Group\" : \"\").concat(ableRequester.isControl ? \"Control\" : \"\");\n    var requester = {\n      request: function (ableParam) {\n        triggerAble(self, ableType, \"drag\", eventAffix, \"\", __assign(__assign({}, ableRequester.request(ableParam)), {\n          requestAble: ableName,\n          isRequest: true\n        }), requestInstant);\n        return this;\n      },\n      requestEnd: function () {\n        triggerAble(self, ableType, \"drag\", eventAffix, \"End\", __assign(__assign({}, ableRequester.requestEnd()), {\n          requestAble: ableName,\n          isRequest: true\n        }), requestInstant);\n        return this;\n      }\n    };\n    triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", __assign(__assign({}, ableRequester.requestStart(param)), {\n      requestAble: ableName,\n      isRequest: true\n    }), requestInstant);\n    return requestInstant ? requester.request(param).requestEnd() : requester;\n  };\n  /**\n   * Remove the Moveable object and the events.\n   * @method Moveable#destroy\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * moveable.destroy();\n   */\n\n  __proto.destroy = function () {\n    this.componentWillUnmount();\n  };\n  __proto.updateRenderPoses = function () {\n    var state = this.state;\n    var props = this.props;\n    var originalBeforeOrigin = state.originalBeforeOrigin,\n      transformOrigin = state.transformOrigin,\n      allMatrix = state.allMatrix,\n      is3d = state.is3d,\n      pos1 = state.pos1,\n      pos2 = state.pos2,\n      pos3 = state.pos3,\n      pos4 = state.pos4,\n      stateLeft = state.left,\n      stateTop = state.top;\n    var _a = props.padding || {},\n      _b = _a.left,\n      left = _b === void 0 ? 0 : _b,\n      _c = _a.top,\n      top = _c === void 0 ? 0 : _c,\n      _d = _a.bottom,\n      bottom = _d === void 0 ? 0 : _d,\n      _e = _a.right,\n      right = _e === void 0 ? 0 : _e;\n    var n = is3d ? 4 : 3;\n    var absoluteOrigin = props.groupable ? originalBeforeOrigin : plus(originalBeforeOrigin, [stateLeft, stateTop]);\n    state.renderPoses = [plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)), plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)), plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)), plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n))];\n  };\n  __proto.checkUpdate = function () {\n    var _a = this.props,\n      target = _a.target,\n      container = _a.container,\n      parentMoveable = _a.parentMoveable;\n    var _b = this.state,\n      stateTarget = _b.target,\n      stateContainer = _b.container;\n    if (!stateTarget && !target) {\n      return;\n    }\n    this.updateAbles();\n    var isChanged = !equals(stateTarget, target) || !equals(stateContainer, container);\n    if (!isChanged) {\n      return;\n    }\n    var moveableContainer = container || this.controlBox;\n    if (moveableContainer) {\n      this.unsetAbles();\n    }\n    this.updateState({\n      target: target,\n      container: container\n    });\n    if (!parentMoveable && moveableContainer) {\n      this.updateRect(\"End\", false, false);\n    }\n  };\n  __proto.triggerEvent = function (name, e) {\n    this._emitter.trigger(name, e);\n    var callback = this.props[name];\n    return callback && callback(e);\n  };\n  __proto.useCSS = function (tag, css) {\n    var customStyleMap = this.props.customStyledMap;\n    var key = tag + css;\n    if (!customStyleMap[key]) {\n      customStyleMap[key] = styled(tag, css);\n    }\n    return customStyleMap[key];\n  };\n  __proto.unsetAbles = function () {\n    var _this = this;\n    this.targetAbles.forEach(function (able) {\n      if (able.unset) {\n        able.unset(_this);\n      }\n    });\n  };\n  __proto.updateAbles = function (ables, eventAffix) {\n    if (ables === void 0) {\n      ables = this.props.ables;\n    }\n    if (eventAffix === void 0) {\n      eventAffix = \"\";\n    }\n    var props = this.props;\n    var triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n    var enabledAbles = ables.filter(function (able) {\n      return able && (able.always && props[able.name] !== false || props[able.name]);\n    });\n    var dragStart = \"drag\".concat(eventAffix, \"Start\");\n    var pinchStart = \"pinch\".concat(eventAffix, \"Start\");\n    var dragControlStart = \"drag\".concat(eventAffix, \"ControlStart\");\n    var targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n    var controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n    this.enabledAbles = enabledAbles;\n    this.targetAbles = targetAbles;\n    this.controlAbles = controlAbles;\n  };\n  __proto.updateState = function (nextState, isSetState) {\n    if (isSetState) {\n      if (this.isUnmounted) {\n        return;\n      }\n      this.setState(nextState);\n    } else {\n      var state = this.state;\n      for (var name in nextState) {\n        state[name] = nextState[name];\n      }\n    }\n  };\n  __proto.getEnabledAbles = function () {\n    var props = this.props;\n    var ables = props.ables;\n    return ables.filter(function (able) {\n      return able && props[able.name];\n    });\n  };\n  __proto.renderAbles = function () {\n    var _this = this;\n    var props = this.props;\n    var triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n    var Renderer = {\n      createElement: createElement\n    };\n    return groupByMap(flat(filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(function (_a) {\n      var render = _a.render;\n      return render(_this, Renderer) || [];\n    })).filter(function (el) {\n      return el;\n    }), function (_a) {\n      var key = _a.key;\n      return key;\n    }).map(function (group) {\n      return group[0];\n    });\n  };\n  __proto.updateCheckInput = function () {\n    this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n  };\n  __proto._updateObserver = function (prevProps) {\n    var _a;\n    var props = this.props;\n    var target = props.target;\n    if (!window.ResizeObserver || !target || !props.useResizeObserver) {\n      (_a = this._observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n      return;\n    }\n    if (prevProps.target === target && this._observer) {\n      return;\n    }\n    var observer = new ResizeObserver(this.checkUpdateRect);\n    observer.observe(target, {\n      box: \"border-box\"\n    });\n    this._observer = observer;\n    return;\n  };\n  __proto._updateEvents = function () {\n    var controlBoxElement = this.controlBox.getElement();\n    var hasTargetAble = this.targetAbles.length;\n    var hasControlAble = this.controlAbles.length;\n    var props = this.props;\n    var target = props.dragTarget || props.target;\n    var isUnset = !hasTargetAble && this.targetGesto || this._isTargetChanged(true);\n    if (isUnset) {\n      unset(this, \"targetGesto\");\n      this.updateState({\n        gesto: null\n      });\n    }\n    if (!hasControlAble) {\n      unset(this, \"controlGesto\");\n    }\n    if (target && hasTargetAble && !this.targetGesto) {\n      this.targetGesto = getTargetAbleGesto(this, target, \"\");\n    }\n    if (!this.controlGesto && hasControlAble) {\n      this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n    }\n  };\n  __proto._updateTargets = function () {\n    var props = this.props;\n    this._prevTarget = props.dragTarget || props.target;\n    this._prevDragArea = props.dragArea;\n  };\n  __proto._renderLines = function () {\n    var props = this.props;\n    var edge = props.edge,\n      zoom = props.zoom,\n      hideDefaultLines = props.hideDefaultLines;\n    if (hideDefaultLines) {\n      return [];\n    }\n    var renderPoses = this.state.renderPoses;\n    var Renderer = {\n      createElement: createElement\n    };\n    return [renderLine(Renderer, edge ? \"n\" : \"\", renderPoses[0], renderPoses[1], zoom, 0), renderLine(Renderer, edge ? \"e\" : \"\", renderPoses[1], renderPoses[3], zoom, 1), renderLine(Renderer, edge ? \"w\" : \"\", renderPoses[0], renderPoses[2], zoom, 2), renderLine(Renderer, edge ? \"s\" : \"\", renderPoses[2], renderPoses[3], zoom, 3)];\n  };\n  __proto._isTargetChanged = function (useDragArea) {\n    var props = this.props;\n    var target = props.dragTarget || props.target;\n    var prevTarget = this._prevTarget;\n    var prevDragArea = this._prevDragArea;\n    var dragArea = props.dragArea; // check target without dragArea\n\n    var isTargetChanged = !dragArea && prevTarget !== target;\n    var isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\n    return isTargetChanged || isDragAreaChanged;\n  };\n  __proto._updateNativeEvents = function () {\n    var _this = this;\n    var props = this.props;\n    var target = props.dragArea ? this.areaElement : this.state.target;\n    var events = this.events;\n    var eventKeys = getKeys(events);\n    if (this._isTargetChanged()) {\n      for (var eventName in events) {\n        var manager = events[eventName];\n        manager && manager.destroy();\n        events[eventName] = null;\n      }\n    }\n    if (!target) {\n      return;\n    }\n    var enabledAbles = this.enabledAbles;\n    eventKeys.forEach(function (eventName) {\n      var ables = filterAbles(enabledAbles, [eventName]);\n      var hasAbles = ables.length > 0;\n      var manager = events[eventName];\n      if (!hasAbles) {\n        if (manager) {\n          manager.destroy();\n          events[eventName] = null;\n        }\n        return;\n      }\n      if (!manager) {\n        manager = new EventManager(target, _this, eventName);\n        events[eventName] = manager;\n      }\n      manager.setAbles(ables);\n    });\n  };\n  MoveableManager.defaultProps = {\n    target: null,\n    dragTarget: null,\n    container: null,\n    rootContainer: null,\n    origin: true,\n    edge: false,\n    parentMoveable: null,\n    wrapperMoveable: null,\n    parentPosition: null,\n    portalContainer: null,\n    useResizeObserver: false,\n    ables: [],\n    pinchThreshold: 20,\n    dragArea: false,\n    passDragArea: false,\n    transformOrigin: \"\",\n    className: \"\",\n    zoom: 1,\n    triggerAblesSimultaneously: false,\n    padding: {},\n    pinchOutside: true,\n    checkInput: false,\n    groupable: false,\n    hideDefaultLines: false,\n    cspNonce: \"\",\n    translateZ: 0,\n    cssStyled: null,\n    customStyledMap: {},\n    props: {},\n    flushSync: defaultSync\n  };\n  return MoveableManager;\n}(React.PureComponent);\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n\n/**\n * Zooms in the elements of a moveable.\n * @name Moveable#zoom\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Whether the target size is detected and updated whenever it changes.\n * @name Moveable#zoom\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.useResizeObserver = true;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox.\n * @name Moveable#className\n * @default \"\"\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s)\n * @name Moveable#dragTarget\n * @default target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n\nvar Groupable = {\n  name: \"groupable\",\n  props: {\n    defaultGroupRotate: Number,\n    defaultGroupOrigin: String,\n    groupable: Boolean\n  },\n  events: {},\n  render: function (moveable, React) {\n    var targets = moveable.props.targets || [];\n    moveable.moveables = [];\n    var _a = moveable.state,\n      left = _a.left,\n      top = _a.top;\n    var position = {\n      left: left,\n      top: top\n    };\n    var props = moveable.props;\n    return targets.map(function (target, i) {\n      return React.createElement(MoveableManager, {\n        key: \"moveable\" + i,\n        ref: refs(moveable, \"moveables\", i),\n        target: target,\n        origin: false,\n        cssStyled: props.cssStyled,\n        customStyledMap: props.customStyledMap,\n        useResizeObserver: props.useResizeObserver,\n        parentMoveable: moveable,\n        parentPosition: position\n      });\n    });\n  }\n};\nvar Clickable = makeAble(\"clickable\", {\n  props: {\n    clickable: Boolean,\n    preventClickDefault: Boolean\n  },\n  events: {\n    onClick: \"click\",\n    onClickGroup: \"clickGroup\"\n  },\n  always: true,\n  dragRelation: \"weak\",\n  dragStart: function (moveable, e) {\n    if (!e.isRequest) {\n      addEvent(window, \"click\", moveable.onPreventClick, true);\n    }\n  },\n  dragControlStart: function (moveable, e) {\n    this.dragStart(moveable, e);\n  },\n  dragGroupStart: function (moveable, e) {\n    this.dragStart(moveable, e);\n    e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n  },\n  dragEnd: function (moveable, e) {\n    this.endEvent(moveable);\n    var target = moveable.state.target;\n    var inputEvent = e.inputEvent;\n    var inputTarget = e.inputTarget;\n    var isMoveableElement = moveable.isMoveableElement(inputTarget);\n    var containsElement = !isMoveableElement && moveable.controlBox.getElement().contains(inputTarget);\n    if (!moveable.props.preventClickDefault && !e.isDrag || containsElement) {\n      this.unset(moveable);\n    }\n    if (!inputEvent || !inputTarget || e.isDrag || moveable.isMoveableElement(inputTarget) || containsElement // External event duplicate target or dragAreaElement\n    ) {\n      return;\n    }\n    var containsTarget = target.contains(inputTarget);\n    triggerEvent(moveable, \"onClick\", fillParams(moveable, e, {\n      isDouble: e.isDouble,\n      inputTarget: inputTarget,\n      isTarget: target === inputTarget,\n      containsTarget: containsTarget\n    }));\n  },\n  dragGroupEnd: function (moveable, e) {\n    this.endEvent(moveable);\n    var inputEvent = e.inputEvent;\n    var inputTarget = e.inputTarget;\n    if (!inputEvent || !inputTarget || e.isDrag || moveable.isMoveableElement(inputTarget) // External event duplicate target or dragAreaElement\n    || e.datas.inputTarget === inputTarget) {\n      return;\n    }\n    var targets = moveable.props.targets;\n    var targetIndex = targets.indexOf(inputTarget);\n    var isTarget = targetIndex > -1;\n    var containsTarget = false;\n    if (targetIndex === -1) {\n      targetIndex = findIndex(targets, function (parentTarget) {\n        return parentTarget.contains(inputTarget);\n      });\n      containsTarget = targetIndex > -1;\n    }\n    triggerEvent(moveable, \"onClickGroup\", fillParams(moveable, e, {\n      isDouble: e.isDouble,\n      targets: targets,\n      inputTarget: inputTarget,\n      targetIndex: targetIndex,\n      isTarget: isTarget,\n      containsTarget: containsTarget\n    }));\n  },\n  dragControlEnd: function (moveable, e) {\n    this.dragEnd(moveable, e);\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    this.dragEnd(moveable, e);\n  },\n  endEvent: function (moveable) {\n    var _this = this;\n    requestAnimationFrame(function () {\n      _this.unset(moveable);\n    });\n  },\n  unset: function (moveable) {\n    removeEvent(window, \"click\", moveable.onPreventClick, true);\n  }\n});\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n\nfunction getDraggableEvent(e) {\n  var datas = e.originalDatas.draggable;\n  if (!datas) {\n    e.originalDatas.draggable = {};\n    datas = e.originalDatas.draggable;\n  }\n  return __assign(__assign({}, e), {\n    datas: datas\n  });\n}\nvar edgeDraggable = makeAble(\"edgeDraggable\", {\n  dragControlCondition: function (moveable, e) {\n    if (!moveable.props.edgeDraggable || !e.inputEvent) {\n      return false;\n    }\n    var target = e.inputEvent.target;\n    return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n  },\n  dragControlStart: function (moveable, e) {\n    return Draggable.dragStart(moveable, getDraggableEvent(e));\n  },\n  dragControl: function (moveable, e) {\n    return Draggable.drag(moveable, getDraggableEvent(e));\n  },\n  dragControlEnd: function (moveable, e) {\n    return Draggable.dragEnd(moveable, getDraggableEvent(e));\n  },\n  dragGroupControlCondition: function (moveable, e) {\n    if (!moveable.props.edgeDraggable || !e.inputEvent) {\n      return false;\n    }\n    var target = e.inputEvent.target;\n    return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n  },\n  dragGroupControlStart: function (moveable, e) {\n    return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n  },\n  dragGroupControl: function (moveable, e) {\n    return Draggable.dragGroup(moveable, getDraggableEvent(e));\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n  },\n  unset: function (moveable) {\n    return Draggable.unset(moveable);\n  }\n});\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n\nvar IndividualGroupable = {\n  name: \"individualGroupable\",\n  props: {\n    individualGroupable: Boolean\n  },\n  events: {}\n};\nvar MOVEABLE_ABLES = [BeforeRenderable, Default, Snappable, Pinchable, Draggable, edgeDraggable, Rotatable, Resizable, Scalable, Warpable, Scrollable, Padding, Origin, OriginDraggable, Clippable, Roundable, Groupable, IndividualGroupable, Clickable, DragArea, Renderable];\nvar MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce(function (current, able) {\n  return __assign(__assign({}, current), \"events\" in able ? able.events : {});\n}, {});\nvar MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce(function (current, able) {\n  return __assign(__assign({}, current), able.props);\n}, {});\nvar MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nvar MOVEABLE_EVENTS = Object.keys(MOVEABLE_EVENTS_MAP);\nvar MOVEABLE_PROPS = Object.keys(MOVEABLE_PROPS_MAP);\nfunction getMaxPos(poses, index) {\n  return Math.max.apply(Math, poses.map(function (_a) {\n    var pos1 = _a[0],\n      pos2 = _a[1],\n      pos3 = _a[2],\n      pos4 = _a[3];\n    return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n  }));\n}\nfunction getMinPos(poses, index) {\n  return Math.min.apply(Math, poses.map(function (_a) {\n    var pos1 = _a[0],\n      pos2 = _a[1],\n      pos3 = _a[2],\n      pos4 = _a[3];\n    return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n  }));\n}\nfunction getGroupRect(moveables, rotation) {\n  if (!moveables.length) {\n    return [0, 0, 0, 0];\n  }\n  var moveablePoses = moveables.map(function (_a) {\n    var state = _a.state;\n    return getAbsolutePosesByState(state);\n  });\n  var minX = MAX_NUM;\n  var minY = MAX_NUM;\n  var groupWidth = 0;\n  var groupHeight = 0;\n  var fixedRotation = throttle(rotation, TINY_NUM);\n  if (fixedRotation % 90) {\n    var rad_1 = fixedRotation / 180 * Math.PI;\n    var a1_1 = Math.tan(rad_1);\n    var a2_1 = -1 / a1_1;\n    var b1MinMax_1 = [MIN_NUM, MAX_NUM];\n    var b2MinMax_1 = [MIN_NUM, MAX_NUM];\n    moveablePoses.forEach(function (poses) {\n      poses.forEach(function (pos) {\n        // ax + b = y\n        // b = y - ax\n        var b1 = pos[1] - a1_1 * pos[0];\n        var b2 = pos[1] - a2_1 * pos[0];\n        b1MinMax_1[0] = Math.max(b1MinMax_1[0], b1);\n        b1MinMax_1[1] = Math.min(b1MinMax_1[1], b1);\n        b2MinMax_1[0] = Math.max(b2MinMax_1[0], b2);\n        b2MinMax_1[1] = Math.min(b2MinMax_1[1], b2);\n      });\n    });\n    b1MinMax_1.forEach(function (b1) {\n      // a1x + b1 = a2x + b2\n      b2MinMax_1.forEach(function (b2) {\n        // (a1 - a2)x = b2 - b1\n        var x = (b2 - b1) / (a1_1 - a2_1);\n        var y = a1_1 * x + b1;\n        minX = Math.min(minX, x);\n        minY = Math.min(minY, y);\n      });\n    });\n    var rotatePoses = moveablePoses.map(function (_a) {\n      var pos1 = _a[0],\n        pos2 = _a[1],\n        pos3 = _a[2],\n        pos4 = _a[3];\n      return [rotate(pos1, -rad_1), rotate(pos2, -rad_1), rotate(pos3, -rad_1), rotate(pos4, -rad_1)];\n    });\n    groupWidth = getMaxPos(rotatePoses, 0) - getMinPos(rotatePoses, 0);\n    groupHeight = getMaxPos(rotatePoses, 1) - getMinPos(rotatePoses, 1);\n  } else {\n    minX = getMinPos(moveablePoses, 0);\n    minY = getMinPos(moveablePoses, 1);\n    groupWidth = getMaxPos(moveablePoses, 0) - minX;\n    groupHeight = getMaxPos(moveablePoses, 1) - minY;\n    if (fixedRotation % 180) {\n      var changedWidth = groupWidth;\n      groupWidth = groupHeight;\n      groupHeight = changedWidth;\n    }\n  }\n  return [minX, minY, groupWidth, groupHeight];\n}\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\n\nvar MoveableGroup = /*#__PURE__*/\nfunction (_super) {\n  __extends(MoveableGroup, _super);\n  function MoveableGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.differ = new ChildrenDiffer();\n    _this.moveables = [];\n    _this.transformOrigin = \"50% 50%\";\n    return _this;\n  }\n  var __proto = MoveableGroup.prototype;\n  __proto.checkUpdate = function () {\n    this.updateAbles();\n  };\n  __proto.updateRect = function (type, isTarget, isSetState) {\n    if (isSetState === void 0) {\n      isSetState = true;\n    }\n    if (!this.controlBox) {\n      return;\n    }\n    this.moveables.forEach(function (moveable) {\n      moveable.updateRect(type, false, false);\n    });\n    var state = this.state;\n    var props = this.props;\n    var target = state.target || props.target;\n    if (!isTarget || type !== \"\" && props.updateGroup) {\n      // reset rotataion\n      this.rotation = props.defaultGroupRotate;\n      this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n      this.scale = [1, 1];\n    }\n    var rotation = this.rotation;\n    var scale = this.scale;\n    var _a = getGroupRect(this.moveables, rotation),\n      left = _a[0],\n      top = _a[1],\n      width = _a[2],\n      height = _a[3]; // tslint:disable-next-line: max-line-length\n\n    var transform = \"rotate(\".concat(rotation, \"deg) scale(\").concat(scale[0] >= 0 ? 1 : -1, \", \").concat(scale[1] >= 0 ? 1 : -1, \")\");\n    target.style.cssText += \"left:0px;top:0px; transform-origin: \".concat(this.transformOrigin, \"; width:\").concat(width, \"px; height:\").concat(height, \"px;\") + \"transform:\".concat(transform);\n    state.width = width;\n    state.height = height;\n    var container = this.getContainer();\n    var info = getTargetInfo(this.controlBox.getElement(), target, this.controlBox.getElement(), this.getContainer(), this.props.rootContainer || container);\n    var pos = [info.left, info.top];\n    var _b = getAbsolutePosesByState(info),\n      pos1 = _b[0],\n      pos2 = _b[1],\n      pos3 = _b[2],\n      pos4 = _b[3]; // info.left + info.pos(1 ~ 4)\n\n    var minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n    var delta = [minPos.minX, minPos.minY];\n    info.pos1 = minus(pos1, delta);\n    info.pos2 = minus(pos2, delta);\n    info.pos3 = minus(pos3, delta);\n    info.pos4 = minus(pos4, delta);\n    info.left = left - info.left + delta[0];\n    info.top = top - info.top + delta[1];\n    info.origin = minus(plus(pos, info.origin), delta);\n    info.beforeOrigin = minus(plus(pos, info.beforeOrigin), delta);\n    info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin); // info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\n\n    var clientRect = info.targetClientRect;\n    var direction = scale[0] * scale[1] > 0 ? 1 : -1;\n    clientRect.top += info.top - state.top;\n    clientRect.left += info.left - state.left;\n    target.style.transform = \"translate(\".concat(-delta[0], \"px, \").concat(-delta[1], \"px) \").concat(transform);\n    this.updateState(__assign(__assign({}, info), {\n      direction: direction,\n      beforeDirection: direction\n    }), isSetState);\n  };\n  __proto.getRect = function () {\n    return __assign(__assign({}, _super.prototype.getRect.call(this)), {\n      children: this.moveables.map(function (child) {\n        return child.getRect();\n      })\n    });\n  };\n  __proto.triggerEvent = function (name, e, isManager) {\n    if (isManager || name.indexOf(\"Group\") > -1) {\n      return _super.prototype.triggerEvent.call(this, name, e);\n    } else {\n      this._emitter.trigger(name, e);\n    }\n  };\n  __proto.updateAbles = function () {\n    _super.prototype.updateAbles.call(this, __spreadArray(__spreadArray([], this.props.ables, true), [Groupable], false), \"Group\");\n  };\n  __proto._updateTargets = function () {\n    _super.prototype._updateTargets.call(this);\n    this._prevTarget = this.props.dragTarget || this.areaElement;\n  };\n  __proto._updateEvents = function () {\n    var state = this.state;\n    var props = this.props;\n    var prevTarget = this._prevTarget;\n    var nextTarget = props.dragTarget || this.areaElement;\n    if (prevTarget !== nextTarget) {\n      unset(this, \"targetGesto\");\n      unset(this, \"controlGesto\");\n      state.target = null;\n    }\n    if (!state.target) {\n      state.target = this.areaElement;\n      this.controlBox.getElement().style.display = \"block\";\n    }\n    if (state.target) {\n      if (!this.targetGesto) {\n        this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n      }\n      if (!this.controlGesto) {\n        this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n      }\n    }\n    var isContainerChanged = !equals(state.container, props.container);\n    if (isContainerChanged) {\n      state.container = props.container;\n    }\n    var _a = this.differ.update(props.targets),\n      added = _a.added,\n      changed = _a.changed,\n      removed = _a.removed;\n    if (isContainerChanged || added.length || changed.length || removed.length) {\n      this.updateRect();\n    }\n  };\n  __proto._updateObserver = function () {};\n  MoveableGroup.defaultProps = __assign(__assign({}, MoveableManager.defaultProps), {\n    transformOrigin: [\"50%\", \"50%\"],\n    groupable: true,\n    dragArea: true,\n    keepRatio: true,\n    targets: [],\n    defaultGroupRotate: 0,\n    defaultGroupOrigin: \"50% 50%\"\n  });\n  return MoveableGroup;\n}(MoveableManager);\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\n\nvar MoveableIndividualGroup = /*#__PURE__*/\nfunction (_super) {\n  __extends(MoveableIndividualGroup, _super);\n  function MoveableIndividualGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.moveables = [];\n    return _this;\n  }\n  var __proto = MoveableIndividualGroup.prototype;\n  __proto.render = function () {\n    var _this = this;\n    var _a = this.props,\n      cspNonce = _a.cspNonce,\n      ControlBoxElement = _a.cssStyled,\n      targets = _a.targets;\n    return React.createElement(ControlBoxElement, {\n      cspNonce: cspNonce,\n      ref: ref(this, \"controlBox\"),\n      className: prefix(\"control-box\")\n    }, targets.map(function (target, i) {\n      return React.createElement(MoveableManager, __assign({\n        key: \"moveable\" + i,\n        ref: refs(_this, \"moveables\", i)\n      }, _this.props, {\n        target: target,\n        wrapperMoveable: _this\n      }));\n    }));\n  };\n  __proto.componentDidUpdate = function () {};\n  __proto.updateRect = function (type, isTarget, isSetState) {\n    if (isSetState === void 0) {\n      isSetState = true;\n    }\n    this.moveables.forEach(function (moveable) {\n      moveable.updateRect(type, isTarget, isSetState);\n    });\n  };\n  __proto.getRect = function () {\n    return __assign(__assign({}, _super.prototype.getRect.call(this)), {\n      children: this.moveables.map(function (child) {\n        return child.getRect();\n      })\n    });\n  };\n  __proto.request = function () {\n    return {\n      request: function () {\n        return this;\n      },\n      requestEnd: function () {\n        return this;\n      }\n    };\n  };\n  __proto.dragStart = function () {\n    return this;\n  };\n  __proto.hitTest = function () {\n    return 0;\n  };\n  __proto.isInside = function () {\n    return false;\n  };\n  __proto.isDragging = function () {\n    return false;\n  };\n  __proto.updateRenderPoses = function () {};\n  __proto.checkUpdate = function () {};\n  __proto.triggerEvent = function () {};\n  __proto.updateAbles = function () {};\n  __proto._updateEvents = function () {};\n  __proto._updateObserver = function () {};\n  return MoveableIndividualGroup;\n}(MoveableManager);\nvar InitialMoveable = /*#__PURE__*/\nfunction (_super) {\n  __extends(InitialMoveable, _super);\n  function InitialMoveable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.refTargets = [];\n    _this.selectorMap = {};\n    return _this;\n  }\n  var __proto = InitialMoveable.prototype;\n  InitialMoveable.makeStyled = function () {\n    var cssMap = {};\n    var ables = this.getTotalAbles();\n    ables.forEach(function (_a) {\n      var css = _a.css;\n      if (!css) {\n        return;\n      }\n      css.forEach(function (text) {\n        cssMap[text] = true;\n      });\n    });\n    var style = getKeys(cssMap).join(\"\\n\");\n    this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n  };\n  InitialMoveable.getTotalAbles = function () {\n    return __spreadArray([Default, Groupable, IndividualGroupable, DragArea], this.defaultAbles, true);\n  };\n  __proto.render = function () {\n    var moveableContructor = this.constructor;\n    if (!moveableContructor.defaultStyled) {\n      moveableContructor.makeStyled();\n    }\n    var _a = this.props,\n      userAbles = _a.ables,\n      userProps = _a.props,\n      props = __rest(_a, [\"ables\", \"props\"]);\n    var refTargets = this._updateRefs(true);\n    var elementTargets = getElementTargets(refTargets, this.selectorMap);\n    var isGroup = elementTargets.length > 1;\n    var totalAbles = moveableContructor.getTotalAbles();\n    var ables = __spreadArray(__spreadArray([], totalAbles, true), userAbles || [], true);\n    var nextProps = __assign(__assign(__assign({}, props), userProps || {}), {\n      ables: ables,\n      cssStyled: moveableContructor.defaultStyled,\n      customStyledMap: moveableContructor.customStyledMap\n    });\n    if (isGroup) {\n      if (props.individualGroupable) {\n        return React.createElement(MoveableIndividualGroup, __assign({\n          key: \"individual-group\",\n          ref: ref(this, \"moveable\")\n        }, nextProps, {\n          target: null,\n          targets: elementTargets\n        }));\n      }\n      return React.createElement(MoveableGroup, __assign({\n        key: \"group\",\n        ref: ref(this, \"moveable\")\n      }, nextProps, {\n        target: null,\n        targets: elementTargets\n      }));\n    } else {\n      return React.createElement(MoveableManager, __assign({\n        key: \"single\",\n        ref: ref(this, \"moveable\")\n      }, nextProps, {\n        target: elementTargets[0]\n      }));\n    }\n  };\n  __proto.componentDidMount = function () {\n    this._updateRefs();\n  };\n  __proto.componentDidUpdate = function () {\n    this._updateRefs();\n  };\n  __proto.componentWillUnmount = function () {\n    this.selectorMap = {};\n    this.refTargets = [];\n  };\n  __proto.getManager = function () {\n    return this.moveable;\n  };\n  __proto._updateRefs = function (isRender) {\n    var prevRefTargets = this.refTargets;\n    var nextRefTargets = getRefTargets(this.props.target || this.props.targets);\n    var isBrowser = typeof document !== \"undefined\";\n    var isUpdate = prevRefTargets.length !== nextRefTargets.length || prevRefTargets.some(function (target, i) {\n      var nextTarget = nextRefTargets[i];\n      if (!target && !nextTarget) {\n        return false;\n      } else if (target !== nextTarget) {\n        return true;\n      }\n      return false;\n    });\n    var selectorMap = this.selectorMap;\n    var nextSelectorMap = {};\n    this.refTargets.forEach(function (target) {\n      if (isString(target)) {\n        var selectorTarget = selectorMap[target];\n        if (selectorTarget) {\n          nextSelectorMap[target] = selectorMap[target];\n        } else if (isBrowser) {\n          isUpdate = true;\n          nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n        }\n      }\n    });\n    this.refTargets = nextRefTargets;\n    this.selectorMap = nextSelectorMap;\n    if (!isRender && isUpdate) {\n      this.forceUpdate();\n    }\n    return nextRefTargets;\n  };\n  InitialMoveable.defaultAbles = [];\n  InitialMoveable.customStyledMap = {};\n  InitialMoveable.defaultStyled = null;\n  __decorate([withMethods(MOVEABLE_METHODS)], InitialMoveable.prototype, \"moveable\", void 0);\n  return InitialMoveable;\n}(React.PureComponent);\nvar Moveable = /*#__PURE__*/\nfunction (_super) {\n  __extends(Moveable, _super);\n  function Moveable() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Moveable.defaultAbles = MOVEABLE_ABLES;\n  return Moveable;\n}(InitialMoveable);\nfunction makeMoveable(ables) {\n  var _a;\n  return _a = /*#__PURE__*/\n  function (_super) {\n    __extends(Moveable, _super);\n    function Moveable() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Moveable;\n  }(InitialMoveable), _a.defaultAbles = ables, _a;\n}\nexport { Clippable, Draggable, edgeDraggable as EdgeDraggable, InitialMoveable, MOVEABLE_ABLES, MOVEABLE_EVENTS, MOVEABLE_EVENTS_MAP, MOVEABLE_EVENTS_PROPS_MAP, MOVEABLE_METHODS, MOVEABLE_PROPS, MOVEABLE_PROPS_MAP, Pinchable, Resizable, Rotatable, Roundable, Scalable, Snappable, Warpable, Moveable as default, getElementInfo, makeAble, makeMoveable };","map":{"version":3,"mappings":"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","names":["name","able","__assign","events","props","_a","Boolean","getSVGCursor","scale","degree","concat","getCursorCSS","x1","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","browser","webkit","IS_WEBKIT605","navi","window","userAgent","navigator","res","exec","toLowerCase","parseFloat","PREFIX","MOVEABLE_CSS","map","join","NEARBY_POS","FLOAT_POINT_NUM","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTIONS","DIRECTION_INDEXES","n","s","w","e","nw","ne","sw","se","DIRECTION_ROTATIONS","MOVEABLE_METHODS","setCustomDrag","state","delta","isPinch","isConvert","result","gesto","move","inputEvent","datas","originalDatas","draggableDatas","draggable","convertDragDist","parentEvent","prevX","prevY","startX","startY","isDrag","isFlag","__proto","client","type","clientX","clientY","distX","distY","deltaX","deltaY","parentGesto","CustomGesto","fillChildEvents","moveable","groupable","groupableDatas","childDatas","moveables","_","i","isStart","match","isEnd","childs","ev","childMoveable","childEvent","dragStart","childGestos","parentFlag","eachEvent","callback","renderDirectionControls","defaultDirections","React","additionalClassName","renderPoses","rotationRad","direction","_c","directions","zoom","directionMap","sign","renderDirections","degRotation","PI","forEach","dir","indexes","directionRotation","throttle","className","prefix","key","style","getControlTransform","index","pos1","pos2","classNames","_i","arguments","rad","getRad","rotation","getLineStyle","setRotateStartInfo","origin","rect","is3d","nextOrigin","calculatePosition","rootMatrix","startAbsoluteOrigin","plus","left","top","prevDeg","defaultDeg","prevSnapDeg","loop","getAbsoluteDist","deg","normalizedPrevDeg","floor","dist","getAbsoluteDistByClient","getRotateInfo","moveableRect","startValue","isSnap","throttleRotate","nextDist","checkSnapRotate","snapRotation","snapDeg","getRotationPositions","rotationPosition","pos3","pos4","split","dir1","dir2","radPoses","pos","getRotationRad","isReverse","isRequest","requestAble","target","hasClass","rotationTarget","getRefTargets","some","element","contains","canPinch","rotatable","String","Number","Object","onRotateStart","onBeforeRotate","onRotate","onRotateEnd","onRotateGroupStart","onBeforeRotateGroup","onRotateGroup","onRotateGroupEnd","css","render","positions","jsxs","push","transform","dragControlCondition","dragControlStart","parentRotate","beforeOrigin","beforeDirection","targetTransform","moveableClientRect","getRect","fixedPosition","getDirectionOffset","getOriginDirection","externalRotate","beforeInfo","afterInfo","absoluteInfo","setDefaultTransformIndex","params","fillParams","set","rotatation","fillTransformStartEvent","Draggable","triggerEvent","isRotate","snapRenderInfo","request","dragControl","groupDelta","resolveTransformEvent","targetDirection","getTransformDirection","beforeDelta","beforeDist","beforeRotation","absoluteDelta","absoluteDist","absoluteRotation","startRotation","absoluteStartRotation","parentDist","setRotation","nextRotation","_b","parentMoveable","nextTransform","convertTransformFormat","inverseDist","getRotateDist","inverseDelta","minus","prevInverseDist","requestValue","rotate","beforeRotate","absoluteRotate","fillTransformEvent","dragControlAfter","dragControlEnd","fillEndParams","dragGroupControlCondition","dragGroupControlStart","parentLeft","parentTop","parentBeforeOrigin","triggerChildAbles","child","childClient","groupClient","nextParams","targets","dragGroupControl","catchEvent","rotateMatrix","setGroupRotation","dragGroupControlEnd","distRotate","getRotation","isControl","requestStart","deltaRotate","requestEnd","VERTICAL_NAMES","HORIZONTAL_NAMES","VERTICAL_NAMES_MAP","start","end","center","HORIZONTAL_NAMES_MAP","ableName","snappable","bounds","innerBounds","verticalGuidelines","horizontalGuidelines","snapGridWidth","snapGridHeight","guidelines","enableSnap","indexOf","length","getSnapDirections","snapDirections","right","bottom","snapPoses","nextSnapDirections","nextSnapPoses","mapSnapDirectionPoses","horizontalNames","filter","verticalNames","horizontal","vertical","getGapGuidelines","targetRect","snapThreshold","elementRects","gapGuidelines","mainNames","sideNames","targetStart","targetEnd","targetCenter","targetStart2","targetEnd2","getDist","elementRect","nextElementRects","sort","a","b","groups","snapRect1","snapRect2","rect1","rect2","rect1Start","rect1End","rect2Start","rect2End","gap","isCenter","abs","size","hide","gapRects","width","height","clientLeft","clientTop","snapOffset","snapOffsetLeft","snapOffsetTop","snapOffsetBottom","snapOffsetRight","snapWidth","snapHeight","calculateContainerPos","containerRect","clientPos","values","containerClientRect","containerLeft","containerTop","poses","getAbsolutePosesByState","getMinMaxs","targetLeft","targetTop","calculateInversePosition","distLeft","distTop","value","getBoundingClientRect","elementLeft","elementTop","elementRight","elementBottom","middle","getElementGuidelines","elementGuidelines","prevValues","snapRect","refresh","nextElementGuidelines","isObject","el","getRefTarget","diff","maintained","added","nextValues","prevIndex","nextIndex","getSnapElementRects","elementSnapDirections","nextGuidelines","topValue","leftValue","rightValue","_d","bottomValue","_e","centerValue","_f","middleValue","splitSnapDirectionPoses","rectTop","rectLeft","sizes","getTotalGuidelines","overflow","containerHeight","containerWidth","containerClientHeight","containerClientWidth","snapGap","_g","totalGuidelines","getGridGuidelines","apply","getDefaultGuidelines","solveLineConstants","point1","point2","dx","dy","c","v","checkMoveableSnapPoses","posesX","posesY","customSnapThreshold","selectValue","checkSnapPoses","checkSnap","checkSnapKeepRatio","startPos","endPos","endY","isBottom","isRight","getTinyDist","verticalInfo","offset","horizontalInfo","endX","verticalSnapInfo","horizontalSnapInfo","posInfos","getNearestSnapGuidelineInfo","isVerticalSnap","verticalGuideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","y","x","checkSnaps","snapInfo","guideline","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","isVertical","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","nextPoses","alignPoses","keepRatio","getPosesByDirection","aDist","bDist","isBound","offsets","slice","aSign","bSign","aOffset","bOffset","checkSnapBoundPriority","getCheckSnapDirections","fixedDirection","endDirection_1","nextDirection","signX","signY","signs","isStartLine","dot","line","cx","average","cy","hitTestLine","test1","test2","isSameStartLine","dots","centerSign","error","every","checkInnerBoundDot","threshold","checkInnerBound","verticalSign","horizontalSign","lineConstants","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","verticalOffset","maxOffset","horizontalOffset","boundLine","isRender","dot1","boundDot1","boundDot2","dy2","dx2","hasDx","hasDy","slope","getInnerBoundInfo","lineInfos","info","multiple","sizeOffset","getDragDist","getInnerBoundDragInfo","lines","getCheckInnerBoundLineInfos","innerBoundInfo","widthOffsetInfo","getNearOffsetInfo","heightOffsetInfo","getInverseDragDist","lineDirections","allMatrix","virtualPoses","calculatePoses","getPosByDirection","getCheckSnapLineDirections","virtualLine","isBoundRotate","relativePoses","boundDots","getDistPointLine","sqrt","solveReverseLine","checkRotateInnerBounds","prevPoses","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","getDistSize","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","reduce","prev","cur","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","lineInfo","isHorizontalStart","isVerticalStart","checkBoundPoses","position","Infinity","nextBounds","checkBounds","externalBounds","isCSS","checkBoundKeepRatio","getBounds","startBoundPos","endBoundPos","minPos","min","maxPos","max","boundInfos","boundRect","boundRotate","vec","boundPos","r","nextPos","checkRotateBounds","relativeRad1","relativeRad2","isHorizontal","scaleType","createElement","renderGuideline","__spreadArray","sizeValue","posValue","renderSnapPoses","renderPos","renderInnerGuideline","isDisplayInnerSnapDigit","renderDigitLine","lineType","snapDigit","isDisplaySnapDigit","snapDistFormat","sizeName","absGap","snapSize","toFixed","groupByElementGuidelines","otherIndex","names","groupBy","inner","elementRect1","elementRect2","nextPos1","nextPos2","total","renderDashedGuidelines","rendered","sidePos","prevRect","nextRect","size1","size2","renderPos1","renderPos2","renderGapGuidelines","targetSideStart","targetSideEnd","sideStartPos","sideEndPos","sideCenterPos","solveEquation","solveNextOffset","isOutside","dist1","dist2","widthOffset","heightOffset","getSnapBound","boundInfo","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","hasGuidelines","getAbsolutePoses","absolutePoses","boundPoses","checkMoveableSnapBounds","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","horizontalBoundInfos","verticalBoundInfos","horizontalDist","verticalDist","snapIndex","snap","checkSnapBounds","guideines","checkSnapRightLine","snapBoundInfo","rad180","isHorizontalLine","isVerticalLine","startDirection","endDirection","otherStartPos","otherEndPos","checkSnapBoundsKeepRatio","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","snapLine","getSnapBoundOffset","horizontalBoundInfo","verticalBoundInfo","checkMaxBounds","maxWidth","maxHeight","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","nextOtherPos","isHeightOutside","isNaN","isWidthOutside","snapStart","container","snapContainer","snapContainerTarget","snapContainerRect","getClientRect","offset1","getDragDistByState","offset2","getNextFixedPoses","matrix","fixedPos","nextFixedPos","innerBoundLineInfos","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","getSizeOffsetInfo","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","p","checkSnapScale","startOffsetWidth","startOffsetHeight","sizeDist","scaleMatrix","getSnapGuidelines","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","verticalInnerBoundPoses","horizontalInnerBoundPoses","innerPos","findIndex","dragRelation","Array","Function","onSnap","minLeft","minTop","externalPoses","snapInfos","hasExternalPoses","externalRect","verticalPosInfos","horizontalPosInfos","allGuidelines","elements","gaps","renderGuidelines","drag","pinchStart","unset","dragEnd","directionCondition","rotatableDragControlCondtion","dragGroupStart","dragGroup","dragGroupEnd","throttleDrag","startDragRotate","edgeDraggable","onDragStart","onDrag","onDragEnd","onDragGroupStart","onDragGroup","onDragGroupEnd","dragInfo","targetGesto","getComputedStyle","setDragStart","startCheckSnapDrag","prevDist","prevBeforeDist","deltaOffset","translate","startRect","dragRotateRad","ry","cos","rx","sin","checkSnapBoundsDrag","beforeTranslate","getBeforeDragDist","getTransformDist","throttleArray","passDelta","passDist","fillOriginalTransform","num","dragAfter","param","triggerChildGesto","posX","posY","beforeMatrix","offsetMatrix","targetMatrix","transformOrigin","inverseMatrix","invert","inverseBeforeMatrix","absoluteOrigin","convertPositionMatrix","startDragBeforeDist","calculate","startDragDist","calculateMoveablePosition","beforeTransform","event","functionName","beforeRenderable","transformIndex","nextTransforms","nextTransformAppendedIndexes","convertTransformInfo","targetFunction","matFunctionName","beforeFunctionTexts","afterFunctionTexts","beforeFunctionMatrix","beforeTransform2","beforeFunctionMatrix2","targetTansform","targetFunctionMatrix","afterTransform","afterFunctionMatrix","afterTransform2","afterFunctionMatrix2","targetAllTransform","allFunctionMatrix","splice","isAppendTransform","bx","by","getTransfromMatrix","fromTranslation","isAfter","nextTargetMatrix","multiply","res1","afterTargetMatrix","isBefore","prevWidth","prevHeight","prevOrigin","splitUnit","unit","prevSize","measureRatio","getPosIndexesByDirection","getNextMatrix","getAbsoluteMatrix","getNextTransformMatrix","parseMat","convertDimension","createScaleMatrix","setTransform","startTransforms","isArray","splitSpace","setTransformIndex","property","parse","functionValue","getNextTransformText","getTranslateDist","nextMatrix","groupLeft","groupTop","nextFixedPosition","getScaleDist","scaleDist","nextFixedOffset","rotateDist","calculateTransformOrigin","prefixNames","defaultSync","fn","getTransformMatrix","multiplies","createOriginMatrix","measureSVGSize","viewBox","getSVGViewBox","ownerSVGElement","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","o","computedStyle","computedTransform","list","baseVal","matrixes","chr","getOffsetInfo","lastParent","isParent","body","document","parentElement","tagName","getElementTransform","isStatic","offsetParent","offsetLeft","offsetTop","isSVG","isUndefined","hasOffset","targetOrigin","getBodyOffset","bodyStyle","bodyPosition","marginLeft","parseInt","marginTop","convert3DMatrixes","getBodyScrollPos","documentElement","scrollLeft","scrollTop","getPositionFixedInfo","fixedContainer","hasTransform","getMatrixStackInfo","checkContainer","targetTransformOrigin","hasFixed","offsetContainer","convertCSStoMatrix","isFixed","fixedInfo","getOffsetPosInfo","offsetPos","getSVGMatrix","createIdentityMatrix","isOffsetEnd","offsetInfo","parentClientLeft","parentClientTop","fixedClientLeft","fixedClientTop","margin","calculateElementInfo","rootContainer","isAbsolute3d","allResult","getSize","offsetWidth","offsetHeight","calculateMatrixStack","getElementInfo","prevTargetMatrix","rootMatrixes","isRoot3d","isNext3d","isSVGGraphicElement","reverse","originalRootContainer","endContainer","rootMatrixBeforeOffset","nextInfo","getSVGOffset","isMatrix3d","makeMatrixCSS","ignoreDimension","convertMatrixtoCSS","clientWidth","clientHeight","viewBoxWidth","viewBoxHeight","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","xAlign","yAlign","scaleDimension","getBBox","bbox","rectWidth","rectHeight","calculateRect","targetInfo","mat","prevLeft","prevTop","posOrigin","rectOrigin","count","mat2","nextLeft","nextTop","y1","x2","y2","x3","y3","x4","y4","originX","originY","getShapeDirection","getDiagonalSize","getCSSSize","svg","cssWidth","cssHeight","boxSizing","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","horizontalPadding","verticalPadding","horizontalBorder","verticalBorder","getTargetInfo","moveableElement","parentContainer","targetClientRect","resetClientRect","beforePosition","getOrigin","originalBeforeOrigin","scrollWidth","scrollHeight","isExtends","innerWidth","innerHeight","scrollPos","clientRect","getDirection","direciton","getAttribute","roundSign","self","isBeforeEvent","currentTarget","isStartEvent","lastEvent","isDouble","_emitter","on","isManager","pseudoElt","filterAbles","ables","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","method","ableGroup","a1","a2","arr","func","groupKeys","groupKey","keyIndex","group","flat","args","calculatePadding","convertCSSSize","isRelative","parentDirection","invertObject","obj","nextObj","transforms","undefined","beforeFunctionTexts2","targetFunctionText","afterFunctionTexts2","beforeFunctions","beforeFunctions2","targetFunctions","afterFunctions","afterFunctions2","toMat","isArrayFormat","Element","isSelector","isString","querySelector","isFunction","current","userTargets","call","querySelectorAll","selectorMap","elementTargets","getAbsoluteRotation","calculateMatrixDist","getSizeDistByDist","startSize","ratio","distWidth","distHeight","standardRad","signSize","startWidthSize","startHeightSize","distSize","ratioRad","getOffsetSizeDist","sizeDirection","parentDistance","parentScale","startFixedDirection","dist_1","directionRatio","makeAble","onPinchStart","onPinch","onPinchEnd","onPinchGroupStart","onPinchGroup","onPinchGroupEnd","angle","pinchable","eventName","controlEventName","pinchAbles","controlAbles","ableEvent","pinch","pinchScale","distance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","resizable","throttleResize","resizeFormat","onResizeStart","onBeforeResize","onResize","onResizeEnd","onResizeGroupStart","onBeforeResizeGroup","onResizeGroup","onResizeGroupEnd","edge","renderDiagonalDirections","renderAllDirections","isGroup","startWidth","startHeight","padding","minSize","maxSize","minWidth","minHeight","isParentElement","containerStyle","convertUnitSize","isWidth","setRatio","isFinite","startPositions","setFixedDirection","setMin","setMax","nextMaxSize","isNumber","setOrigin","isResize","parentKeepRatio","dragClient","getNextBoundingSize","nextSize","boundingWidth","boundingHeight","nextFixedDirection","setSize","getAbsolutePosition","snapDist","checkSnapResize","computeSize","isNoSnap","calculateBoundSize","getResizeDist","errorWidth","errorHeight","isErrorWidth","isErrorHeight","originalEvents","setDist","createRotateMatrix","originalX","originalY","parentStartOffsetWidth","parentStartOffsetHeight","updateGroupMin","originalMinSize","childMinSize","childStartOffsetWidth","childStartOffsetHeight","parentMinWidth","parentMinHeight","updateGroupMax","originalMaxSize","childMaxSize","parentMaxWidth","parentMaxHeight","deltaWidth","deltaHeight","scalable","throttleScale","onScaleStart","onBeforeScale","onScale","onScaleEnd","onScaleGroupStart","onBeforeScaleGroup","onScaleGroup","onScaleGroupEnd","scaleWidth","scaleHeight","scaleXRatio","scaleYRatio","isScale","getNextScale","stateDirection","setScale","nextScale","multiply2","moveableScale","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","warpable","onWarpStart","onWarp","onWarpEnd","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","inputTarget","warpTargetMatrix","targetInverseMatrix","prevMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","afterMatrix","totalMatrix","AREA_PIECES","AREA_PIECE","AVOID","restoreStyle","areaElement","removeClass","cssText","renderPieces","dragArea","passDragArea","onClick","onClickGroup","ref","isDragArea","rects","children","nextElementSibling","addClass","disableNativeEvent","enableNativeEvent","requestAnimationFrame","getDefaultScrollPosition","scrollContainer","scrollable","scrollThreshold","getScrollPosition","onScroll","onScrollGroup","getContainer","dragScroll","DragScroll","scrollContainerElement","gestoName","scrollBy","checkScroll","dragGroupContro","dragGroupControEnd","dragTarget","portalContainer","useResizeObserver","pinchThreshold","pinchOutside","checkInput","cspNonce","translateZ","hideDefaultLines","flushSync","paddingDirections","paddingPos1","paddingPos2","paddingPos3","paddingPos4","RADIUS_DIRECTIONS","calculateRatio","sumSize","sumRatio","HORIZONTAL_RADIUS_ORDER","VERTICAL_RADIUS_ORDER","HORIZONTAL_RADIUS_DIRECTIONS","VERTICAL_RADIUS_DIRECTIONS","getRadiusStyles","controlPoses","clipStyles","raws","rawPos","styles","getRadiusRange","horizontalRange","verticalRange","clipPose","sub","minCounts","splitIndex","splitLength","horizontalValues","verticalValues","nwValue","neValue","seValue","_h","swValue","wnValue","_j","_k","enValue","_l","esValue","_m","wsValue","horizontalRawPoses","verticalRawPoses","nextHorizontalPoses","nextVerticalPoses","raw","removeRadiusPos","startIndex","radiuslIndex","deleteCount","addRadiusPos","horizontalIndex","verticalIndex","radiusX","radiusY","startVerticalIndex","horizontals","verticals","CLIP_DIRECTIONS","CLIP_RECT_DIRECTIONS","getClipStyles","clipPath","clipType","clipPoses","isRect","isCircle","clipRelative","subWidth","subHeight","getRectPoses","xs","ys","diry","dirx","getControlSize","xRange","yRange","moveControlPos","dists","verticalDirections","horizontalDirections","verticalDirection_1","horizontalDirection_1","fixedIndex","nextControlPoses_1","controlPose","controlDir","dirDir","dirHorizontal","dirVertical","getClipPath","defaultClip","customClip","clipText","clip","splitBracket","clipPrefix","splitter","splitComma","xPos","yPos","radiusX_1","radiusY_1","radius","xRadius","yRadius","centerPos_1","roundIndex","rectLength","radiusValues","_o","_p","nextRight","nextBottom","radiusPoses","getRadiusValues","addClipPath","clipIndex","clipEventType","clipStyle","removeClipPath","clippable","defaultClipPath","customClipPath","clipArea","dragWithClip","clipTargetBounds","clipVerticalGuidelines","clipHorizontalGuidelines","clipSnapThreshold","onClipStart","onClip","onClipEnd","clipPathState","snapBoundInfos","calculatedPos","controls","isInset","isPolygon","linePoses_1","to","from","clipLeft","clipTop","ellipseClipPath","piece","areaPoses","allWidth","allHeight","allLeft_1","allTop_1","directionType","snapPos1","snapPos2","renderLine","isDragTarget","isClipStart","isLine","isArea","originalDraggable","originalDist","firstDist","isDragWithTarget","isAll","guidePoses","isEllipse","guideRect","guideXPoses","guideYPoses","rectPoses","rectDists_1","boundDelta","snapOffsetY","snapOffsetX","distSnapX","distSnapY","width_1","height_1","nextControlPoses_2","j","nextClipStyles","dragDist","originDraggable","originRelative","onDragOriginStart","onDragOrigin","onDragOriginEnd","startOrigin","startTargetOrigin","isDragOrigin","distOrigin","dragDelta","deltaOrigin","addBorderRadius","lineIndex","splitRadiusPoses","horizontalsLength","verticalsLength","getBorderRadius","borderRadius","triggerRoundEvent","roundRelative","borderRadiusState","roundable","minRoundControls","maxRoundControls","roundClickable","onRoundStart","onRound","onRoundEnd","verticalCount","horizontalCount","isDisplay","display","controlIndex","isRound","selectedControlPose","selectedVertical","selectedHorizontal","pose","poseDist","isIdentityMatrix","onBeforeRenderStart","onBeforeRender","onBeforeRenderEnd","onBeforeRenderGroupStart","onBeforeRenderGroup","onBeforeRenderGroupEnd","cssMatrix","startTransform","resetTransform","fillDragStartParams","fillDragParams","_this","onRenderStart","onRender","onRenderEnd","onRenderGroupStart","onRenderGroup","onRenderGroupEnd","resultCount","fillDragEndParams","ableType","eventOperation","eventAffix","eventType","requestInstant","conditionName","isFirstStart","controlGesto","updateRect","requestAble_1","eventAbles","Renderable","elementFromPoint","results","nextDatas","isEventStart","off","isUpdate","isForceEnd","preventDefault","isUnmounted","forceUpdate","triggerAble","getTargetAbleGesto","moveableTarget","controlBox","getElement","startFunc","eventTarget","isMoveableElement","getAbleGesto","conditionFunctions","options","preventRightClick","preventWheelClick","Gesto","stop","_onEvent","addEventListener","setAbles","removeEventListener","EventManager","__extends","EventEmitter","stopPropagation","removeEvent","onPreventClick","isDragging","checkUpdateRect","cancelAnimationFrame","_observerId","parentPosition","propsTarget","ControlBoxElement","cssStyled","checkUpdate","updateRenderPoses","stateTarget","groupTargets","ableAttributes","getEnabledAbles","renderAbles","_renderLines","wrapperMoveable","_updateTargets","_updateNativeEvents","_updateEvents","updateCheckInput","_updateObserver","componentDidUpdate","prevProps","manager","destroy","triggerDragStart","hitTest","points","fitPoints","getOverlapSize","totalSize","getAreaSize","isInside","isTarget","isSetState","updateState","updateTarget","statePos","isInstant","requsetAble","ableRequester","requester","ableParam","componentWillUnmount","stateLeft","stateTop","stateContainer","updateAbles","isChanged","equals","moveableContainer","unsetAbles","trigger","tag","customStyleMap","customStyledMap","styled","targetAbles","always","nextState","setState","Renderer","groupByMap","ResizeObserver","_observer","observer","observe","box","controlBoxElement","hasTargetAble","hasControlAble","isUnset","_isTargetChanged","_prevTarget","_prevDragArea","useDragArea","prevTarget","prevDragArea","isTargetChanged","isDragAreaChanged","eventKeys","getKeys","hasAbles","MoveableManager","PureComponent","defaultGroupRotate","defaultGroupOrigin","refs","clickable","preventClickDefault","addEvent","endEvent","containsElement","containsTarget","targetIndex","getDraggableEvent","individualGroupable","MOVEABLE_ABLES","BeforeRenderable","Default","Snappable","Pinchable","Rotatable","Resizable","Scalable","Warpable","Scrollable","Padding","Origin","OriginDraggable","Clippable","Roundable","Groupable","IndividualGroupable","Clickable","DragArea","MOVEABLE_EVENTS_PROPS_MAP","MOVEABLE_PROPS_MAP","MOVEABLE_EVENTS_MAP","MOVEABLE_EVENTS","keys","MOVEABLE_PROPS","getMaxPos","getMinPos","getGroupRect","moveablePoses","minX","minY","groupWidth","groupHeight","fixedRotation","rad_1","a1_1","tan","a2_1","b1MinMax_1","b2MinMax_1","b1","b2","rotatePoses","changedWidth","ChildrenDiffer","updateGroup","_super","nextTarget","isContainerChanged","differ","update","changed","removed","MoveableGroup","defaultProps","MoveableIndividualGroup","InitialMoveable","cssMap","getTotalAbles","text","defaultStyled","prefixCSS","defaultAbles","moveableContructor","constructor","makeStyled","userAbles","userProps","__rest","refTargets","_updateRefs","getElementTargets","totalAbles","nextProps","prevRefTargets","nextRefTargets","isBrowser","nextSelectorMap","selectorTarget","__decorate","withMethods","Moveable","makeMoveable"],"sources":["/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/AbleManager.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/consts.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/gesto/CustomGesto.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/groupUtils.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/renderDirections.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Rotatable.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/snappable/utils.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/snappable/snap.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/snappable/innerBounds.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/snappable/bounds.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/snappable/render.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/snappable/snapBounds.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Snappable.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Draggable.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/gesto/GestoUtils.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/utils.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Pinchable.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Resizable.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Scalable.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Warpable.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/classNames.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/DragArea.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Origin.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Scrollable.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Default.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Padding.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/roundable/borderRadius.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Clippable.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/OriginDraggable.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Roundable.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/BeforeRenderable.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Renderable.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/gesto/getAbleGesto.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/EventManager.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/MoveableManager.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Groupable.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/Clickable.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/edgeDraggable.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/IndividualGroupable.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/ables/consts.ts","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/MoveableGroup.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/MoveableIndividualGroup.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/InitialMoveable.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/Moveable.tsx","/Users/danygarza/Desktop/challenge/front-challenge-2/node_modules/react-moveable/src/react-moveable/makeMoveable.ts"],"sourcesContent":["import { Able, DefaultProps } from \"../types\";\n\nexport function makeAble<\n    Name extends string,\n    AbleObject extends Partial<Able<any, any>>,\n    Props extends DefaultProps<Name, AbleObject>,\n>(name: Name, able: AbleObject) {\n    return {\n        events: {} as const,\n        props: {\n            [name]: Boolean,\n        } as Props,\n        name,\n        ...able,\n    } as const;\n}\n","import getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\nimport { MoveableInterface } from \"./types\";\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    // const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    let defaultCursor = \"ns-resize\";\n\n    if (degree45 === 135) {\n        defaultCursor = \"nwse-resize\";\n    } else if (degree45 === 45) {\n        defaultCursor = \"nesw-resize\";\n    } else if (degree45 === 90) {\n        defaultCursor = \"ew-resize\";\n    }\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT = agent.browser.webkit;\nexport const IS_WEBKIT605 = IS_WEBKIT && (() => {\n    const navi = typeof window === \"undefined\" ? { userAgent: \"\" } : window.navigator;\n    const res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\n\n    return res ? parseFloat(res[1]) < 605 : false;\n})();\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = `\n{\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tleft: 0;\n\ttop: 0;\n    z-index: 3000;\n    --moveable-color: #4af;\n    --zoom: 1;\n    --zoompx: 1px;\n    will-change: transform;\n}\n.control-box {\n    z-index: 0;\n}\n.line, .control {\n    position: absolute;\n\tleft: 0;\n    top: 0;\n    will-change: transform;\n}\n.control {\n\twidth: 14px;\n\theight: 14px;\n\tborder-radius: 50%;\n\tborder: 2px solid #fff;\n\tbox-sizing: border-box;\n    background: #4af;\n    background: var(--moveable-color);\n\tmargin-top: -7px;\n    margin-left: -7px;\n    border: 2px solid #fff;\n    z-index: 10;\n}\n.padding {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100px;\n    height: 100px;\n    transform-origin: 0 0;\n}\n.line {\n\twidth: 1px;\n    height: 1px;\n    background: #4af;\n    background: var(--moveable-color);\n\ttransform-origin: 0px 50%;\n}\n.line.dashed {\n    box-sizing: border-box;\n    background: transparent;\n}\n.line.dashed.horizontal {\n    border-top: 1px dashed #4af;\n    border-top-color: #4af;\n    border-top-color: var(--moveable-color);\n}\n.line.dashed.vertical {\n    border-left: 1px dashed #4af;\n    border-left-color: #4af;\n    border-left-color: var(--moveable-color);\n}\n.line.vertical {\n    transform: translateX(-50%);\n}\n.line.horizontal {\n    transform: translateY(-50%);\n}\n.line.vertical.bold {\n    width: 2px;\n}\n.line.horizontal.bold {\n    height: 2px;\n}\n\n.control.origin {\n\tborder-color: #f55;\n\tbackground: #fff;\n\twidth: 12px;\n\theight: 12px;\n\tmargin-top: -6px;\n    margin-left: -6px;\n\tpointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"] {\n\t${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n.group {\n    z-index: -1;\n}\n.area {\n    position: absolute;\n}\n.area-pieces {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n}\n.area.avoid, .area.pass {\n    pointer-events: none;\n}\n.area.avoid+.area-pieces {\n    display: block;\n}\n.area-piece {\n    position: absolute;\n}\n\n${IS_WEBKIT605 ? `:global svg *:before {\n\tcontent:\"\";\n\ttransform-origin: inherit;\n}` : \"\"}\n`;\nexport const DRAGGER_EVENTS = [\"dragstart\", \"drag\", \"dragend\", \"pinchstart\", \"pinch\", \"pinchend\"];\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const FLOAT_POINT_NUM = 0.0001;\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\nexport const DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    s: [2, 3],\n    w: [2, 0],\n    e: [1, 3],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\n    \"isMoveableElement\",\n    \"updateRect\",\n    \"updateTarget\",\n    \"destroy\",\n    \"dragStart\",\n    \"isInside\",\n    \"hitTest\",\n    \"setState\",\n    \"getRect\",\n    \"request\",\n    \"isDragging\",\n    \"getManager\",\n    \"forceUpdate\",\n];\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\nimport { convertDragDist } from \"../utils\";\n\nexport function setCustomDrag(\n    e: any,\n    state: MoveableManagerState<any>,\n    delta: number[],\n    isPinch: boolean,\n    isConvert: boolean,\n) {\n\n    const result = state.gesto!.move(delta, e.inputEvent);\n    const datas = result.originalDatas || result.datas;\n    const draggableDatas = datas.draggable || (datas.draggable = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: draggableDatas,\n        originalDatas: e.originalDatas,\n    };\n}\n\nexport default class CustomGesto {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n\n    public dragStart(client: number[], e: any) {\n        this.isDrag = false;\n        this.isFlag = false;\n        const originalDatas = e.originalDatas;\n\n        this.datas = originalDatas;\n        if (!originalDatas.draggable) {\n            originalDatas.draggable = {};\n        }\n        return {\n            ...this.move(client, e.inputEvent),\n            type: \"dragstart\",\n        };\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n\n            if (delta[0] || delta[1]) {\n                this.isDrag = true;\n            }\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            type: \"drag\",\n            clientX,\n            clientY,\n            inputEvent,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas.draggable,\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentGesto: this,\n        };\n    }\n}\n","import { Able, MoveableGroupInterface, MoveableManagerInterface } from \"./types\";\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\n\nexport function fillChildEvents(\n    moveable: MoveableGroupInterface<any, any>,\n    name: string,\n    e: any,\n): any[] {\n    const datas = e.originalDatas;\n\n    datas.groupable = datas.groupable || {};\n\n    const groupableDatas = datas.groupable;\n\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\n\n    const childDatas = groupableDatas.childDatas;\n\n    return moveable.moveables.map((_, i) => {\n        childDatas[i] = childDatas[i] || {};\n        childDatas[i][name] = childDatas[i][name] || {};\n\n        return {\n            ...e,\n            datas: childDatas[i][name],\n            originalDatas: childDatas[i],\n        };\n    });\n}\nexport function triggerChildGesto(\n    moveable: MoveableGroupInterface<any, any>,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const events = fillChildEvents(moveable, able.name, e);\n\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        const state = childMoveable.state;\n        let childEvent: any = ev;\n\n        if (isStart) {\n            childEvent = new CustomGesto().dragStart(delta, ev);\n        } else {\n            if (!state.gesto) {\n                state.gesto = datas.childGestos[i];\n            }\n            if (!state.gesto) {\n                return;\n            }\n            childEvent = setCustomDrag(ev, state, delta, isPinch, isConvert);\n        }\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            state.gesto = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childGestos = moveables.map(child => child.state.gesto);\n    }\n    return childs;\n}\nexport function triggerChildAbles<T extends Able>(\n    moveable: MoveableGroupInterface<any, any>,\n    able: T,\n    type: keyof T & string,\n    e: any,\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\n) {\n    const isEnd = !!type.match(/End$/g);\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent = ev;\n\n        childEvent = eachEvent(childMoveable, ev);\n\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        result && callback && callback(childMoveable, ev, result, i);\n\n        if (isEnd) {\n            childMoveable.state.gesto = null;\n        }\n        return result;\n    });\n\n    return childs;\n}\n","import { prefix, getControlTransform, getLineStyle } from \"./utils\";\nimport { Renderer, MoveableManagerInterface, RenderDirections } from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS } from \"./consts\";\nimport { IObject, throttle, getRad } from \"@daybrush/utils\";\n\nexport function renderDirectionControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    defaultDirections: string[],\n    React: Renderer,\n    additionalClassName: string = \"\",\n): any[] {\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.state;\n    const {\n        renderDirections: directions = defaultDirections,\n        zoom,\n    } = moveable.props;\n\n    const directionMap: IObject<boolean> = {};\n\n    if (!directions) {\n        return [];\n    }\n    const sign = (direction > 0 ? 1 : -1);\n    const renderDirections = directions === true ? DIRECTIONS : directions;\n    const degRotation = rotationRad / Math.PI * 180;\n\n    renderDirections.forEach(dir => {\n        directionMap[dir] = true;\n    });\n    return renderDirections.map(dir => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes || !directionMap[dir]) {\n            return null;\n        }\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        return (\n            <div className={prefix(\"control\", \"direction\", dir, additionalClassName)}\n                data-rotation={directionRotation} data-direction={dir} key={`direction-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\nexport function renderLine(\n    React: Renderer, direction: string,\n    pos1: number[], pos2: number[],\n    zoom: number,\n    key: number | string, ...classNames: string[]) {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line${key}`} className={prefix(\"line\", \"direction\", direction, ...classNames)}\n        data-rotation={rotation}\n        data-line-index={key}\n        data-direction={direction} style={getLineStyle(pos1, pos2, zoom, rad)}></div>;\n}\nexport function renderAllDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n) {\n    return renderDirectionControls(moveable, DIRECTIONS, React);\n}\nexport function renderDiagonalDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n): any[] {\n    return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], React);\n}\n","import {\n    prefix, triggerEvent, fillParams,\n    calculatePosition, fillEndParams, getRotationRad, getRefTargets, catchEvent,\n} from \"../utils\";\nimport {\n    IObject, hasClass, getRad,\n    throttle,\n} from \"@daybrush/utils\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps,\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\n    OnBeforeRotate,\n    OnDragStart,\n    OnBeforeRotateGroup,\n} from \"../types\";\nimport { triggerChildAbles } from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { minus, plus, rotate as rotateMatrix } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapRotate } from \"./Snappable\";\nimport {\n    fillTransformStartEvent,\n    convertTransformFormat, getRotateDist,\n    getOriginDirection,\n    getDirectionOffset,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    resolveTransformEvent,\n    getTransformDirection,\n} from \"../gesto/GestoUtils\";\nimport { renderDirectionControls } from \"../renderDirections\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number, origin: number[], rect: MoveableClientRect) {\n\n    const n = moveable.state.is3d ? 4 : 3;\n    const nextOrigin = calculatePosition(moveable.state.rootMatrix, origin, n);\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.defaultDeg = datas.prevDeg;\n    datas.prevSnapDeg = 0;\n    datas.loop = 0;\n}\n\nfunction getAbsoluteDist(\n    deg: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    const {\n        defaultDeg,\n        prevDeg,\n    } = datas;\n\n\n    let normalizedPrevDeg = prevDeg % 360;\n    let loop = Math.floor(prevDeg / 360);\n\n    if (normalizedPrevDeg < 0) {\n        normalizedPrevDeg += 360;\n    }\n\n    if (normalizedPrevDeg > deg && normalizedPrevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++loop;\n    } else if (normalizedPrevDeg < deg && normalizedPrevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --loop;\n    }\n    const dist = direction * (loop * 360 + deg - defaultDeg);\n\n    datas.prevDeg = defaultDeg + dist;\n\n    return dist;\n}\nfunction getAbsoluteDistByClient(\n    clientX: number, clientY: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    return getAbsoluteDist(\n\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        datas,\n    );\n}\nfunction getRotateInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    dist: number,\n    startValue: number,\n    isSnap?: boolean,\n) {\n    const {\n        throttleRotate = 0,\n    } = moveable.props;\n    let nextDist = dist;\n\n    const prevSnapDeg = datas.prevSnapDeg;\n\n\n\n    if (isSnap) {\n        nextDist = checkSnapRotate(moveable, moveableRect, datas.origin, nextDist);\n    }\n\n    const snapRotation = throttle(startValue + nextDist, throttleRotate);\n    const snapDeg = snapRotation - startValue;\n\n    datas.prevSnapDeg = snapDeg;\n\n    return [snapDeg - prevSnapDeg, nextDist, snapRotation];\n\n\n}\n\nexport function getReversePositionX(dir: string) {\n    if (dir === \"left\") {\n        return \"right\";\n    } else if (dir === \"right\") {\n        return \"left\";\n    }\n    return dir;\n}\nexport function getReversePositionY(dir: string) {\n    if (dir === \"top\") {\n        return \"bottom\";\n    } else if (dir === \"bottom\") {\n        return \"top\";\n    }\n    return dir;\n}\nexport function getRotationPositions(\n    rotationPosition: RotatableProps[\"rotationPosition\"],\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number,\n) {\n    if (rotationPosition === \"none\") {\n        return;\n    }\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\n    let radPoses = [pos1, pos2];\n\n    // if (scale[0] < 0) {\n    //     dir1 = getReversePositionX(dir1);\n    //     dir2 = getReversePositionX(dir2);\n    // }\n    // if (scale[1] < 0) {\n    //     dir1 = getReversePositionY(dir1);\n    //     dir2 = getReversePositionY(dir2);\n    // }\n    if (dir1 === \"left\") {\n        radPoses = [pos3, pos1];\n    } else if (dir1 === \"right\") {\n        radPoses = [pos2, pos4];\n    } else if (dir1 === \"bottom\") {\n        radPoses = [pos4, pos3];\n    }\n    let pos = [\n        (radPoses[0][0] + radPoses[1][0]) / 2,\n        (radPoses[0][1] + radPoses[1][1]) / 2,\n    ];\n    const rad = getRotationRad(radPoses, direction);\n    if (dir2) {\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\n    }\n    return [pos, rad] as const;\n}\n\nexport function dragControlCondition(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n    if (e.isRequest) {\n        return e.requestAble === \"rotatable\";\n    }\n    const target = e.inputEvent.target as HTMLElement;\n    if (hasClass(target, prefix(\"rotation-control\"))) {\n        return true;\n    }\n    const rotationTarget = moveable.props.rotationTarget;\n\n    if (rotationTarget) {\n        return getRefTargets(rotationTarget, true).some(element => {\n            if (!element) {\n                return false;\n            }\n            return target === element || target.contains(element);\n        });\n    }\n    return false;\n}\n\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: {\n        rotatable: Boolean,\n        rotationPosition: String,\n        throttleRotate: Number,\n        renderDirections: Object,\n        rotationTarget: Object,\n    } as const,\n    events: {\n        onRotateStart: \"rotateStart\",\n        onBeforeRotate: \"beforeRotate\",\n        onRotate: \"rotate\",\n        onRotateEnd: \"rotateEnd\",\n        onRotateGroupStart: \"rotateGroupStart\",\n        onBeforeRotateGroup: \"beforeRotateGroup\",\n        onRotateGroup: \"rotateGroup\",\n        onRotateGroupEnd: \"rotateGroupEnd\",\n    } as const,\n    css: [\n        `.rotation {\n            position: absolute;\n            height: 40px;\n            width: 1px;\n            transform-origin: 50% 100%;\n            height: calc(40px * var(--zoom));\n            top: auto;\n            left: 0;\n            bottom: 100%;\n            will-change: transform;\n        }\n        .rotation .rotation-line {\n            display: block;\n            width: 100%;\n            height: 100%;\n            transform-origin: 50% 50%;\n        }\n        .rotation .rotation-control {\n            border-color: #4af;\n            border-color: var(--moveable-color);\n            background:#fff;\n            cursor: alias;\n        }`,\n    ],\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n            zoom,\n            renderDirections,\n        } = moveable.props;\n        const {\n            renderPoses,\n            direction,\n        } = moveable.state;\n        if (!rotatable) {\n            return null;\n        }\n        const positions = getRotationPositions(rotationPosition!, renderPoses, direction);\n\n        const jsxs = [];\n\n        if (positions) {\n            const [pos, rad] = positions;\n            jsxs.push(\n                <div key=\"rotation\" className={prefix(\"rotation\")} style={{\n                    // tslint:disable-next-line: max-line-length\n                    transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rad}rad)`,\n                }}>\n                    <div className={prefix(\"line rotation-line\")} style={{\n                        transform: `scaleX(${zoom})`,\n                    }}></div>\n                    <div className={prefix(\"control rotation-control\")} style={{\n                        transform: `translate(0.5px) scale(${zoom})`,\n                    }}></div>\n                </div>\n            );\n        }\n        if (renderDirections) {\n            jsxs.push(...renderDirectionControls(moveable, [], React));\n        }\n\n\n        return jsxs;\n    },\n    dragControlCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const {\n            target, left, top, origin, beforeOrigin,\n            direction, beforeDirection, targetTransform,\n            moveableClientRect,\n        } = moveable.state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n        datas.fixedPosition = getDirectionOffset(moveable, getOriginDirection(moveable));\n\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                defaultDeg: externalRotate,\n                prevSnapDeg: 0,\n            };\n            datas.afterInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n            };\n            datas.absoluteInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n                startValue: externalRotate,\n            };\n        } else {\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n            datas.absoluteInfo = {\n                origin: rect.origin,\n                startValue: rect.rotation,\n            };\n\n            setRotateStartInfo(moveable, datas.beforeInfo, clientX, clientY, beforeOrigin, moveableClientRect);\n            setRotateStartInfo(moveable, datas.afterInfo, clientX, clientY, origin, moveableClientRect);\n            setRotateStartInfo(moveable, datas.absoluteInfo, clientX, clientY, origin, moveableClientRect);\n        }\n\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startValue = 0;\n        datas.datas = {};\n\n        setDefaultTransformIndex(e, \"rotate\");\n\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startValue = rotatation * Math.PI / 180;\n            },\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart | false,\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n        };\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, clientX, clientY, parentRotate, parentFlag, isPinch, groupDelta } = e;\n        const {\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            absoluteInfo,\n            isRotate,\n            startValue,\n            rect,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n\n        resolveTransformEvent(e, \"rotate\");\n\n        const targetDirection = getTransformDirection(e);\n        const direction = beforeDirection * targetDirection;\n        const {\n            parentMoveable,\n        } = moveable.props;\n\n\n        let beforeDelta = 0;\n        let beforeDist: number;\n        let beforeRotation: number;\n\n        let delta = 0;\n        let dist: number;\n        let rotation: number;\n\n        let absoluteDelta = 0;\n        let absoluteDist: number;\n        let absoluteRotation: number;\n\n        const startRotation = 180 / Math.PI * startValue;\n        const absoluteStartRotation = absoluteInfo.startValue;\n        let isSnap = false;\n\n        if (!parentFlag && \"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            beforeDist = parentDist;\n            dist = parentDist;\n            absoluteDist = parentDist;\n\n        } else if (isPinch || parentFlag) {\n            beforeDist = getAbsoluteDist(parentRotate, beforeDirection, beforeInfo);\n            dist = getAbsoluteDist(parentRotate, direction, afterInfo);\n            absoluteDist = getAbsoluteDist(parentRotate, direction, absoluteInfo);\n        } else {\n            beforeDist = getAbsoluteDistByClient(clientX, clientY, beforeDirection, beforeInfo);\n            dist = getAbsoluteDistByClient(clientX, clientY, direction, afterInfo);\n            absoluteDist = getAbsoluteDistByClient(clientX, clientY, direction, absoluteInfo);\n            isSnap = true;\n        }\n        beforeRotation = startRotation + beforeDist;\n        rotation = startRotation + dist;\n        absoluteRotation = absoluteStartRotation + absoluteDist;\n\n\n        triggerEvent(moveable, \"onBeforeRotate\", fillParams<OnBeforeRotate>(moveable, e, {\n            beforeRotation,\n            rotation,\n            absoluteRotation,\n            setRotation(nextRotation: number) {\n                dist = nextRotation - startRotation;\n                beforeDist = dist;\n                absoluteDist = dist;\n            },\n        }, true));\n        [\n            beforeDelta,\n            beforeDist,\n            beforeRotation,\n        ] = getRotateInfo(moveable, rect, beforeInfo, beforeDist, startRotation, isSnap);\n\n        [\n            delta,\n            dist,\n            rotation,\n        ] = getRotateInfo(moveable, rect, afterInfo, dist, startRotation, isSnap);\n\n        [\n            absoluteDelta,\n            absoluteDist,\n            absoluteRotation,\n        ] = getRotateInfo(moveable, rect, absoluteInfo, absoluteDist, absoluteStartRotation, isSnap);\n\n        if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `rotate(${rotation}deg)`, `rotate(${dist}deg)`,\n        );\n\n        const inverseDist = getRotateDist(moveable, dist, datas.fixedPosition, datas);\n        const inverseDelta = minus(\n            plus(groupDelta || [0, 0], inverseDist),\n            datas.prevInverseDist || [0, 0],\n        );\n        datas.prevInverseDist = inverseDist;\n\n        datas.requestValue = null;\n\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate: rotation,\n            rotation,\n\n            beforeDist,\n            beforeDelta,\n            beforeRotate: beforeRotation,\n            beforeRotation,\n\n            absoluteDist,\n            absoluteDelta,\n            absoluteRotate: absoluteRotation,\n            absoluteRotation,\n\n            isPinch: !!isPinch,\n            // setValue(pos: number) {\n            //     datas.requestValue = pos;\n            // },\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlAfter(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const requestValue = e.datas.requestValue;\n\n        if (requestValue != null) {\n            // return this.dragControl(moveable, {...e, parentDist: });\n        }\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        datas.isRotate = false;\n\n        const params = fillEndParams<OnRotateEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRotateEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: dragControlCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(datas.beforeDirection * moveable.rotation);\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                ev.datas.groupClient = childClient;\n                return { ...ev, parentRotate: 0 };\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeRotate\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeRotateGroup\", fillParams<OnBeforeRotateGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const direction = datas.beforeDirection;\n        const parentRotate = params.beforeDist;\n        const deg = params.beforeDelta;\n        const rad = deg / 180 * Math.PI;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [prevX, prevY] = ev.datas.groupClient;\n                const [clientX, clientY] = rotateMatrix([prevX, prevY], rad * direction);\n                const delta = [clientX - prevX, clientY - prevY];\n\n                ev.datas.groupClient = [clientX, clientY];\n                return { ...ev, parentRotate, groupDelta: delta };\n            },\n        );\n        moveable.rotation = direction * params.beforeRotation;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            setGroupRotation(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n     *\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * requester.request({ rotate: 10 });\n     * requester.request({ rotate: 20 });\n     * requester.request({ rotate: 30 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\n        const datas = {};\n        let distRotate = 0;\n\n        const startRotation = moveable.getRotation();\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaRotate\" in e) {\n                    distRotate += e.deltaRotate;\n                } else if (\"rotate\" in e) {\n                    distRotate = e.rotate - startRotation;\n                }\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n","import { TINY_NUM } from \"@daybrush/utils\";\nimport { isObject, throttle } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { SnapElementRect } from \"src/react-moveable\";\nimport {\n    ElementGuidelineValue, MoveableClientRect, MoveableManagerInterface,\n    SnapDirectionPoses,\n    SnapDirections, SnapGuideline, SnappableProps,\n    SnappableState,\n} from \"../../types\";\nimport {\n    calculateInversePosition, calculatePosition,\n    getAbsolutePosesByState, getRect, getRefTarget,\n    roundSign,\n} from \"../../utils\";\nexport const VERTICAL_NAMES = [\"left\", \"right\", \"center\"] as const;\nexport const HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"] as const;\nexport const VERTICAL_NAMES_MAP = {\n    start: \"left\",\n    end: \"right\",\n    center: \"center\",\n} as const;\nexport const HORIZONTAL_NAMES_MAP = {\n    start: \"top\",\n    end: \"bottom\",\n    center: \"middle\",\n} as const;\n\n\nexport function hasGuidelines(\n    moveable: MoveableManagerInterface<any, any>,\n    ableName: string\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            innerBounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n            snapGridWidth,\n            snapGridHeight,\n        },\n        state: { guidelines, enableSnap },\n    } = moveable;\n\n    if (\n        !snappable ||\n        !enableSnap ||\n        (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        snapGridWidth ||\n        snapGridHeight ||\n        bounds ||\n        innerBounds ||\n        (guidelines && guidelines.length) ||\n        (verticalGuidelines && verticalGuidelines.length) ||\n        (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nexport function getSnapDirections(snapDirections: SnapDirections | boolean | undefined): SnapDirections {\n    if (snapDirections === false) {\n        return {};\n    } else if (snapDirections === true || !snapDirections) {\n        return { left: true, right: true, top: true, bottom: true };\n    }\n    return snapDirections;\n}\n\nexport function mapSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapDirections = getSnapDirections(snapDirections);\n    const nextSnapPoses: SnapDirectionPoses = {};\n\n    for (const name in nextSnapDirections) {\n        if (name in snapPoses && (nextSnapDirections as any)[name]) {\n            (nextSnapPoses as any)[name] = (snapPoses as any)[name];\n        }\n    }\n    return nextSnapPoses;\n}\nexport function splitSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\n    const horizontalNames = HORIZONTAL_NAMES.filter(name => name in nextSnapPoses);\n    const verticalNames = VERTICAL_NAMES.filter(name => name in nextSnapPoses);\n\n    return {\n        horizontal: horizontalNames.map(name => nextSnapPoses[name]!),\n        vertical: verticalNames.map(name => nextSnapPoses[name]!),\n    };\n}\nexport function getGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    targetRect: SnapDirectionPoses,\n    snapThreshold: number,\n) {\n    const elementRects = moveable.state.elementRects;\n    const gapGuidelines: SnapGuideline[] = [];\n    [\n        [\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP] as const,\n        [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP] as const,\n    ].forEach(([type, mainNames, sideNames]) => {\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetCenter = targetRect[mainNames.center]!;\n        const targetStart2 = targetRect[sideNames.start]!;\n        const targetEnd2 = targetRect[sideNames.end]!;\n\n        // element : moveable\n        function getDist(elementRect: SnapElementRect) {\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.end]! < targetStart + snapThreshold) {\n                return targetStart - rect[mainNames.end]!;\n            } else if (targetEnd - snapThreshold < rect[mainNames.start]!) {\n                return rect[mainNames.start]! - targetEnd;\n            } else {\n                return -1;\n            }\n        }\n        const nextElementRects = elementRects.filter(elementRect => {\n            const rect = elementRect.rect;\n\n            if (rect[sideNames.start]! > targetEnd2 || rect[sideNames.end]! < targetStart2) {\n                return false;\n            }\n\n            return getDist(elementRect) > 0;\n        }).sort((a, b) => {\n            return getDist(a) - getDist(b);\n        });\n\n        const groups: SnapElementRect[][] = [];\n\n        nextElementRects.forEach(snapRect1 => {\n            nextElementRects.forEach(snapRect2 => {\n                if (snapRect1 === snapRect2) {\n                    return;\n                }\n                const { rect: rect1 } = snapRect1;\n                const { rect: rect2 } = snapRect2;\n\n                const rect1Start = rect1[sideNames.start]!;\n                const rect1End = rect1[sideNames.end]!;\n                const rect2Start = rect2[sideNames.start]!;\n                const rect2End = rect2[sideNames.end]!;\n\n                if (rect1Start > rect2End || rect2Start > rect1End) {\n                    return;\n                }\n\n                groups.push([snapRect1, snapRect2]);\n            });\n        });\n\n        groups.forEach(([snapRect1, snapRect2]) => {\n            const { rect: rect1 } = snapRect1;\n            const { rect: rect2 } = snapRect2;\n\n            const rect1Start = rect1[mainNames.start]!;\n            const rect1End = rect1[mainNames.end]!;\n            const rect2Start = rect2[mainNames.start]!;\n            const rect2End = rect2[mainNames.end]!;\n            let gap = 0;\n            let pos = 0;\n            let isStart = false;\n            let isCenter = false;\n            let isEnd = false;\n\n            if (rect1End <= targetStart && targetEnd <= rect2Start) {\n                // (l)element1(r) : (l)target(r) : (l)element2(r)\n                isCenter = true;\n                gap = ((rect2Start - rect1End) - (targetEnd - targetStart)) / 2;\n                pos = rect1End + gap + (targetEnd - targetStart) / 2;\n\n                if (Math.abs(pos - targetCenter) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\n                // (l)element1(r) : (l)element2(r) : (l)target\n                isStart = true;\n\n                gap = rect2Start - rect1End;\n                pos = rect2End + gap;\n\n                if (Math.abs(pos - targetStart) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\n                // target(r) : (l)element1(r) : (l)element2(r)\n\n                isEnd = true;\n                gap = rect2Start - rect1End;\n                pos = rect1Start - gap;\n\n                if (Math.abs(pos - targetEnd) > snapThreshold) {\n                    return;\n                }\n            } else {\n                return;\n            }\n            if (!gap) {\n                return;\n            }\n            gapGuidelines.push({\n                type,\n                pos: type === \"vertical\" ? [pos, 0] : [0, pos],\n                element: snapRect2.element,\n                size: 0,\n                className: snapRect2.className,\n                isStart,\n                isCenter,\n                isEnd,\n                gap,\n                hide: true,\n                gapRects: [snapRect1, snapRect2],\n            });\n        });\n    });\n    return gapGuidelines;\n}\nexport function getDefaultGuidelines(\n    horizontalGuidelines: number[] | false,\n    verticalGuidelines: number[] | false,\n    width: number,\n    height: number,\n    clientLeft = 0,\n    clientTop = 0,\n    snapOffset = { left: 0, top: 0, right: 0, bottom: 0 },\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n    const {\n        left: snapOffsetLeft,\n        top: snapOffsetTop,\n        bottom: snapOffsetBottom,\n        right: snapOffsetRight,\n    } = snapOffset;\n    const snapWidth = width! + snapOffsetRight - snapOffsetLeft;\n    const snapHeight = height! + snapOffsetBottom - snapOffsetTop;\n\n    horizontalGuidelines && horizontalGuidelines!.forEach(pos => {\n        guidelines.push({\n            type: \"horizontal\", pos: [\n                snapOffsetLeft,\n                throttle(pos - clientTop + snapOffsetTop, 0.1),\n            ], size: snapWidth,\n        });\n    });\n    verticalGuidelines && verticalGuidelines!.forEach(pos => {\n        guidelines.push({\n            type: \"vertical\", pos: [\n                throttle(pos - clientLeft + snapOffsetLeft, 0.1),\n                snapOffsetTop,\n            ], size: snapHeight,\n        });\n    });\n    return guidelines;\n}\n\n\nexport function calculateContainerPos(\n    rootMatrix: number[],\n    containerRect: MoveableClientRect,\n    n: number,\n) {\n    const clientPos = calculatePosition(\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\n\n    return [\n        containerRect.left + clientPos[0],\n        containerRect.top + clientPos[1],\n    ];\n}\n\nexport function getSnapElementRects(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    values: ElementGuidelineValue[],\n): SnapElementRect[] {\n    if (!values.length) {\n        return [];\n    }\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const [containerLeft, containerTop] = calculateContainerPos(rootMatrix, containerClientRect, n);\n    const poses = getAbsolutePosesByState(state);\n    const {\n        minX: targetLeft,\n        minY: targetTop,\n    } = getMinMaxs(poses);\n    const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\n        clientLeft - containerLeft,\n        clientTop - containerTop,\n    ], n)).map(pos => roundSign(pos));\n\n    return values.map(value => {\n        const rect = value.element.getBoundingClientRect();\n        const left = rect.left - containerLeft;\n        const top = rect.top - containerTop;\n        const bottom = top + rect.height;\n        const right = left + rect.width;\n        const [elementLeft, elementTop] = calculateInversePosition(rootMatrix, [left, top], n);\n        const [elementRight, elementBottom] = calculateInversePosition(rootMatrix, [right, bottom], n);\n\n        return {\n            ...value,\n            rect: {\n                left: elementLeft + distLeft,\n                right: elementRight + distLeft,\n                top: elementTop + distTop,\n                bottom: elementBottom + distTop,\n                center: (elementLeft + elementRight) / 2 + distLeft,\n                middle: (elementTop + elementBottom) / 2 + distTop,\n            },\n        };\n    });\n}\n\nexport function getElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n\n    const {\n        elementGuidelines = [],\n    } = moveable.props;\n\n    if (!elementGuidelines.length) {\n        state.elementRects = [];\n        return [];\n    }\n\n    const prevValues = (state.elementRects || []).filter(snapRect => !snapRect.refresh);\n    const nextElementGuidelines = elementGuidelines.map(el => {\n        if (isObject(el) && \"element\" in el) {\n            return el;\n        }\n        return {\n            element: getRefTarget(el, true)!,\n        };\n    }).filter(value => {\n        return value.element;\n    }) as ElementGuidelineValue[];\n\n    const {\n        maintained,\n        added,\n    } = diff(prevValues.map(v => v.element), nextElementGuidelines.map(v => v.element));\n\n\n    const nextValues: SnapElementRect[] = [];\n    maintained.forEach(([prevIndex, nextIndex]) => {\n        nextValues[nextIndex] = prevValues[prevIndex];\n    });\n\n    getSnapElementRects(moveable, added.map(index => nextElementGuidelines[index])).map((rect, i) => {\n        nextValues[added[i]] = rect;\n    });\n\n\n    state.elementRects = nextValues;\n    const elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\n    const nextGuidelines: SnapGuideline[] = [];\n\n    nextValues.forEach(snapRect => {\n        const {\n            element,\n            top: topValue = elementSnapDirections.top,\n            left: leftValue = elementSnapDirections.left,\n            right: rightValue = elementSnapDirections.right,\n            bottom: bottomValue = elementSnapDirections.bottom,\n            center: centerValue = elementSnapDirections.center,\n            middle: middleValue = elementSnapDirections.middle,\n            className,\n            rect,\n        } = snapRect;\n        const {\n            horizontal,\n            vertical,\n        } = splitSnapDirectionPoses({\n            top: topValue,\n            right: rightValue,\n            left: leftValue,\n            bottom: bottomValue,\n            center: centerValue,\n            middle: middleValue,\n        }, rect);\n        const rectTop = rect.top!;\n        const rectLeft = rect.left!;\n        const width = rect.right! - rectLeft;\n        const height = rect.bottom! - rectTop;\n        const sizes = [width, height];\n\n        vertical.forEach(pos => {\n            nextGuidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(pos, 0.1),\n                    rectTop,\n                ], size: height,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n        horizontal.forEach(pos => {\n            nextGuidelines.push({\n                type: \"horizontal\", element, pos: [\n                    rectLeft,\n                    throttle(pos, 0.1),\n                ], size: width,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n    });\n\n    return nextGuidelines;\n}\n\nexport function getTotalGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const {\n        snapOffset,\n        containerClientRect: {\n            overflow,\n            scrollHeight: containerHeight,\n            scrollWidth: containerWidth,\n            clientHeight: containerClientHeight,\n            clientWidth: containerClientWidth,\n            clientLeft,\n            clientTop,\n        },\n    } = moveable.state;\n    const {\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n        snapGridWidth = 0,\n        snapGridHeight = 0,\n    } = moveable.props;\n    const elementGuidelines = getElementGuidelines(moveable);\n    const totalGuidelines: SnapGuideline[] = [...elementGuidelines];\n\n    if (snapGap) {\n        const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n\n        totalGuidelines.push(...getGapGuidelines(\n            moveable,\n            { top, left, bottom, right, center: (left + right) / 2, middle: (top + bottom) / 2 },\n            snapThreshold,\n        ));\n    }\n    totalGuidelines.push(...getGridGuidelines(\n        snapGridWidth,\n        snapGridHeight,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n    ));\n\n    totalGuidelines.push(...getDefaultGuidelines(\n        horizontalGuidelines || false,\n        verticalGuidelines || false,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n        snapOffset,\n    ));\n\n    return totalGuidelines;\n}\nexport function getGridGuidelines(\n    snapGridWidth: number,\n    snapGridHeight: number,\n    containerWidth: number,\n    containerHeight: number,\n    clientLeft = 0,\n    clientTop = 0,\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n\n    if (snapGridHeight) {\n        for (let pos = 0; pos <= containerHeight; pos += snapGridHeight) {\n            guidelines.push({\n                type: \"horizontal\",\n                pos: [0, throttle(pos - clientTop, 0.1)],\n                size: containerWidth!,\n                hide: true,\n            });\n        }\n    }\n    if (snapGridWidth) {\n        for (let pos = 0; pos <= containerWidth; pos += snapGridWidth) {\n            guidelines.push({\n                type: \"vertical\",\n                pos: [throttle(pos - clientLeft, 0.1), 0],\n                size: containerHeight!,\n                hide: true,\n            });\n        }\n    }\n    return guidelines;\n}\n\n\nexport function solveLineConstants([point1, point2]: number[][]): [number, number, number] {\n    let dx = point2[0] - point1[0];\n    let dy = point2[1] - point1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n\n    // b > 0\n    // ax + by + c = 0\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    if (!dx) {\n        // -x + 1 = 0\n        a = -1;\n        c = point1[0];\n    } else if (!dy) {\n        // y - 1 = 0\n        b = 1;\n        c = -point1[1];\n    } else {\n        // y = -a(x - x1) + y1\n        // ax + y + a * x1 - y1 = 0\n        a = -dy / dx;\n        b = 1;\n        c = a * point1[0] - point1[1];\n    }\n\n    return [a, b, c].map(v => throttle(v, TINY_NUM)) as [number, number, number];\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    SnapGuideline, ResizableProps, ScalableProps,\n    SnapOffsetInfo, MoveableManagerInterface, SnapDirectionPoses,\n} from \"../../types\";\nimport {\n    selectValue, getTinyDist,\n} from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@scena/matrix\";\nimport { splitSnapDirectionPoses } from \"./utils\";\n\n\n\nexport function checkMoveableSnapPoses(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    customSnapThreshold?: number,\n) {\n    const props = moveable.props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return checkSnapPoses(\n        moveable.state.guidelines,\n        posesX,\n        posesY,\n        snapThreshold,\n    );\n}\n\nexport function checkSnapPoses(\n    guidelines: SnapGuideline[],\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n) {\n    return {\n        vertical: checkSnap(guidelines, \"vertical\", posesX, snapThreshold),\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapThreshold),\n    };\n}\nexport function checkSnapKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): { vertical: SnapOffsetInfo, horizontal: SnapOffsetInfo } {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    let [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    dx = getTinyDist(dx);\n    dy = getTinyDist(dy);\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    rect: SnapDirectionPoses,\n    customSnapThreshold?: number,\n) {\n    const poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\n\n    return checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: SnapGuideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    snapThreshold: number,\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            index: -1,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type } = guideline;\n            if (\n                type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n\n        return {\n            pos: targetPos,\n            index,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    const isSnap = snapPosInfos.length > 0;\n    return {\n        isSnap,\n        index: isSnap ? snapPosInfos[0].index : -1,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n) {\n    let nextPoses: number[][] = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkMoveableSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), 1);\n}\n\nexport function checkSnapBoundPriority(\n    a: { isBound: boolean, isSnap: boolean, offset: number },\n    b: { isBound: boolean, isSnap: boolean, offset: number },\n) {\n    const aDist = Math.abs(a.offset);\n    const bDist = Math.abs(b.offset);\n\n    if (a.isBound && b.isBound) {\n        return bDist - aDist;\n    } else if (a.isBound) {\n        return -1;\n    } else if (b.isBound) {\n        return 1;\n    } else if (a.isSnap && b.isSnap) {\n        return bDist - aDist;\n    } else if (a.isSnap) {\n        return -1;\n    } else if (b.isSnap) {\n        return 1;\n    } else if (aDist < TINY_NUM) {\n        return 1;\n    } else if (bDist < TINY_NUM) {\n        return -1;\n    }\n    return aDist - bDist;\n}\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        }\n        return checkSnapBoundPriority(\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\n        );\n    })[0];\n}\n\n\nexport function getCheckSnapDirections(\n    direction: number[],\n    fixedDirection: number[],\n    keepRatio: boolean\n) {\n    const directions: number[][][] = [];\n    // const fixedDirection = [-direction[0], -direction[1]];\n\n    if (keepRatio) {\n        if (Math.abs(fixedDirection[0]) !== 1 || Math.abs(fixedDirection[1]) !== 1) {\n            directions.push(\n                [fixedDirection, [-1, -1]],\n                [fixedDirection, [-1, 1]],\n                [fixedDirection, [1, -1]],\n                [fixedDirection, [1, 1]],\n            );\n        } else {\n            directions.push(\n                [fixedDirection, [direction[0], -direction[1]]],\n                [fixedDirection, [-direction[0], direction[1]]],\n            );\n        }\n        directions.push([fixedDirection, direction]);\n    } else {\n        if ((direction[0] && direction[1]) || (!direction[0] && !direction[1])) {\n            const endDirection = direction[0] ? direction : [1, 1];\n\n            [1, -1].forEach(signX => {\n                [1, -1].forEach(signY => {\n                    const nextDirection = [signX * endDirection[0], signY * endDirection[1]];\n\n                    if (\n                        fixedDirection[0] === nextDirection[0]\n                        && fixedDirection[1] === nextDirection[1]\n                    ) {\n                        return;\n                    }\n                    directions.push([fixedDirection, nextDirection]);\n                });\n            });\n        } else if (direction[0]) {\n            const signs = Math.abs(fixedDirection[0]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [fixedDirection[0], -1],\n                        [sign * direction[0], -1],\n                    ],\n                    [\n                        [fixedDirection[0], 0],\n                        [sign * direction[0], 0],\n                    ],\n                    [\n                        [fixedDirection[0], 1],\n                        [sign * direction[0], 1],\n                    ]\n                );\n            });\n        } else if (direction[1]) {\n            const signs = Math.abs(fixedDirection[1]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [-1, fixedDirection[1]],\n                        [-1, sign * direction[1]],\n                    ],\n                    [\n                        [0, fixedDirection[1]],\n                        [0, sign * direction[1]],\n                    ],\n                    [\n                        [1, fixedDirection[1]],\n                        [1, sign * direction[1]],\n                    ]\n                );\n            });\n        }\n    }\n    return directions;\n}\n","import { average, getRad, throttle } from \"@daybrush/utils\";\nimport { rotate } from \"@scena/matrix\";\nimport { maxOffset, getDistSize, getTinyDist, calculatePoses } from \"../../utils\";\n\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\nimport { solveLineConstants } from \"./utils\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average([line[0][0], line[1][0]]);\n    const cy = average([line[0][1], line[1][1]]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], centerSign: boolean, error: number = TINY_NUM) {\n    return dots.every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    { line, centerSign, verticalSign, horizontalSign, lineConstants }: InnerBoundLineInfo,\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    if (isSameStartLine([\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line, centerSign)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    // test vertical\n\n    const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, verticalSign);\n    const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, verticalSign);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, horizontalSign);\n    const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, horizontalSign);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    [a, b]: [number, number, number],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n    isRender?: boolean,\n) {\n    const dot1 = line[0];\n    // const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n\n    // const dy1 = getTinyDist(dot2[1] - dot1[1]);\n    // const dx1 = getTinyDist(dot2[0] - dot1[0]);\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n\n    const hasDx = b;\n    const hasDy = a;\n    const slope = - a / b;\n    // lineConstants\n    // ax + by + c = 0\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        // by + c = 0\n        if (isRender && !hasDy) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDx) {\n            // ax + by + c = 0\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n            const y = slope * (boundDot1[0] - dot1[0]) + dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        } else {\n            // ax + c = 0\n            const offset = boundDot1[0] - dot1[0];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    } else if (!dy2) {\n        // horizontal\n        if (isRender && !hasDx) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDy) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            // const a = dy1 / dx1;\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n            const x = (boundDot1[1] - dot1[1]) / slope + dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        } else {\n            const offset = boundDot1[1] - dot1[1];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    lineInfos: InnerBoundLineInfo[],\n    datas: any,\n) {\n    return lineInfos.map(info => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, info);\n\n        const multiple = info.multiple;\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false).map(info => {\n        return {\n            ...info,\n            multiple: info.multiple.map(dir => Math.abs(dir) * 2),\n        };\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport interface InnerBoundLineInfo {\n    line: number[][];\n    multiple: number[];\n    horizontalSign: boolean;\n    verticalSign: boolean;\n    centerSign: boolean;\n    lineConstants: [number, number, number];\n}\nexport function getCheckInnerBoundLineInfos(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n): InnerBoundLineInfo[] {\n    const {\n        allMatrix,\n        is3d,\n    } = moveable.state;\n    const virtualPoses = calculatePoses(allMatrix, 100, 100, is3d ? 4 : 3);\n    const center = getPosByDirection(virtualPoses, [0, 0]);\n\n    return getCheckSnapLineDirections(direction, keepRatio).map(([multiple, dir1, dir2]) => {\n        const virtualLine = [\n            getPosByDirection(virtualPoses, dir1),\n            getPosByDirection(virtualPoses, dir2),\n        ];\n        const lineConstants = solveLineConstants(virtualLine);\n        const {\n            vertical: verticalSign,\n            horizontal: horizontalSign,\n        } = isStartLine(center, virtualLine);\n        const centerSign = hitTestLine(center, virtualLine) <= 0;\n\n        return {\n            multiple,\n            centerSign,\n            verticalSign,\n            horizontalSign,\n            lineConstants,\n            line: [\n                getPosByDirection(poses, dir1),\n                getPosByDirection(poses, dir2),\n            ],\n        };\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some(line => {\n        const centerSign = hitTestLine(center, line) <= 0;\n\n        return !isSameStartLine(boundDots, line, centerSign);\n    });\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManagerInterface<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const lineInfos = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false);\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lineInfos.forEach(lineInfo => {\n        const { line, lineConstants } = lineInfo;\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, isVerticalStart, 1, true);\n        const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, isVerticalStart, 1, true);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, isHorizontalStart, 1, true);\n        const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, isHorizontalStart, 1, true);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import { getRad, throttle } from \"@daybrush/utils\";\nimport {\n    BoundInfo, SnappableProps, BoundType,\n    RotatableProps, MoveableManagerInterface, SnappableState,\n} from \"../../types\";\nimport { rotate, minus } from \"@scena/matrix\";\nimport { getDistSize } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    bounds: BoundType | false | undefined,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        position = \"client\",\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds || {};\n    const nextBounds = {\n        position,\n        left,\n        top,\n        right,\n        bottom,\n    };\n\n    return {\n        vertical: checkBounds(nextBounds, verticalPoses, true),\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\n    };\n}\nexport function getBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    externalBounds?: BoundType | false | null,\n) {\n    const {\n        containerClientRect: {\n            clientHeight: containerHeight,\n            clientWidth: containerWidth,\n            clientLeft,\n            clientTop,\n        },\n        snapOffset: {\n            left: snapOffsetLeft,\n            top: snapOffsetTop,\n            right: snapOffsetRight,\n            bottom: snapOffsetBottom,\n        },\n    } = moveable.state;\n    const bounds = externalBounds || moveable.props.bounds || {} as BoundType;\n    const position = bounds.position || \"client\";\n    const isCSS = position === \"css\";\n    const {\n        left = -Infinity,\n        top = -Infinity,\n    } = bounds;\n    let {\n        right = isCSS ? -Infinity : Infinity,\n        bottom = isCSS ? -Infinity : Infinity,\n    } = bounds;\n\n    if (isCSS) {\n        right = containerWidth! + snapOffsetRight - snapOffsetLeft - right;\n        bottom = containerHeight! + snapOffsetBottom - snapOffsetTop - bottom;\n    }\n\n    return {\n        left: left + snapOffsetLeft - clientLeft!,\n        right: right + snapOffsetLeft - clientLeft!,\n        top: top + snapOffsetTop - clientTop!,\n        bottom: bottom + snapOffsetTop - clientTop!,\n    };\n}\nexport function checkBoundKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const [endX, endY] = endPos;\n    let [dx, dy] = minus(endPos, startPos);\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        }\n        if (isBound) {\n            if (y < top || y > bottom) {\n                isBound = false;\n            }\n        }\n        if (!isBound) {\n            if (isBottom && bottom <= endY) {\n                y = bottom;\n                x = (y - b) / a;\n                isBound = true;\n            } else if (!isBottom &&  endY <= top) {\n                y = top;\n                x = (y - b) / a;\n                isBound = true;\n            }\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBounds(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo[] {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n    const boundInfos: BoundInfo[] = [];\n\n    if (startBoundPos + 1 > minPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        });\n    }\n    if (endBoundPos - 1 < maxPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        });\n    }\n\n    if (!boundInfos.length) {\n        boundInfos.push({\n            isBound: false,\n            offset: 0,\n            pos: 0,\n        });\n    }\n\n    return boundInfos.sort((a, b) => Math.abs(b.offset) - Math.abs(a.offset));\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, SnappableState>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    if (!moveable.props.bounds) {\n        return [];\n    }\n    const rad = rotation * Math.PI / 180;\n\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index]) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import { throttle } from \"@daybrush/utils\";\nimport {\n    RenderGuidelineInfo, Renderer, RenderGuidelineInnerInfo,\n    MoveableManagerInterface, SnappableProps, SnapGuideline,\n    SnappableRenderType, SnappableState,\n    SnapDirectionPoses,\n} from \"../../types\";\nimport { prefix, groupBy } from \"../../utils\";\nimport { HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP } from \"./utils\";\n\nexport function renderGuideline(info: RenderGuidelineInfo, React: Renderer): any {\n    const { direction, classNames, size, pos, zoom, key } = info;\n    const isHorizontal = direction === \"horizontal\";\n    const scaleType = isHorizontal ? \"Y\" : \"X\";\n    // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\n\n    return React.createElement(\"div\", {\n        key,\n        className: classNames.join(\" \"),\n        style: {\n            [isHorizontal ? \"width\" : \"height\"]: `${size}`,\n            transform: `translate(${pos[0]}, ${pos[1]}) translate${scaleType}(-50%) scale${scaleType}(${zoom})`,\n        },\n    });\n}\n\nexport function renderInnerGuideline(info: RenderGuidelineInnerInfo, React: Renderer): any {\n    return renderGuideline({\n        ...info,\n        classNames: [\n            prefix(\"line\", \"guideline\", info.direction),\n            ...info.classNames,\n        ].filter(className => className) as string[],\n        size: info.size || `${info.sizeValue}px`,\n        pos: info.pos || info.posValue.map(v => `${throttle(v, 0.1)}px`),\n    }, React);\n}\n\nexport function renderSnapPoses(\n    moveable: MoveableManagerInterface,\n    direction: string,\n    snapPoses: SnappableRenderType[],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    index: number,\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n    return snapPoses.map(({ type, pos }, i) => {\n        const renderPos = [0, 0];\n\n        renderPos[index] = minPos;\n        renderPos[index ? 0 : 1] = -targetPos + pos;\n\n        return renderInnerGuideline(\n            {\n                key: `${direction}TargetGuideline${i}`,\n                classNames: [prefix(\"target\", \"bold\", type)],\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n                direction: direction,\n            },\n            React\n        );\n    });\n}\nexport function renderGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer\n) {\n    const { zoom, isDisplayInnerSnapDigit } = moveable.props;\n\n    const mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[mainNames.start]!;\n    const targetEnd = targetRect[mainNames.end]!;\n    return guidelines.filter(({ hide, elementRect }) => {\n        if (hide) {\n            return false;\n        }\n        if (isDisplayInnerSnapDigit && elementRect) {\n            // inner\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.start]! <= targetStart && targetEnd <= rect[mainNames.end]!) {\n                return false;\n            }\n        }\n        return true;\n    }).map((guideline, i) => {\n        const { pos, size, element } = guideline;\n\n        const renderPos = [\n            -targetPos[0] + pos[0],\n            -targetPos[1] + pos[1],\n        ];\n\n        return renderInnerGuideline(\n            {\n                key: `${type}-default-guideline-${i}`,\n                classNames: element ? [prefix(\"bold\")] : [],\n                direction: type,\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n            },\n            React\n        );\n    });\n}\n\nexport function renderDigitLine(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    type: \"vertical\" | \"horizontal\",\n    lineType: \"dashed\" | \"gap\",\n    index: number,\n    gap: number,\n    renderPos: number[],\n    className: string | undefined,\n    React: Renderer,\n) {\n    const {\n        snapDigit = 0,\n        isDisplaySnapDigit = true,\n        snapDistFormat = (v: number, type: \"vertical\" | \"horizontal\") => {\n            // Type can be used render different values.\n            if (type === 'vertical') {\n                return v;\n            }\n            return v;\n        },\n        zoom,\n    } = moveable.props;\n    const scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\n    const sizeName = type === \"vertical\" ? \"height\" : \"width\";\n    const absGap = Math.abs(gap!);\n    const snapSize = isDisplaySnapDigit\n        ? parseFloat(absGap.toFixed(snapDigit))\n        : 0;\n    return <div\n        key={`${type}-${lineType}-guideline-${index}`}\n        className={prefix(\"guideline-group\", type)}\n        style={{\n            left: `${renderPos[0]}px`,\n            top: `${renderPos[1]}px`,\n            [sizeName]: `${absGap}px`,\n        }}\n    >\n        {renderInnerGuideline(\n            {\n                direction: type,\n                classNames: [prefix(lineType), className],\n                size: \"100%\",\n                posValue: [0, 0],\n                sizeValue: absGap,\n                zoom: zoom!,\n            },\n            React\n        )}\n        <div\n            className={prefix(\"size-value\", \"gap\")}\n            style={{\n                transform: `translate${scaleType}(-50%) scale(${zoom})`,\n            }}\n        >\n            {snapSize > 0 ? snapDistFormat(snapSize, type) : \"\"}\n        </div>\n    </div>;\n}\n\nexport function groupByElementGuidelines(\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetRect: SnapDirectionPoses,\n    isDisplayInnerSnapDigit: boolean,\n) {\n    const index = type === \"vertical\" ? 0 : 1;\n    const otherIndex = type === \"vertical\" ? 1 : 0;\n    const names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[names.start]!;\n    const targetEnd = targetRect[names.end]!;\n    return groupBy(guidelines, (guideline) => {\n        return guideline.pos[index];\n    }).map(nextGuidelines => {\n        const start: SnapGuideline[] = [];\n        const end: SnapGuideline[] = [];\n        const inner: SnapGuideline[] = [];\n\n        nextGuidelines.forEach(guideline => {\n            const element = guideline.element!;\n            const rect = guideline.elementRect!.rect;\n            if (rect[names.end]! < targetStart) {\n                start.push(guideline);\n            } else if (targetEnd < rect[names.start]!) {\n                end.push(guideline);\n            } else if (rect[names.start]! <= targetStart && targetEnd <= rect[names.end]! && isDisplayInnerSnapDigit) {\n                const pos = guideline.pos;\n                const elementRect1 = { element, rect: { ...rect, [names.end]: rect[names.start]! } };\n                const elementRect2 = { element, rect: { ...rect, [names.start]: rect[names.end]! } };\n                const nextPos1 = [0, 0];\n                const nextPos2 = [0, 0];\n                nextPos1[index] = pos[index];\n                nextPos1[otherIndex] = pos[otherIndex];\n\n                nextPos2[index] = pos[index];\n                nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\n\n\n                start.push({\n                    type,\n                    pos: nextPos1,\n                    size: 0,\n                    elementRect: elementRect1,\n                });\n                end.push({\n                    type,\n                    pos: nextPos2,\n                    size: 0,\n                    elementRect: elementRect2,\n                });\n                // inner.push(guideline);\n            }\n        });\n\n        start.sort((a, b) => {\n            return b.pos[otherIndex] - a.pos[otherIndex];\n        });\n        end.sort((a, b) => {\n            return a.pos[otherIndex] - b.pos[otherIndex];\n        });\n        return {\n            total: nextGuidelines,\n            start,\n            end,\n            inner,\n        };\n    });\n}\nexport function renderDashedGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer,\n) {\n    const {\n        isDisplayInnerSnapDigit,\n    } = moveable.props;\n    const rendered: any[] = [];\n\n    ([\"vertical\", \"horizontal\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type);\n        const index = type === \"vertical\" ? 1 : 0;\n        const otherIndex = index ? 0 : 1;\n\n        const groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit!);\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n\n        groups.forEach(({ total, start, end, inner }) => {\n            const sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start]!;\n\n            let prevRect = targetRect;\n\n            start.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = prevRect[mainNames.start]! - nextRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.start]! - targetStart - size;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            prevRect = targetRect;\n            end.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = nextRect[mainNames.start]! - prevRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.end]! - targetStart;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            inner.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n\n                const size1 = targetStart - nextRect[mainNames.start]!;\n                const size2 = nextRect[mainNames.end]! - targetEnd;\n                const renderPos1 = [0, 0];\n                const renderPos2 = [0, 0];\n\n                renderPos1[index] = targetPos[index] - size1;\n                renderPos1[otherIndex] = sidePos;\n\n                renderPos2[index] = targetPos[index] + targetEnd - targetStart;\n                renderPos2[otherIndex] = sidePos;\n\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size1,\n                    renderPos1,\n                    guideline.className,\n                    React\n                ));\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size2,\n                    renderPos2,\n                    guideline.className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\nexport function renderGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: any\n): any[] {\n    const rendered: any[] = [];\n    ([\"horizontal\", \"vertical\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type);\n        const index = type === \"vertical\" ? 0 : 1;\n        const otherIndex = index ? 0 : 1;\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetSideStart = targetRect[sideNames.start]!;\n        const targetSideEnd = targetRect[sideNames.end]!;\n\n\n        nextGuidelines.forEach(({ gap, gapRects, className }) => {\n            const sideStartPos = Math.max(\n                targetSideStart,\n                ...gapRects!.map(({ rect }) => rect[sideNames.start]!),\n            );\n            const sideEndPos = Math.min(\n                targetSideEnd,\n                ...gapRects!.map(({ rect }) => rect[sideNames.end]!),\n            );\n            const sideCenterPos = (sideStartPos + sideEndPos) / 2;\n\n            if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd)/ 2) {\n                return;\n            }\n            gapRects!.forEach(({ rect }) => {\n                const renderPos = [targetPos[0], targetPos[1]];\n\n                if (rect[mainNames.end]! < targetStart) {\n                    renderPos[index] += rect[mainNames.end]! - targetStart;\n                } else if (targetEnd < rect[mainNames.start]!) {\n                    renderPos[index] += rect[mainNames.start]! - targetStart - gap!;\n                } else {\n                    return;\n                }\n\n                renderPos[otherIndex] += sideCenterPos - targetSideStart;\n                rendered.push(renderDigitLine(\n                    moveable,\n                    index ? \"vertical\" : \"horizontal\",\n                    \"gap\",\n                    rendered.length,\n                    gap!,\n                    renderPos,\n                    className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\n","import { getDist, getRad, IObject, TINY_NUM } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { getAbsolutePoses, getDistSize, getRect, maxOffset } from \"../../utils\";\nimport { getDragDist, getPosByDirection } from \"../../gesto/GestoUtils\";\nimport {\n    BoundInfo, SnapInfo, MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapBoundInfo, SnapGuideline, BoundType, SnapOffsetInfo, DraggableProps,\n} from \"../../types\";\nimport { checkBoundKeepRatio, checkBoundPoses, getBounds } from \"./bounds\";\nimport { getInnerBoundDragInfo } from \"./innerBounds\";\nimport {\n    getNearestSnapGuidelineInfo, checkMoveableSnapPoses,\n    checkSnapPoses, checkSnapKeepRatio,\n} from \"./snap\";\nimport { hasGuidelines, getSnapDirections, splitSnapDirectionPoses } from \"./utils\";\n\ninterface DirectionSnapType<T> {\n    vertical: T;\n    horizontal: T;\n}\n\n\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>\n) {\n    const sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n\n    if (!sizeOffset) {\n        return {\n            isOutside: false,\n            offset: [0, 0],\n        };\n    }\n    const size = getDist(pos1, pos2);\n    const dist1 = getDist(sizeOffset, pos1);\n    const dist2 = getDist(sizeOffset, pos2);\n\n    const isOutside = dist1 > size || dist2 > size;\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return {\n        offset: [widthOffset, heightOffset],\n        isOutside,\n    };\n}\n\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\n\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[]\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses: number[][] = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalBound) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset]);\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalSnap) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset]);\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return (\n                    getDistSize(minus([distX, distY], a)) -\n                    getDistSize(minus([distX, distY], b))\n                );\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY =\n                    (distY * Math.abs(distX + offsetX)) / Math.abs(distX) -\n                    distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX =\n                    (distX * Math.abs(distY + offsetY)) / Math.abs(prevDistY) -\n                    distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (\n                    Math.abs(offsetX) > TINY_NUM &&\n                    Math.abs(offsetX) < Math.abs(verticalOffset)\n                ) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (\n                    Math.abs(offsetY) > TINY_NUM &&\n                    Math.abs(offsetY) < Math.abs(horizontalOffset)\n                ) {\n                    const scale =\n                        Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n        offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\n\nexport function checkSnapBoundsDrag(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n    const { left, right, top, bottom } = getRect(poses);\n    const boundPoses = {\n        horizontal: poses.map((pos) => pos[1]),\n        vertical: poses.map((pos) => pos[0]),\n    };\n    const snapDirections = getSnapDirections(moveable.props.snapDirections);\n    const snapPoses = splitSnapDirectionPoses(snapDirections, {\n        left,\n        right,\n        top,\n        bottom,\n        center: (left + right) / 2,\n        middle: (top + bottom) / 2,\n    });\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkMoveableSnapBounds(moveable, isRequest, snapPoses, boundPoses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound =\n        verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound =\n        horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(\n        verticalSnapBoundInfo.offset,\n        verticalInnerBoundInfo.offset\n    );\n    const horizontalOffset = maxOffset(\n        horizontalSnapBoundInfo.offset,\n        horizontalInnerBoundInfo.offset\n    );\n\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset]\n    );\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nexport function checkMoveableSnapBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRequest: boolean,\n    poses: { vertical: number[]; horizontal: number[]; },\n    boundPoses: { vertical: number[]; horizontal: number[]; } = poses,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable),\n        boundPoses.vertical,\n        boundPoses.horizontal,\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n    );\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function checkSnapBounds(\n    guideines: SnapGuideline[],\n    bounds: BoundType | undefined | false,\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(bounds, posesX, posesY);\n\n    // options.isRequest ? {\n    //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\n    //     vertical: { isSnap: false, index: -1 } as SnapInfo,\n    // } :\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = checkSnapPoses(guideines, posesX, posesY, snapThreshold);\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\n\n\nfunction checkSnapRightLine(\n    startPos: number[],\n    endPos: number[],\n    snapBoundInfo: { vertical: SnapBoundInfo; horizontal: SnapBoundInfo },\n    keepRatio: boolean\n) {\n    const rad = (getRad(startPos, endPos) / Math.PI) * 180;\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            dist: verticalDist,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            dist: horizontalDist,\n        },\n    } = snapBoundInfo;\n\n    const rad180 = rad % 180;\n    const isHorizontalLine = rad180 < 3 || rad180 > 177;\n    const isVerticalLine = rad180 > 87 && rad180 < 93;\n\n    if (horizontalDist < verticalDist) {\n        if (\n            isVerticalBound ||\n            (isVerticalSnap &&\n                !isVerticalLine &&\n                (!keepRatio || !isHorizontalLine))\n        ) {\n            return \"vertical\";\n        }\n    }\n    if (\n        isHorizontalBound ||\n        (isHorizontalSnap &&\n            !isHorizontalLine &&\n            (!keepRatio || !isVerticalLine))\n    ) {\n        return \"horizontal\";\n    }\n    return \"\";\n}\n\n\nexport function getSnapBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n        const snapBoundInfo = keepRatio\n            ? checkSnapBoundsKeepRatio(\n                moveable,\n                otherStartPos,\n                otherEndPos,\n                isRequest\n            )\n            : checkMoveableSnapBounds(moveable, isRequest, {\n                vertical: [otherEndPos[0]],\n                horizontal: [otherEndPos[1]],\n            });\n\n        const {\n            horizontal: {\n                // dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                // dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const snapLine = checkSnapRightLine(\n            otherStartPos,\n            otherEndPos,\n            snapBoundInfo,\n            keepRatio\n        );\n\n        if (!snapLine) {\n            return {\n                sign: multiple,\n                isBound: false,\n                isSnap: false,\n                offset: [0, 0],\n            };\n        }\n\n        const isVertical = snapLine === \"vertical\";\n        let sizeOffset = [0, 0];\n\n        if (\n            !keepRatio\n            && Math.abs(endDirection[0]) === 1\n            && Math.abs(endDirection[1]) === 1\n            && startDirection[0] !== endDirection[0]\n            && startDirection[1] !== endDirection[1]\n        ) {\n            sizeOffset = getDragDist({\n                datas,\n                distX: -otherVerticalOffset,\n                distY: -otherHorizontalOffset,\n            });\n        } else {\n            sizeOffset = solveNextOffset(\n                otherStartPos,\n                otherEndPos,\n                -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\n                isVertical,\n                datas,\n            ).offset;\n        }\n        sizeOffset = sizeOffset.map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\n\n\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\n\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n    isRequest: boolean\n): DirectionSnapType<SnapBoundInfo> {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(moveable, startPos, endPos);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? ({\n        horizontal: { isSnap: false },\n        vertical: { isSnap: false },\n    } as any) : checkSnapKeepRatio(moveable, startPos, endPos);\n\n    const horizontalOffset = getSnapBoundOffset(\n        horizontalBoundInfo,\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBoundOffset(\n        verticalBoundInfo,\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\n\nexport function checkMaxBounds(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    fixedPosition: number[],\n    datas: any\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const { width, height } = moveable.state;\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach((otherDirection) => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n            const deg = (getRad(fixedPosition, otherPos) * 360) / Math.PI;\n\n            if (isCheckHorizontal) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n                    nextOtherPos[1] = fixedPosition[1];\n                }\n                const {\n                    offset: [, heightOffset],\n                    isOutside: isHeightOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[1] < otherPos[1] ? bottom : top) -\n                    otherPos[1],\n                    false,\n                    datas\n                );\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + (isHeightOutside ? 1 : -1) * Math.abs(heightOffset);\n                }\n            }\n            if (isCheckVertical) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n                    nextOtherPos[0] = fixedPosition[0];\n                }\n                const {\n                    offset: [widthOffset],\n                    isOutside: isWidthOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[0] < otherPos[0] ? right : left) - otherPos[0],\n                    true,\n                    datas\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + (isWidthOutside ? 1 : -1) * Math.abs(widthOffset);\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\n","import {\n    Renderer,\n    SnappableProps,\n    SnappableState,\n    SnapGuideline,\n    SnapInfo,\n    ScalableProps,\n    SnapPosInfo,\n    RotatableProps,\n    RectInfo,\n    MoveableManagerInterface,\n    SnappableRenderType,\n    BoundType,\n    MoveableGroupInterface,\n} from \"../types\";\nimport {\n    prefix,\n    calculatePoses,\n    getRect,\n    getAbsolutePosesByState,\n    getAbsolutePoses,\n    directionCondition,\n    getClientRect,\n    getRefTarget,\n    getDragDistByState,\n    triggerEvent,\n} from \"../utils\";\nimport {\n    findIndex, hasClass, throttle,\n} from \"@daybrush/utils\";\nimport {\n    getDragDist,\n    scaleMatrix,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { minus, rotate, plus } from \"@scena/matrix\";\nimport { dragControlCondition as rotatableDragControlCondtion } from \"./Rotatable\";\nimport { FLOAT_POINT_NUM } from \"../consts\";\nimport {\n    getInnerBoundInfo,\n    getCheckInnerBoundLineInfos,\n    checkRotateInnerBounds,\n    checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport {\n    checkBoundPoses,\n    checkRotateBounds,\n    getBounds,\n} from \"./snappable/bounds\";\nimport {\n    checkSnaps,\n    getSnapInfosByDirection,\n    getNearOffsetInfo,\n    getCheckSnapDirections,\n} from \"./snappable/snap\";\nimport {\n    renderSnapPoses,\n    renderGuidelines,\n    renderDashedGuidelines,\n    renderGapGuidelines,\n} from \"./snappable/render\";\nimport {\n    getTotalGuidelines,\n    hasGuidelines,\n} from \"./snappable/utils\";\nimport {\n    checkMaxBounds,\n    checkMoveableSnapBounds,\n    getSnapBoundInfo,\n} from \"./snappable/snapBounds\";\n\n\nexport interface SnapPoses {\n    vertical: number[];\n    horizontal: number[];\n}\n\nexport function snapStart(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n) {\n    const state = moveable.state;\n\n    if (state.guidelines && state.guidelines.length) {\n        return;\n    }\n    const container = moveable.state.container;\n    const snapContainer = moveable.props.snapContainer || container!;\n\n    const containerClientRect = state.containerClientRect;\n    const snapOffset = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n    };\n\n    if (container !== snapContainer) {\n        const snapContainerTarget = getRefTarget(snapContainer, true);\n\n        if (snapContainerTarget) {\n            const snapContainerRect = getClientRect(snapContainerTarget);\n            const offset1 = getDragDistByState(state, [\n                snapContainerRect.left - containerClientRect.left,\n                snapContainerRect.top - containerClientRect.top,\n            ]);\n            const offset2 = getDragDistByState(state, [\n                snapContainerRect.right - containerClientRect.right,\n                snapContainerRect.bottom - containerClientRect.bottom,\n            ]);\n            snapOffset.left = throttle(offset1[0], 0.1);\n            snapOffset.top = throttle(offset1[1], 0.1);\n            snapOffset.right = throttle(offset2[0], 0.1);\n            snapOffset.bottom = throttle(offset2[1], 0.1);\n        }\n    }\n\n    state.snapOffset = snapOffset;\n    state.guidelines = getTotalGuidelines(moveable);\n    state.enableSnap = true;\n}\n\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPos: number[],\n    is3d: boolean\n) {\n    const nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextFixedPos = getPosByDirection(nextPoses, fixedDirection);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextFixedPos));\n}\n\nexport function normalized(value: number) {\n    return value ? value / Math.abs(value) : 0;\n}\n\n\nexport function getSizeOffsetInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    const { fixedDirection } = datas;\n    const directions = getCheckSnapDirections(direction, fixedDirection, keepRatio);\n    const innerBoundLineInfos = getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(\n            moveable,\n            poses,\n            directions,\n            keepRatio,\n            isRequest,\n            datas\n        ),\n        ...getInnerBoundInfo(\n            moveable,\n            innerBoundLineInfos,\n            datas\n        ),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: { offset: horizontalOffset },\n        vertical: { offset: verticalOffset },\n    } = checkMoveableSnapBounds(moveable, isRequest, {\n        vertical: [snapPos[0]],\n        horizontal: [snapPos[1]],\n    });\n\n    if (verticalOffset || horizontalOffset) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n        const nextWidth = Math.min(\n            maxWidth || Infinity,\n            width + direction[0] * nextWidthOffset\n        );\n        const nextHeight = Math.min(\n            maxHeight || Infinity,\n            height + direction[1] * nextHeightOffset\n        );\n\n        return [nextWidth - width, nextHeight - height];\n    }\n    return [0, 0];\n}\nexport function checkSizeDist(\n    moveable: MoveableManagerInterface<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            isRequest,\n            datas\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist =\n                Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist =\n                Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset =\n                isWidthBound && isHeightBound\n                    ? widthDist < heightDist\n                    : isHeightBound ||\n                    (!isWidthBound && widthDist < heightDist);\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = (width * nextHeightOffset) / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = (height * nextWidthOffset) / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (direction[0] && direction[1]) {\n        const { maxWidth, maxHeight } = checkMaxBounds(\n            moveable,\n            poses,\n            direction,\n            fixedPosition,\n            datas\n        );\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset).map(pos => pos.map(p => throttle(p, FLOAT_POINT_NUM))),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            isRequest,\n            datas\n        );\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [widthOffset, heightOffset];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    origin: number[],\n    rotation: number\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return rotation;\n    }\n\n    const { pos1, pos2, pos3, pos4 } = rect;\n    const rad = (rotation * Math.PI) / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map((pos) => minus(pos, origin));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation),\n        ...checkRotateInnerBounds(\n            moveable,\n            prevPoses,\n            nextPoses,\n            origin,\n            rotation\n        ),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n\n    if (result.length) {\n        return result[0];\n    } else {\n        return rotation;\n    }\n}\nexport function checkSnapResize(\n    moveable: MoveableManagerInterface<{}, {}>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const { fixedDirection } = datas;\n    const { allMatrix, is3d } = moveable.state;\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                allMatrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManagerInterface<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const { startOffsetWidth, startOffsetHeight, fixedPosition, fixedDirection, is3d } = datas;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(\n                    datas,\n                    plus(scale, [widthOffset / startOffsetWidth, heightOffset / startOffsetHeight]),\n                ),\n                startOffsetWidth,\n                startOffsetHeight,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        startOffsetWidth,\n        startOffsetHeight,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n    return [sizeDist[0] / startOffsetWidth, sizeDist[1] / startOffsetHeight];\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: any\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\n\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: SnapGuideline[] = [];\n\n    posInfos.forEach((posInfo) => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: SnappableRenderType[],\n    horizontalSnapPoses: SnappableRenderType[],\n    externalBounds?: BoundType | false | null\n) {\n    const {\n        vertical: verticalBoundInfos,\n        horizontal: horizontalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable, externalBounds),\n        verticalPoses,\n        horizontalPoses\n    );\n    verticalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            verticalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    horizontalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            horizontalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                verticalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        verticalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    horizontalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                horizontalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        horizontalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n}\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\nexport default {\n    name: \"snappable\",\n    dragRelation: \"strong\",\n    props: {\n        snappable: [Boolean, Array],\n        snapContainer: Object,\n\n        snapDirections: [Boolean, Object],\n        elementSnapDirections: [Boolean, Object],\n\n        snapGap: Boolean,\n        snapGridWidth: Number,\n        snapGridHeight: Number,\n        isDisplaySnapDigit: Boolean,\n        isDisplayInnerSnapDigit: Boolean,\n        snapDigit: Number,\n        snapThreshold: Number,\n\n        horizontalGuidelines: Array,\n        verticalGuidelines: Array,\n        elementGuidelines: Array,\n\n        bounds: Object,\n        innerBounds: Object,\n        snapDistFormat: Function,\n    } as const,\n    events: {\n        onSnap: \"snap\",\n    } as const,\n    css: [\n        `:host {\n    --bounds-color: #d66;\n}\n.guideline {\n    pointer-events: none;\n    z-index: 2;\n}\n.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}\n.guideline-group {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.guideline-group .size-value {\n    position: absolute;\n    color: #f55;\n    font-size: 12px;\n    font-weight: bold;\n}\n.guideline-group.horizontal .size-value {\n    transform-origin: 50% 100%;\n    transform: translateX(-50%);\n    left: 50%;\n    bottom: 5px;\n}\n.guideline-group.vertical .size-value {\n    transform-origin: 0% 50%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 5px;\n}\n.guideline.gap {\n    background: #f55;\n}\n.size-value.gap {\n    color: #f55;\n}\n`,\n    ],\n    render(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        React: Renderer\n    ): any[] {\n        const state = moveable.state;\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            snapRenderInfo,\n        } = state;\n\n        if (!snapRenderInfo || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n        state.guidelines = getTotalGuidelines(moveable);\n\n\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n        const externalPoses = snapRenderInfo.externalPoses || [];\n        const poses = getAbsolutePosesByState(moveable.state);\n        const verticalSnapPoses: SnappableRenderType[] = [];\n        const horizontalSnapPoses: SnappableRenderType[] = [];\n        const verticalGuidelines: SnapGuideline[] = [];\n        const horizontalGuidelines: SnapGuideline[] = [];\n        const snapInfos: Array<{\n            vertical: SnapInfo;\n            horizontal: SnapInfo;\n        }> = [];\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const targetRect = { left, right, top, bottom, center: (left + right) / 2, middle: (top + bottom) / 2 };\n        const hasExternalPoses = externalPoses.length > 0;\n        const externalRect = hasExternalPoses\n            ? getRect(externalPoses)\n            : ({} as ReturnType<typeof getRect>);\n\n        if (!snapRenderInfo.request) {\n            if (snapRenderInfo.direction) {\n                snapInfos.push(\n                    getSnapInfosByDirection(\n                        moveable,\n                        poses,\n                        snapRenderInfo.direction\n                    )\n                );\n            }\n            if (snapRenderInfo.snap) {\n                const rect = getRect(poses);\n                if (snapRenderInfo.center) {\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\n                    (rect as any).center = (rect.left + rect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, rect, 1));\n            }\n            if (hasExternalPoses) {\n                if (snapRenderInfo.center) {\n                    (externalRect as any).middle =\n                        (externalRect.top + externalRect.bottom) / 2;\n                    (externalRect as any).center =\n                        (externalRect.left + externalRect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, externalRect, 1));\n            }\n            snapInfos.forEach((snapInfo) => {\n                const {\n                    vertical: { posInfos: verticalPosInfos },\n                    horizontal: { posInfos: horizontalPosInfos },\n                } = snapInfo;\n                verticalSnapPoses.push(\n                    ...verticalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                horizontalSnapPoses.push(\n                    ...horizontalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n                horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\n            });\n        }\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses\n        );\n        if (hasExternalPoses) {\n            addBoundGuidelines(\n                moveable,\n                [externalRect.left, externalRect.right],\n                [externalRect.top, externalRect.bottom],\n                verticalSnapPoses,\n                horizontalSnapPoses,\n                snapRenderInfo.externalBounds\n            );\n        }\n        const allGuidelines = [...verticalGuidelines, ...horizontalGuidelines];\n        const elementGuidelines = allGuidelines.filter(guideline => guideline.element && !guideline.gapRects);\n        const gapGuidelines = allGuidelines.filter(guideline => guideline.gapRects);\n        triggerEvent(\n            moveable,\n            \"onSnap\",\n            {\n                guidelines: allGuidelines.filter(({ element }) => !element),\n                elements: elementGuidelines,\n                gaps: gapGuidelines,\n            },\n            true\n        );\n        return [\n            ...renderDashedGuidelines(\n                moveable,\n                elementGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                gapGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"horizontal\",\n                horizontalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"vertical\",\n                verticalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"horizontal\",\n                horizontalSnapPoses,\n                minLeft,\n                targetTop,\n                width,\n                0,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"vertical\",\n                verticalSnapPoses,\n                minTop,\n                targetLeft,\n                height,\n                1,\n                React\n            ),\n        ];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        e: any\n    ) {\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        snapStart(moveable);\n    },\n    drag(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        const state = moveable.state;\n        state.guidelines = getTotalGuidelines(moveable);\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragControlCondition(moveable: MoveableManagerInterface, e: any) {\n        if (directionCondition(moveable, e) || rotatableDragControlCondtion(moveable, e)) {\n            return true;\n        }\n        if (!e.isRequest && e.inputEvent) {\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n        }\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroup(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragGroupControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupControlEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n        state.elementRects = [];\n    },\n};\n\n\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n/**\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\n * @name Moveable.Snappable#snapContainer\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.querySelector(\".container\"));\n *\n * moveable.snapContainer = document.body;\n */\n/**\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#snapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapDirections: true,\n * });\n * // snap center\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * You can specify the snap directions of elements. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#elementSnapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   elementSnapDirections: true,\n * });\n * // snap center\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries.\n * @name Moveable.Snappable#bounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * You can set up inner boundaries.\n * @name Moveable.Snappable#innerBounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n\n/**\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridWidth\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridWidth = 5;\n */\n\n/**\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridHeight\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridHeight = 5;\n */\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * Whether to show element inner snap distance (default: false)\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplayInnerSnapDigit = true;\n */\n\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: (v, type) => v,\n * });\n * moveable.snapDistFormat = (v, type) => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n","import {\n    setDragStart, getBeforeDragDist, getTransformDist,\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent,\n    setDefaultTransformIndex, fillOriginalTransform,\n} from \"../gesto/GestoUtils\";\nimport {\n    triggerEvent, fillParams,\n    getDistSize, prefix,\n    fillEndParams, getComputedStyle,\n} from \"../utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { triggerChildGesto } from \"../groupUtils\";\nimport { startCheckSnapDrag } from \"./Snappable\";\nimport { IObject, getRad, throttle, throttleArray } from \"@daybrush/utils\";\nimport { checkSnapBoundsDrag } from \"./snappable/snapBounds\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\nexport default {\n    name: \"draggable\",\n    props: {\n        draggable: Boolean,\n        throttleDrag: Number,\n        throttleDragRotate: Number,\n        startDragRotate: Number,\n        edgeDraggable: Boolean,\n    } as const,\n    events: {\n        onDragStart: \"dragStart\",\n        onDrag: \"drag\",\n        onDragEnd: \"dragEnd\",\n        onDragGroupStart: \"dragGroupStart\",\n        onDragGroup: \"dragGroup\",\n        onDragGroupEnd: \"dragGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        React: Renderer,\n    ): any[] {\n        const { throttleDragRotate, zoom } = moveable.props;\n        const { dragInfo, beforeOrigin } = moveable.state;\n\n        if (!throttleDragRotate || !dragInfo) {\n            return [];\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return [];\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return [<div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        }} />];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentGesto } = e;\n        const state = moveable.state;\n        const {\n            target,\n            gesto,\n        } = state;\n\n        if (gesto) {\n            return false;\n        }\n        state.gesto = parentGesto || moveable.targetGesto;\n        const style = getComputedStyle(target!);\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.startValue = [0, 0];\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"translate\");\n        startCheckSnapDrag(moveable, datas);\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n        datas.deltaOffset = [0, 0];\n\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startValue = translate;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            state.gesto = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        if (!e) {\n            return;\n        }\n        resolveTransformEvent(e, \"translate\");\n\n        const { datas, parentEvent, parentFlag, isPinch, isRequest, deltaOffset } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, startValue } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n\n        if (deltaOffset) {\n            distX += deltaOffset[0];\n            distY += deltaOffset[1];\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let isSnap = false;\n        let dragRotateRad = 0;\n\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n            const startDragRotate = props.startDragRotate || 0;\n            const deg\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\n                - startDragRotate;\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n            const r = getDistSize([rx, ry]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag && (!throttleDragRotate || distX || distY)) {\n            const [verticalInfo, horizontalInfo] = checkSnapBoundsDrag(\n                moveable, distX, distY, throttleDragRotate, isRequest || deltaOffset, datas,\n            );\n            const {\n                isSnap: isVerticalSnap,\n                isBound: isVerticalBound,\n                offset: verticalOffset,\n            } = verticalInfo;\n            const {\n                isSnap: isHorizontalSnap,\n                isBound: isHorizontalBound,\n                offset: horizontalOffset,\n            } = horizontalInfo;\n            isSnap = isVerticalSnap || isHorizontalSnap || isVerticalBound || isHorizontalBound;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\n\n        if (!throttleDragRotate && !isSnap) {\n            throttleArray(translate, throttleDrag);\n            throttleArray(beforeTranslate, throttleDrag);\n        }\n\n        const beforeDist = minus(beforeTranslate, startValue);\n        const dist = minus(translate, startValue);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n\n        datas.passDelta = delta; //distX - (datas.passDistX || 0);\n        // datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDist = dist; //distX;\n        // datas.passDistY = distY;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = convertTransformFormat(datas,\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\n\n        fillOriginalTransform(e, nextTransform);\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            width,\n            height,\n            isPinch,\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragAfter(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            deltaOffset,\n        } = datas;\n\n        if (deltaOffset[0] || deltaOffset[1]) {\n            datas.deltaOffset = [0, 0];\n            return this.drag(moveable, {...e, deltaOffset });\n        }\n        return false;\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas } = e;\n\n        moveable.state.gesto = null;\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        const param = fillEndParams<OnDragEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\n        return param;\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildGesto(moveable, this, \"dragStart\", [\n            clientX || 0,\n            clientY || 0,\n        ], e, false);\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDelta } = e.datas;\n        const events = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false);\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        const events = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false);\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: any) {\n        moveable.state.dragInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n","\nimport {\n    invert, calculate, minus, plus,\n    convertPositionMatrix,\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\n} from \"@scena/matrix\";\nimport {\n    calculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\n    calculatePosition, calculateInversePosition, calculateMoveablePosition, convertTransformInfo,\n} from \"../utils\";\nimport { splitUnit, isArray, splitSpace, average, findIndex } from \"@daybrush/utils\";\nimport {\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag,\n} from \"../types\";\nimport Draggable from \"../ables/Draggable\";\nimport { setCustomDrag } from \"./CustomGesto\";\nimport { parse, parseMat } from \"css-to-mat\";\n\nexport function calculatePointerDist(moveable: MoveableManagerInterface, e: any) {\n    const { clientX, clientY, datas } = e;\n    const {\n        moveableClientRect,\n        rootMatrix,\n        is3d,\n        pos1,\n    } = moveable.state;\n    const { left, top } = moveableClientRect;\n    const n = is3d ? 4 : 3;\n    const [posX, posY] = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\n\n    return [distX, distY];\n}\n\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\n    const {\n        allMatrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = allMatrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(allMatrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function getTransformDirection(e: any) {\n    return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nexport function resolveTransformEvent(event: any, functionName: string) {\n    const {\n        datas,\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = event;\n\n    const index = datas.transformIndex;\n    const nextTransforms = originalDatas.nextTransforms;\n    const nextTransformAppendedIndexes = originalDatas.nextTransformAppendedIndexes;\n    let nextIndex = 0;\n\n    if (index === -1) {\n        nextIndex = nextTransforms.length;\n        datas.transformIndex = nextIndex;\n    } else {\n        nextIndex = index + nextTransformAppendedIndexes.filter((i: number) => i < index).length;\n    }\n\n    const result = convertTransformInfo(nextTransforms, nextIndex);\n    const targetFunction = result.targetFunction;\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\n    datas.afterFunctionTexts = result.afterFunctionTexts;\n    datas.beforeTransform = result.beforeFunctionMatrix;\n    datas.beforeTransform2 = result.beforeFunctionMatrix2;\n    datas.targetTansform = result.targetFunctionMatrix;\n    datas.afterTransform = result.afterFunctionMatrix;\n    datas.afterTransform2 = result.afterFunctionMatrix2;\n    datas.targetAllTransform = result.allFunctionMatrix;\n\n    if (targetFunction.functionName === matFunctionName) {\n        datas.afterFunctionTexts.splice(0, 1);\n        datas.isAppendTransform = false;\n    } else {\n        datas.isAppendTransform = true;\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, nextIndex];\n    }\n}\n\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\n}\nexport function getTransformDist({ datas, distX, distY }: any) {\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n\n    return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\n    const {\n        beforeTransform,\n        afterTransform,\n        beforeTransform2,\n        afterTransform2,\n        targetAllTransform,\n    } = datas;\n\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\n    const nextTargetMatrix\n        = isAfter\n            ? multiply(targetAllTransform, targetMatrix, 4)\n            : multiply(targetMatrix, targetAllTransform, 4);\n\n    // res1 = B-1 * nextTargetMatrix\n    const res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4);\n\n    // res3 = res2 * A-1\n    const afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n\n    return afterTargetMatrix;\n}\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\n    // TT = BT\n    const {\n        inverseBeforeMatrix,\n        is3d,\n        startDragBeforeDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n    return minus(\n        calculate(\n            inverseBeforeMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        startDragBeforeDist,\n    );\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\n\nexport function calculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    const nextPoses = getPosesByDirection(poses, direction);\n\n    return [\n        average(nextPoses.map(pos => pos[0])),\n        average(nextPoses.map(pos => pos[1])),\n    ];\n}\nexport function getPosByReverseDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos4)       [0, -1](pos3,pos4)       [1, -1](pos3)\n    [-1, 0](pos2, pos4)                           [1, 0](pos3, pos1)\n    [-1, 1](pos2)        [0, 1](pos1, pos2)       [1, 1](pos1)\n    */\n\n    return getPosByDirection(poses, direction.map(dir => -dir));\n}\n\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    fixedDirection: number[],\n) {\n    const poses = calculatePoses(matrix, width, height, n);\n    const fixedPos = getPosByDirection(poses, fixedDirection);\n    const distX = startPos[0] - fixedPos[0];\n    const distY = startPos[1] - fixedPos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function getNextTransformMatrix(\n    state: MoveableManagerState<any>,\n    datas: any,\n    transform: string,\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n    } = state;\n    const {\n        beforeTransform,\n        afterTransform,\n    } = datas;\n    const n = is3d ? 4 : 3;\n    const targetTransform = parseMat([transform]);\n\n    return getNextMatrix(\n        offsetMatrix,\n        convertDimension(multiply(multiply(beforeTransform, targetTransform as any, 4), afterTransform, 4), 4, n),\n        transformOrigin,\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\n\nexport function fillTransformStartEvent(e: any): OnTransformStartEvent {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    return {\n        setTransform: (transform: string | string[], index = -1) => {\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            setTransformIndex(e, index);\n        },\n        setTransformIndex: (index: number) => {\n            setTransformIndex(e, index);\n        },\n    };\n}\nexport function setDefaultTransformIndex(e: any, property: string) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    const startTransforms = originalDatas.startTransforms;\n\n    setTransformIndex(e, findIndex<string>(startTransforms, func => func.indexOf(`${property}(`) === 0));\n}\nexport function setTransformIndex(e: any, index: number) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    const datas = e.datas;\n\n    datas.transformIndex = index;\n    if (index === -1) {\n        return;\n    }\n    const transform = originalDatas.startTransforms[index];\n\n    if (!transform) {\n        return;\n    }\n    const info = parse([transform]);\n\n    datas.startValue = info[0].functionValue;\n}\nexport function fillOriginalTransform(\n    e: any,\n    transform: string,\n) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n\n    originalDatas.nextTransforms = splitSpace(transform);\n}\n\nexport function getNextTransformText(e: any) {\n    const {\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = e;\n\n    return originalDatas.nextTransforms.join(\" \");\n}\nexport function fillTransformEvent(\n    moveable: MoveableManagerInterface<DraggableProps>,\n    nextTransform: string,\n    delta: number[],\n    isPinch: boolean,\n    e: any,\n): OnTransformEvent {\n    fillOriginalTransform(e, nextTransform);\n    return {\n        transform: nextTransform,\n        drag: Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, delta, isPinch, false),\n        ) as OnDrag,\n    };\n}\nexport function getTranslateDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const state = moveable.state;\n    const {\n        left,\n        top,\n    } = state;\n\n    const groupable = moveable.props.groupable;\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n    const dist = minus(fixedPosition, nextFixedPosition);\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getScaleDist(\n    moveable: MoveableManagerInterface<any>,\n    scaleDist: number[],\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const dist = getTranslateDist(\n        moveable,\n        `scale(${scaleDist.join(\", \")})`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n\n    return dist;\n}\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\n    const {\n        width,\n        height,\n        transformOrigin,\n    } = moveable.state;\n    return [\n        -1 + transformOrigin[0] / (width / 2),\n        -1 + transformOrigin[1] / (height / 2),\n    ];\n}\nexport function getDirectionOffset(\n    moveable: MoveableManagerInterface, direction: number[],\n    nextMatrix: number[] = moveable.state.allMatrix,\n) {\n    const {\n        width,\n        height,\n        is3d,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n    const nextFixedOffset = [\n        width / 2 * (1 + direction[0]),\n        height / 2 * (1 + direction[1]),\n    ];\n    return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nexport function getRotateDist(\n    moveable: MoveableManagerInterface<any>,\n    rotateDist: number,\n    fixedPosition: number[],\n    datas: any,\n) {\n    const fixedDirection = getOriginDirection(moveable);\n\n    return getTranslateDist(\n        moveable,\n        `rotate(${rotateDist}deg)`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getResizeDist(\n    moveable: MoveableManagerInterface<any>,\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    transformOrigin: string[],\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const {\n        transformOrigin: prevOrigin,\n        targetMatrix,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = moveable.state;\n\n    const n = is3d ? 4 : 3;\n    const nextOrigin = calculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getAbsolutePosition(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\n","import { PREFIX, IS_WEBKIT605, TINY_NUM, IS_WEBKIT } from \"./consts\";\nimport { prefixNames, InvertObject } from \"framework-utils\";\nimport {\n    isUndefined, isObject, splitUnit,\n    IObject, hasClass, isArray, isString, getRad,\n    getShapeDirection, isFunction,\n} from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, calculate,\n    multiplies,\n    minus,\n    getOrigin,\n    createScaleMatrix,\n    plus,\n    ignoreDimension,\n    convertCSStoMatrix,\n    convertMatrixtoCSS,\n} from \"@scena/matrix\";\nimport {\n    MoveableManagerState, Able, MoveableClientRect,\n    MoveableProps, ArrayFormat, MoveableRefType,\n    MatrixInfo, ExcludeEndParams, ExcludeParams,\n} from \"./types\";\nimport { parse, toMat, calculateMatrixDist, parseMat } from \"css-to-mat\";\nimport { getDragDist } from \"./gesto/GestoUtils\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function defaultSync(fn: () => void) {\n    fn();\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    return parseMat(transform);\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    const transformOrigin = style.transformOrigin;\n\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getElementTransform(\n    target: HTMLElement | SVGElement,\n    computedStyle = getComputedStyle(target),\n) {\n    const computedTransform = computedStyle.transform;\n\n    if (computedTransform && computedTransform !== \"none\") {\n        return computedStyle.transform;\n    }\n    if (\"transform\" in target) {\n        const list = (target as any).transform as SVGAnimatedTransformList;\n        const baseVal = list.baseVal;\n\n        if (!baseVal) {\n            return \"\";\n        }\n        const length = baseVal.length;\n\n        if (!length) {\n            return \"\";\n        }\n\n        const matrixes: string[] = [];\n\n        for (let i = 0; i < length; ++i) {\n            const matrix = baseVal[i].matrix;\n\n            matrixes.push(`matrix(${([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"] as const).map(chr => matrix[chr]).join(\", \")})`);\n        }\n        return matrixes.join(\" \");\n\n    }\n    return \"\";\n}\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n) {\n    const body = document.body;\n    let target = !el || isParent ? el : el.parentElement;\n    let isEnd = el === lastParent || target === lastParent;\n    let position = \"relative\";\n\n    while (target && target !== body) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const style = getComputedStyle(target);\n        const tagName = target.tagName.toLowerCase();\n        const transform = getElementTransform(target as SVGElement, style);\n        position = style.position!;\n\n        if (tagName === \"svg\" || position !== \"static\" || (transform && transform !== \"none\")) {\n            break;\n        }\n        target = target.parentElement;\n        position = \"relative\";\n    }\n    return {\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === body,\n        offsetParent: target as HTMLElement || body,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    style: CSSStyleDeclaration,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    let targetOrigin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT605\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOrigin(style).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        hasOffset = true;\n\n        [\n            offsetLeft, offsetTop, origin[0], origin[1],\n        ] = getSVGGraphicsOffset(el as SVGGraphicsElement, origin);\n    } else {\n        origin = getTransformOrigin(style).map(pos => parseFloat(pos));\n        targetOrigin = origin.slice();\n    }\n    return {\n        tagName,\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft || 0, offsetTop || 0],\n        origin,\n        targetOrigin,\n    };\n}\nexport function getBodyOffset(\n    el: HTMLElement | SVGElement,\n    isSVG: boolean,\n    style: CSSStyleDeclaration = getComputedStyle(el),\n) {\n    const bodyStyle = getComputedStyle(document.body);\n    const bodyPosition = bodyStyle.position;\n    if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n        return [0, 0];\n    }\n\n    let marginLeft = parseInt(bodyStyle.marginLeft, 10);\n    let marginTop = parseInt(bodyStyle.marginTop, 10);\n\n    if (style.position === \"absolute\") {\n        if (style.top !== \"auto\" || style.bottom !== \"auto\") {\n            marginTop = 0;\n        }\n        if (style.left !== \"auto\" || style.right !== \"auto\") {\n            marginLeft = 0;\n        }\n    }\n\n    return [marginLeft, marginTop];\n}\nexport function convert3DMatrixes(matrixes: MatrixInfo[]) {\n    matrixes.forEach(info => {\n        const matrix = info.matrix;\n\n        if (matrix) {\n            info.matrix = convertDimension(matrix, 3, 4);\n        }\n    });\n}\n\nexport function getBodyScrollPos() {\n    return [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop,\n    ];\n}\n\nexport function getPositionFixedInfo(el: HTMLElement | SVGElement) {\n    let fixedContainer = el.parentElement;\n    let hasTransform = false;\n\n    while (fixedContainer) {\n        const transform = getComputedStyle(fixedContainer).transform;\n\n\n        if (transform && transform !== \"none\") {\n            hasTransform = true;\n            break;\n        }\n        if (fixedContainer === document.body) {\n            break;\n        }\n        fixedContainer = fixedContainer.parentElement;\n    }\n\n    return {\n        fixedContainer: fixedContainer || document.body,\n        hasTransform,\n    };\n}\n\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    checkContainer?: boolean,\n) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: MatrixInfo[] = [];\n    let requestEnd = !checkContainer && target === container || target === document.body;\n    let isEnd = requestEnd;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetTransformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    let hasFixed = false;\n    let offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n\n    while (el && !isEnd) {\n        isEnd = requestEnd;\n        const style: CSSStyleDeclaration = getComputedStyle(el);\n        const position = style.position;\n        const transform = getElementTransform(el, style);\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(transform));\n        const isFixed = position === \"fixed\";\n        let fixedInfo: {\n            hasTransform: boolean;\n            fixedContainer: HTMLElement | null;\n        } = {\n            hasTransform: false,\n            fixedContainer: null,\n        };\n        if (isFixed) {\n            hasFixed = true;\n            fixedInfo = getPositionFixedInfo(el);\n\n            offsetContainer = fixedInfo.fixedContainer!;\n        }\n\n        // convert 3 to 4\n        const length = matrix.length;\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n\n            convert3DMatrixes(matrixes);\n            if (targetMatrix) {\n                targetMatrix = convertDimension(targetMatrix, 3, 4);\n            }\n        }\n        if (is3d && length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            tagName,\n            hasOffset,\n            isSVG,\n            origin,\n            targetOrigin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, style);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n        if (tagName === \"svg\" && targetMatrix) {\n            // scale matrix for svg's SVGElements.\n            matrixes.push({\n                type: \"target\",\n                target: el,\n                matrix: getSVGMatrix(el as SVGSVGElement, n),\n            });\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createIdentityMatrix(n),\n            });\n        } else if (tagName === \"g\" && target !== el) {\n            offsetLeft = 0;\n            offsetTop = 0;\n        }\n\n        let offsetParent: HTMLElement;\n        let isOffsetEnd = false;\n        let isStatic = false;\n\n        if (isFixed) {\n            offsetParent = fixedInfo.fixedContainer!;\n            isOffsetEnd = true;\n        } else {\n            const offsetInfo = getOffsetInfo(el, container);\n\n            offsetParent = offsetInfo.offsetParent;\n            isOffsetEnd = offsetInfo.isEnd;\n            isStatic = offsetInfo.isStatic;\n        }\n\n        if (IS_WEBKIT && hasOffset && !isSVG && isStatic && (position === \"relative\" || position === \"static\")) {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            requestEnd = requestEnd || isOffsetEnd;\n        }\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n        let fixedClientLeft = 0;\n        let fixedClientTop = 0;\n\n        if (isFixed) {\n            if (hasOffset && fixedInfo.hasTransform) {\n                // border\n                fixedClientLeft = offsetParent.clientLeft;\n                fixedClientTop = offsetParent.clientTop;\n            }\n        } else {\n            if (hasOffset && offsetContainer !== offsetParent) {\n                // border\n                parentClientLeft = offsetParent.clientLeft;\n                parentClientTop = offsetParent.clientTop;\n            }\n            if (hasOffset && offsetParent === document.body) {\n                const margin = getBodyOffset(el, false, style);\n\n                offsetLeft += margin[0];\n                offsetTop += margin[1];\n            }\n        }\n\n        matrixes.push({\n            type: \"target\",\n            target: el,\n            matrix: getAbsoluteMatrix(matrix, n, origin),\n        });\n        if (hasOffset) {\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createOriginMatrix([\n                    offsetLeft - el.scrollLeft + parentClientLeft - fixedClientLeft,\n                    offsetTop - el.scrollTop + parentClientTop - fixedClientTop,\n                ], n),\n            });\n        } else {\n            // svg\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                origin,\n            });\n        }\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (!targetTransformOrigin) {\n            targetTransformOrigin = targetOrigin;\n        }\n\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            requestEnd = isOffsetEnd;\n        }\n        if (!checkContainer || el === document.body) {\n            isEnd = requestEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    if (!targetTransformOrigin) {\n        targetTransformOrigin = [0, 0];\n    }\n\n    return {\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        targetOrigin: targetTransformOrigin,\n        is3d,\n        hasFixed,\n    };\n}\nexport function calculateElementInfo(\n    target?: SVGElement | HTMLElement | null,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n) {\n    let width = 0;\n    let height = 0;\n    let rotation = 0;\n    let allResult: {} = {};\n\n    if (target) {\n        const {\n            offsetWidth,\n            offsetHeight,\n        } = getSize(target);\n\n        width = offsetWidth;\n        height = offsetHeight;\n    }\n\n    if (target) {\n        const result = calculateMatrixStack(\n            target,\n            container,\n            rootContainer,\n            isAbsolute3d,\n            // prevMatrix, prevRootMatrix, prevN,\n        );\n        const position = calculateMoveablePosition(\n            result.allMatrix,\n            result.transformOrigin,\n            width, height,\n        );\n        allResult = {\n            ...result,\n            ...position,\n        };\n        const rotationPosition = calculateMoveablePosition(\n            result.allMatrix, [50, 50], 100, 100,\n        );\n        rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n    }\n    const n = isAbsolute3d ? 4 : 3;\n    return {\n        width,\n        height,\n        rotation,\n        rootMatrix: createIdentityMatrix(n),\n        beforeMatrix: createIdentityMatrix(n),\n        offsetMatrix: createIdentityMatrix(n),\n        allMatrix: createIdentityMatrix(n),\n        targetMatrix: createIdentityMatrix(n),\n        targetTransform: \"\",\n        transformOrigin: [0, 0],\n        targetOrigin: [0, 0],\n        is3d: !!isAbsolute3d,\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        direction: 1,\n        hasFixed: false,\n        ...allResult,\n    };\n}\nexport function getElementInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n) {\n    return calculateElementInfo(target, container, rootContainer, true);\n}\nexport function calculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // prevMatrix?: number[],\n    // prevRootMatrix?: number[],\n    // prevN?: number,\n) {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        targetOrigin,\n        offsetContainer,\n        hasFixed,\n    } = getMatrixStackInfo(target, container); // prevMatrix\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n    } = getMatrixStackInfo(offsetContainer, rootContainer, true); // prevRootMatrix\n\n    // if (rootContainer === document.body) {\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\n    // }\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\n    const n = isNext3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    let targetMatrix = prevTargetMatrix;\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let allMatrix = createIdentityMatrix(n);\n    let rootMatrix = createIdentityMatrix(n);\n    let beforeMatrix = createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n\n    rootMatrixes.reverse();\n    matrixes.reverse();\n\n    if (!is3d && isNext3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n\n        convert3DMatrixes(matrixes);\n    }\n    if (!isRoot3d && isNext3d) {\n        convert3DMatrixes(rootMatrixes);\n    }\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    rootMatrixes.forEach(info => {\n        rootMatrix = multiply(rootMatrix, info.matrix!, n);\n    });\n    const originalRootContainer = rootContainer || document.body;\n    const endContainer = rootMatrixes[0]?.target\n        || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\n    const rootMatrixBeforeOffset = rootMatrixes.slice(1).reduce((matrix, info) => {\n        return multiply(matrix, info.matrix!, n);\n    }, createIdentityMatrix(n));\n    matrixes.forEach((info, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // calculate for SVGElement\n        if (!info.matrix) {\n            const nextInfo = matrixes[i + 1];\n            const offset = getSVGOffset(\n                info,\n                nextInfo,\n                endContainer,\n                n,\n                multiply(rootMatrixBeforeOffset, allMatrix, n),\n            );\n            info.matrix = createOriginMatrix(offset, n);\n        }\n        allMatrix = multiply(allMatrix, info.matrix!, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const targetTransform = makeMatrixCSS(\n        isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\n        isMatrix3d,\n    );\n\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n\n    return {\n        hasFixed,\n        rootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        targetTransform,\n        transformOrigin,\n        targetOrigin,\n        is3d: isNext3d,\n    };\n}\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n\n    if (!el) {\n        return { x: 0, y: 0, width: 0, height: 0, clientWidth, clientHeight };\n    }\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n        clientWidth,\n        clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n        clientWidth,\n        clientHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n * (n - 1)],\n        scaleMatrix[n * (n - 1) + 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n) {\n    if (!el.getBBox || el.tagName.toLowerCase() === \"g\") {\n        return [0, 0, 0, 0];\n    }\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function calculatePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function calculatePoses(matrix: number[], width: number, height: number, n: number) {\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => calculatePosition(matrix, pos, n));\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function calculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = calculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    offsetInfo: MatrixInfo,\n    targetInfo: MatrixInfo,\n    container: HTMLElement | SVGElement,\n    n: number,\n    beforeMatrix: number[],\n) {\n    const target = offsetInfo.target;\n    const origin = offsetInfo.origin!;\n    const targetMatrix = targetInfo.matrix!;\n    const {\n        offsetWidth: width,\n        offsetHeight: height,\n    } = getSize(target);\n    const containerClientRect = container.getBoundingClientRect();\n    let margin = [0, 0];\n\n    if (container === document.body) {\n        margin = getBodyOffset(target, true);\n    }\n\n    const rect = target.getBoundingClientRect();\n    const rectLeft\n        = rect.left - containerClientRect.left + container.scrollLeft\n        - (container.clientLeft || 0) + margin[0];\n    const rectTop\n        = rect.top - containerClientRect.top + container.scrollTop\n        - (container.clientTop || 0) + margin[1];\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        targetMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = calculateRect(mat, width, height, n);\n    const posOrigin = calculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            calculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            calculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            targetMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = calculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\nexport function calculateMoveablePosition(matrix: number[], origin: number[], width: number, height: number) {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const poses = calculatePoses(matrix, width, height, n);\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = poses;\n    let [originX, originY] = calculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const direction = getShapeDirection(poses);\n\n    return {\n        left,\n        top,\n        right,\n        bottom,\n        origin: [originX, originY],\n        pos1: [x1, y1],\n        pos2: [x2, y2],\n        pos3: [x3, y3],\n        pos4: [x4, y4],\n        direction,\n    };\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], zoom = 1, rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, zoom: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translateZ(0px) translate(${x}px, ${y}px) rotate(${rotation}rad) scale(${zoom})`,\n    };\n}\nexport function getCSSSize(target: SVGElement | HTMLElement) {\n    const style = getComputedStyle(target);\n\n    return [\n        parseFloat(style.width!),\n        parseFloat(style.height!),\n    ];\n}\n\ninterface ElementSizes {\n    svg: boolean;\n    offsetWidth: number;\n    offsetHeight: number;\n    clientWidth: number;\n    clientHeight: number;\n    cssWidth: number;\n    cssHeight: number;\n}\nexport function getSize(\n    target: SVGElement | HTMLElement,\n    style: CSSStyleDeclaration = getComputedStyle(target),\n): ElementSizes {\n    const hasOffset = !isUndefined((target as any).offsetWidth);\n\n    if (!hasOffset && target.tagName.toLowerCase() !== \"svg\") {\n        const bbox = (target as SVGGraphicsElement).getBBox();\n\n        const offsetWidth = bbox.width;\n        const offsetHeight = bbox.height;\n\n        return {\n            svg: true,\n            offsetWidth,\n            offsetHeight,\n            clientWidth: offsetWidth,\n            clientHeight: offsetHeight,\n            cssWidth: offsetWidth,\n            cssHeight: offsetHeight,\n        };\n    } else {\n        const boxSizing = style.boxSizing === \"border-box\";\n        const borderLeft = parseFloat(style.borderLeftWidth!) || 0;\n        const borderRight = parseFloat(style.borderRightWidth!) || 0;\n        const borderTop = parseFloat(style.borderTopWidth!) || 0;\n        const borderBottom = parseFloat(style.borderBottomWidth!) || 0;\n        const paddingLeft = parseFloat(style.paddingLeft!) || 0;\n        const paddingRight = parseFloat(style.paddingRight!) || 0;\n        const paddingTop = parseFloat(style.paddingTop!) || 0;\n        const paddingBottom = parseFloat(style.paddingBottom!) || 0;\n\n        let cssWidth = parseFloat(style.width);\n        let cssHeight = parseFloat(style.height);\n        let offsetWidth = cssWidth;\n        let offsetHeight = cssHeight;\n        let clientWidth = cssWidth;\n        let clientHeight = cssHeight;\n\n        const horizontalPadding = paddingLeft + paddingRight;\n        const verticalPadding = paddingTop + paddingBottom;\n        const horizontalBorder = borderLeft + borderRight;\n        const verticalBorder = borderTop + borderBottom;\n        const horizontalOffset = horizontalPadding + horizontalBorder;\n        const verticalOffset = verticalPadding + verticalBorder;\n\n        if (boxSizing) {\n            cssWidth = offsetWidth - horizontalOffset;\n            cssHeight = offsetHeight - verticalOffset;\n        } else {\n            offsetWidth = cssWidth + horizontalOffset;\n            offsetHeight = cssHeight + verticalOffset;\n        }\n        clientWidth = cssWidth + horizontalPadding;\n        clientHeight = cssHeight + verticalPadding;\n\n        return {\n            svg: false,\n            offsetWidth,\n            offsetHeight,\n            clientWidth,\n            clientHeight,\n            cssWidth,\n            cssHeight,\n        };\n    }\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\n\nexport function getTargetInfo(\n    moveableElement?: HTMLElement | null,\n    target?: HTMLElement | SVGElement | null,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    // state?: Partial<MoveableManagerState> | false | undefined,\n) {\n    let beforeDirection: 1 | -1 = 1;\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let moveableClientRect = resetClientRect();\n\n    const result = calculateElementInfo(\n        target, container!, rootContainer!, false,\n        // state,\n    );\n    if (target) {\n        const n = result.is3d ? 4 : 3;\n        const beforePosition = calculateMoveablePosition(\n            result.offsetMatrix,\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\n            result.width, result.height,\n        );\n        beforeDirection = beforePosition.direction;\n        beforeOrigin = plus(\n            beforePosition.origin,\n            [beforePosition.left - result.left, beforePosition.top - result.top],\n        );\n\n        targetClientRect = getClientRect(target);\n        containerClientRect = getClientRect(\n            getOffsetInfo(parentContainer, parentContainer, true).offsetParent || document.body,\n            true,\n        );\n        if (moveableElement) {\n            moveableClientRect = getClientRect(moveableElement);\n        }\n    }\n\n    return {\n        targetClientRect,\n        containerClientRect,\n        moveableClientRect,\n        beforeDirection,\n        beforeOrigin,\n        originalBeforeOrigin: beforeOrigin,\n        target,\n        ...result,\n    };\n}\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, right: 0,\n        top: 0, bottom: 0,\n        width: 0, height: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean) {\n    let left = 0;\n    let top = 0;\n    let width = 0;\n    let height = 0;\n\n    if (el === document.body || el === document.documentElement) {\n        width = window.innerWidth;\n        height = window.innerHeight;\n        const scrollPos = getBodyScrollPos();\n\n        [left, top] = [-scrollPos[0], -scrollPos[1]];\n    } else {\n        const clientRect = el.getBoundingClientRect();\n\n        left = clientRect.left;\n        top = clientRect.top;\n        width = clientRect.width;\n        height = clientRect.height;\n    }\n\n    const rect: MoveableClientRect = {\n        left,\n        right: left + width,\n        top,\n        bottom: top + height,\n        width,\n        height,\n    };\n\n    if (isExtends) {\n        rect.clientLeft = el.clientLeft;\n        rect.clientTop = el.clientTop;\n        rect.clientWidth = el.clientWidth;\n        rect.clientHeight = el.clientHeight;\n        rect.scrollWidth = el.scrollWidth;\n        rect.scrollHeight = el.scrollHeight;\n        rect.overflow = getComputedStyle(el).overflow !== \"visible\";\n    }\n    return rect;\n}\nexport function getDirection(target: SVGElement | HTMLElement) {\n    if (!target) {\n        return;\n    }\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\nexport function unset(self: any, name: string) {\n    self[name]?.unset();\n    self[name] = null;\n}\n\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeParams<T>,\n    isBeforeEvent?: boolean,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    const nextParams = {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        moveable,\n        datas: datas.datas,\n    } as any;\n\n    if (!datas.isStartEvent) {\n        datas.isStartEvent = true;\n    } else if (!isBeforeEvent) {\n        datas.lastEvent = nextParams;\n    }\n    return nextParams;\n}\nexport function fillEndParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeEndParams<T> & { isDrag?: boolean },\n): T {\n    const datas = e.datas;\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n\n    return {\n        isDrag,\n        ...params,\n        moveable,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        lastEvent: datas.lastEvent,\n        isDouble: e.isDouble,\n        datas: datas.datas,\n    } as any;\n}\nexport function catchEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    callback: (e: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>) => void,\n): any {\n    moveable._emitter.on(name, callback);\n}\n\nexport function triggerEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    params: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\n    isManager?: boolean,\n): any {\n    return moveable.triggerEvent(name, params, isManager);\n}\n\nexport function getComputedStyle(el: Element, pseudoElt?: string | null) {\n    return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function calculateInversePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(\n        invert(matrix, n),\n        convertPositionMatrix(pos, n),\n        n,\n    );\n}\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = calculateInversePosition(rootMatrix, [e.distX, e.distY], n);\n\n    return e;\n}\n\nexport function calculatePadding(\n    matrix: number[], pos: number[],\n    transformOrigin: number[], origin: number[], n: number,\n) {\n    return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\n\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\n}\n\nexport function getTinyDist(v: number) {\n    return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\n\nexport function directionCondition(moveable: any, e: any) {\n    if (e.isRequest) {\n        if (e.requestAble === \"resizable\" || e.requestAble === \"scalable\") {\n            return e.parentDirection!;\n        } else {\n            return false;\n        }\n    }\n    return hasClass(e.inputEvent.target, prefix(\"direction\"));\n}\n\nexport function invertObject<T extends IObject<any>>(obj: T): InvertObject<T> {\n    const nextObj: IObject<any> = {};\n\n    for (const name in obj) {\n        nextObj[obj[name]] = name;\n    }\n    return nextObj as any;\n}\n\nexport function convertTransformInfo(transforms: string[], index: number) {\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n    const beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n    const targetFunctionText = transforms[index] || \"\";\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n    const afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n\n    const beforeFunctions = parse(beforeFunctionTexts);\n    const beforeFunctions2 = parse(beforeFunctionTexts2);\n    const targetFunctions = parse([targetFunctionText]);\n    const afterFunctions = parse(afterFunctionTexts);\n    const afterFunctions2 = parse(afterFunctionTexts2);\n\n\n    const beforeFunctionMatrix = toMat(beforeFunctions);\n    const beforeFunctionMatrix2 = toMat(beforeFunctions2);\n    const afterFunctionMatrix = toMat(afterFunctions);\n    const afterFunctionMatrix2 = toMat(afterFunctions2);\n    const allFunctionMatrix = multiply(\n        beforeFunctionMatrix,\n        afterFunctionMatrix,\n        4,\n    );\n    return {\n        transforms,\n        beforeFunctionMatrix,\n        beforeFunctionMatrix2,\n        targetFunctionMatrix: toMat(targetFunctions),\n        afterFunctionMatrix,\n        afterFunctionMatrix2,\n        allFunctionMatrix,\n        beforeFunctions,\n        beforeFunctions2,\n        targetFunction: targetFunctions[0],\n        afterFunctions,\n        afterFunctions2,\n        beforeFunctionTexts,\n        beforeFunctionTexts2,\n        targetFunctionText,\n        afterFunctionTexts,\n        afterFunctionTexts2,\n    };\n}\n\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\n    if (!arr || !isObject(arr)) {\n        return false;\n    }\n    if (arr instanceof Element) {\n        return false;\n    }\n    return isArray(arr) || \"length\" in arr;\n}\n\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector: true): T | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector?: boolean): T | string | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>,\n    isSelector?: boolean,\n): any {\n    if (!target) {\n        return null;\n    }\n    if (isString(target)) {\n        if (isSelector) {\n            return document.querySelector(target);\n        }\n        return target;\n    }\n    if (isFunction(target)) {\n        return target();\n    }\n    if (\"current\" in target) {\n        return target.current;\n    }\n    return target;\n}\n\nexport function getRefTargets(\n    targets: MoveableRefType | ArrayFormat<MoveableRefType>,\n    isSelector: true): Array<HTMLElement | SVGElement | null>;\nexport function getRefTargets(\n    targets: MoveableRefType | ArrayFormat<MoveableRefType>,\n    isSelector?: boolean): Array<HTMLElement | SVGElement | string | null>;\nexport function getRefTargets(targets: MoveableRefType | ArrayFormat<MoveableRefType>, isSelector?: boolean) {\n    if (!targets) {\n        return [];\n    }\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n\n    return userTargets.reduce((prev, target) => {\n        if (isString(target) && isSelector) {\n            return [...prev, ...[].slice.call(document.querySelectorAll<HTMLElement>(target))];\n        }\n        prev.push(getRefTarget(target, isSelector));\n        return prev;\n    }, [] as Array<SVGElement | HTMLElement | string | null | undefined>);\n}\n\nexport function getElementTargets(\n    targets: Array<SVGElement | HTMLElement | string | null | undefined>,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n) {\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\n    targets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                elementTargets.push(...selectorMap[target]);\n            }\n            return;\n        }\n        elementTargets.push(target);\n    });\n\n    return elementTargets;\n}\n\nexport function minmax(...values: number[]) {\n    return [Math.min(...values), Math.max(...values)];\n}\n\n\nexport function getAbsoluteRotation(pos1: number[], pos2: number[], direction: number) {\n    let deg = getRad(pos1, pos2) / Math.PI * 180;\n\n    deg = direction >= 0 ? deg : 180 - deg;\n    deg = deg >= 0 ? deg : 360 + deg;\n\n    return deg;\n}\n\n\nexport function getDragDistByState(state: MoveableManagerState, dist: number[]) {\n    const {\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    let inverseMatrix = invert(rootMatrix, n);\n\n    if (!is3d) {\n        inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n    }\n    inverseMatrix[12] = 0;\n    inverseMatrix[13] = 0;\n    inverseMatrix[14] = 0;\n\n    return calculateMatrixDist(inverseMatrix, dist);\n}\n\nexport function getSizeDistByDist(\n    startSize: number[],\n    dist: number[],\n    ratio: number,\n    direction: number[],\n    keepRatio?: boolean,\n) {\n    const [startOffsetWidth, startOffsetHeight] = startSize;\n    let distWidth = 0;\n    let distHeight = 0;\n\n    if (keepRatio && startOffsetWidth && startOffsetHeight) {\n        const rad = getRad([0, 0], dist);\n        const standardRad = getRad([0, 0], direction);\n        const size = getDistSize(dist);\n        const signSize = Math.cos(rad - standardRad) * size;\n\n        if (!direction[0]) {\n            // top, bottom\n            distHeight = signSize;\n            distWidth = distHeight * ratio;\n        } else if (!direction[1]) {\n            // left, right\n            distWidth = signSize;\n            distHeight = distWidth / ratio;\n        } else {\n            // two-way\n            const startWidthSize = direction[0] * 2 * startOffsetWidth;\n            const startHeightSize = direction[1] * 2 * startOffsetHeight;\n            const distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]])\n                - getDistSize([startWidthSize, startHeightSize]);\n            const ratioRad = getRad([0, 0], [ratio, 1]);\n\n            distWidth = Math.cos(ratioRad) * distSize;\n            distHeight = Math.sin(ratioRad) * distSize;\n        }\n    } else {\n        distWidth = direction[0] * dist[0];\n        distHeight = direction[1] * dist[1];\n    }\n\n    return [distWidth, distHeight];\n}\nexport function getOffsetSizeDist(\n    sizeDirection: number[],\n    keepRatio: boolean,\n    datas: any,\n    e: any,\n) {\n    const {\n        ratio,\n        startOffsetWidth,\n        startOffsetHeight,\n    } = datas;\n    let distWidth = 0;\n    let distHeight = 0;\n    const {\n        distX,\n        distY,\n        parentDistance,\n        parentDist,\n        parentScale,\n        isPinch,\n    } = e;\n    const startFixedDirection = datas.fixedDirection;\n\n    if (parentDist) {\n        distWidth = parentDist[0];\n        distHeight = parentDist[1];\n\n        if (keepRatio) {\n            if (!distWidth) {\n                distWidth = distHeight * ratio;\n            } else if (!distHeight) {\n                distHeight = distWidth / ratio;\n            }\n        }\n    } else if (parentScale) {\n        distWidth = (parentScale[0] - 1) * startOffsetWidth;\n        distHeight = (parentScale[1] - 1) * startOffsetHeight;\n    } else if (isPinch) {\n        if (parentDistance) {\n            distWidth = parentDistance;\n            distHeight = parentDistance * startOffsetHeight / startOffsetWidth;\n        }\n    } else {\n        let dist = getDragDist({ datas, distX, distY });\n\n        dist = [0, 1].map(index => {\n            let directionRatio =  Math.abs(sizeDirection[index] - startFixedDirection[index]);\n\n            if (directionRatio !== 0) {\n                directionRatio = 2 / directionRatio;\n            }\n            return dist[index] * directionRatio;\n        });\n        [distWidth, distHeight] = getSizeDistByDist(\n            [startOffsetWidth, startOffsetHeight],\n            dist,\n            ratio,\n            sizeDirection,\n            keepRatio,\n        );\n    }\n    return {\n        // direction,\n        // sizeDirection,\n        distWidth,\n        distHeight,\n    };\n}\n","import { makeAble } from \"./AbleManager\";\nimport { triggerEvent, fillParams, fillEndParams } from \"../utils\";\nimport {\n    PinchableProps, Able, SnappableState,\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\nexport default makeAble(\"pinchable\", {\n    events: {\n        onPinchStart: \"pinchStart\",\n        onPinch: \"pinch\",\n        onPinchEnd: \"pinchEnd\",\n        onPinchGroupStart: \"pinchGroupStart\",\n        onPinchGroup: \"pinchGroup\",\n        onPinchGroupEnd: \"pinchGroupEnd\",\n    } as const,\n    dragStart() {\n        return true;\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, targets, angle, originalDatas } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        pinchAbles.forEach(able => {\n            originalDatas[able.name] = originalDatas[able.name] || {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: originalDatas[able.name],\n                parentRotate: angle,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const {\n            datas, scale: pinchScale, distance,\n            originalDatas,\n            inputEvent, targets,\n            angle,\n        } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: originalDatas[able.name],\n                inputEvent,\n                parentDistance,\n                parentRotate: angle,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: originalDatas[able.name],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        return this.pinchStart!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.pinch!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.pinchEnd!(moveable, { ...e, targets: moveable.props.targets });\n    },\n});\n\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    getDirection, triggerEvent,\n    fillParams, getCSSSize,\n    fillEndParams, directionCondition,\n    getComputedStyle,\n    getAbsolutePosesByState,\n    catchEvent,\n    getOffsetSizeDist,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getResizeDist,\n    getAbsolutePosition,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    Renderer, OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface, SnappableProps,\n    OnBeforeResize, OnBeforeResizeGroup, ResizableRequestParam,\n} from \"../types\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirections\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapResize } from \"./Snappable\";\nimport {\n    calculateBoundSize,\n    isString, convertUnitSize,\n    throttle,\n    isNumber,\n} from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        resizable: Boolean,\n        throttleResize: Number,\n        renderDirections: Array,\n        keepRatio: Boolean,\n        resizeFormat: Function,\n    } as const,\n    events: {\n        onResizeStart: \"resizeStart\",\n        onBeforeResize: \"beforeResize\",\n        onResize: \"resize\",\n        onResizeEnd: \"resizeEnd\",\n\n        onResizeGroupStart: \"resizeGroupStart\",\n        onBeforeResizeGroup: \"beforeResizeGroup\",\n        onResizeGroup: \"resizeGroup\",\n        onResizeGroupEnd: \"resizeGroupEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<Partial<ResizableProps>>, React: Renderer): any[] | undefined {\n        const { resizable, edge } = moveable.props;\n        if (resizable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            isGroup,\n            parentDirection,\n            datas,\n        } = e;\n\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n\n        const { target, width, height } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        !isPinch && setDragStart(moveable, e);\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n        [\n            datas.startWidth,\n            datas.startHeight,\n        ] = getCSSSize(target);\n        const padding = [\n            Math.max(0, width - datas.startWidth),\n            Math.max(0, height - datas.startHeight),\n        ];\n        datas.minSize = padding;\n        datas.maxSize = [Infinity, Infinity];\n\n        if (!isGroup) {\n            const style = getComputedStyle(target);\n\n            const {\n                position,\n                minWidth,\n                minHeight,\n                maxWidth,\n                maxHeight,\n            } = style;\n            const isParentElement = position === \"static\" || position === \"relative\";\n            const container = isParentElement\n                ? target.parentElement\n                : (target as HTMLElement).offsetParent;\n\n            let containerWidth = width;\n            let containerHeight = height;\n\n            if (container) {\n                containerWidth = container!.clientWidth;\n                containerHeight = container!.clientHeight;\n\n                if (isParentElement) {\n                    const containerStyle = getComputedStyle(container!);\n\n                    containerWidth -= parseFloat(containerStyle.paddingLeft) || 0;\n                    containerHeight -= parseFloat(containerStyle.paddingTop) || 0;\n                }\n            }\n\n            datas.minSize = plus([\n                convertUnitSize(minWidth, containerWidth) || 0,\n                convertUnitSize(minHeight, containerHeight) || 0,\n            ], padding);\n            datas.maxSize = plus([\n                convertUnitSize(maxWidth, containerWidth) || Infinity,\n                convertUnitSize(maxHeight, containerHeight) || Infinity,\n            ], padding);\n        }\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\n\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\n            ? transformOrigin.split(\" \")\n            : transformOrigin;\n\n        datas.isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n        function setMin(minSize: Array<string | number>)  {\n            datas.minSize = [\n                convertUnitSize(`${minSize[0]}`, 0) || 0,\n                convertUnitSize(`${minSize[1]}`, 0) || 0,\n            ];\n        }\n        function setMax(maxSize: Array<string | number>) {\n            const nextMaxSize = [\n                maxSize[0] || Infinity,\n                maxSize[1] || Infinity,\n            ];\n            if (!isNumber(nextMaxSize[0]) || isFinite(nextMaxSize[0])) {\n                nextMaxSize[0] = convertUnitSize(`${nextMaxSize[0]}`, 0) || Infinity;\n            }\n            if (!isNumber(nextMaxSize[1]) || isFinite(nextMaxSize[1])) {\n                nextMaxSize[1] = convertUnitSize(`${nextMaxSize[1]}`, 0) || Infinity;\n            }\n            datas.maxSize = nextMaxSize;\n        }\n\n        setRatio(width / height);\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        datas.setFixedDirection = setFixedDirection;\n        datas.setMin = setMin;\n        datas.setMax = setMax;\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setMin,\n            setMax,\n            setRatio,\n            setFixedDirection,\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent(moveable, \"onResizeStart\", params);\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps & SnappableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            parentFlag,\n            isPinch,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n            isRequest,\n        } = e;\n\n        const {\n            isResize,\n            transformOrigin,\n            startWidth,\n            startHeight,\n            prevWidth,\n            prevHeight,\n            minSize,\n            maxSize,\n            ratio,\n            isWidth,\n            startOffsetWidth,\n            startOffsetHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n\n        const props = moveable.props;\n        const {\n            resizeFormat,\n            throttleResize = 1,\n            parentMoveable,\n        } = props;\n        const direction = datas.direction;\n        let sizeDirection = direction;\n        let distWidth = 0;\n        let distHeight = 0;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n\n        function getNextBoundingSize() {\n            const nextSize = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n            distWidth = nextSize.distWidth;\n            distHeight = nextSize.distHeight;\n\n            let nextWidth = sizeDirection[0] || keepRatio\n                ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n            let nextHeight = sizeDirection[1] || keepRatio\n                ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n                if (isWidth) {\n                    nextHeight = nextWidth / ratio;\n                } else {\n                    nextWidth = nextHeight * ratio;\n                }\n            }\n            return [nextWidth, nextHeight];\n        }\n\n        let [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n        datas.setFixedDirection(datas.fixedDirection);\n\n        triggerEvent(moveable, \"onBeforeResize\", fillParams<OnBeforeResize>(moveable, e, {\n            setFixedDirection(nextFixedDirection: number[]) {\n                datas.setFixedDirection(nextFixedDirection);\n\n                [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n                return [boundingWidth, boundingHeight];\n            },\n            boundingWidth,\n            boundingHeight,\n            setSize(size: number[]) {\n                [boundingWidth, boundingHeight] = size;\n            },\n        }, true));\n\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapResize(\n                moveable,\n                boundingWidth,\n                boundingHeight,\n                direction,\n                fixedPosition,\n                isRequest,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n\n        function computeSize() {\n            if (resizeFormat) {\n                [boundingWidth, boundingHeight] = resizeFormat([boundingWidth, boundingHeight]);\n            }\n            boundingWidth = throttle(boundingWidth, throttleResize!);\n            boundingHeight = throttle(boundingHeight, throttleResize!);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                // pre-compute before maintaining the ratio\n                computeSize();\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                boundingWidth += snapDist[0];\n                boundingHeight = boundingWidth / ratio;\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                boundingHeight += snapDist[1];\n                boundingWidth = boundingHeight * ratio;\n            }\n        } else {\n            boundingWidth += snapDist[0];\n            boundingHeight += snapDist[1];\n\n            boundingWidth = Math.max(0, boundingWidth);\n            boundingHeight = Math.max(0, boundingHeight);\n        }\n        [boundingWidth, boundingHeight] = calculateBoundSize(\n            [boundingWidth, boundingHeight],\n            minSize,\n            maxSize,\n            keepRatio ? ratio : false,\n        );\n        computeSize();\n\n        distWidth = boundingWidth - startOffsetWidth;\n        distHeight = boundingHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        const inverseDelta = getResizeDist(\n            moveable,\n            boundingWidth,\n            boundingHeight,\n            datas.fixedDirection,\n            fixedPosition,\n            transformOrigin,\n        );\n\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\n            return;\n        }\n        const params = fillParams<OnResize>(moveable, e, {\n            width: startWidth + distWidth,\n            height: startHeight + distHeight,\n            offsetWidth: Math.round(boundingWidth),\n            offsetHeight: Math.round(boundingHeight),\n            boundingWidth,\n            boundingHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false),\n            ) as OnDrag,\n        });\n        triggerEvent(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            return this.dragControl(moveable, e);\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        datas.isResize = false;\n\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\n        triggerEvent(moveable, \"onResizeEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, {...e, isGroup: true });\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n        const {\n            startOffsetWidth: parentStartOffsetWidth,\n            startOffsetHeight: parentStartOffsetHeight,\n        } = datas;\n\n        function updateGroupMin() {\n            const originalMinSize = datas.minSize;\n            originalEvents.forEach(ev => {\n                const {\n                    minSize: childMinSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMinWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMinSize[0] / childStartOffsetWidth : 0);\n                const parentMinHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMinSize[1] / childStartOffsetHeight : 0);\n\n                originalMinSize[0] = Math.max(originalMinSize[0], parentMinWidth);\n                originalMinSize[1] = Math.max(originalMinSize[1], parentMinHeight);\n            });\n        }\n\n        function updateGroupMax() {\n            const originalMaxSize = datas.maxSize;\n            originalEvents.forEach(ev => {\n                const {\n                    maxSize: childMaxSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMaxWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMaxSize[0] / childStartOffsetWidth : 0);\n                const parentMaxHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMaxSize[1] / childStartOffsetHeight : 0);\n\n                originalMaxSize[0] = Math.min(originalMaxSize[0], parentMaxWidth);\n                originalMaxSize[1] = Math.min(originalMaxSize[1], parentMaxHeight);\n            });\n        }\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n\n        updateGroupMin();\n        updateGroupMax();\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events: events.map(ev => {\n                return {\n                    ...ev,\n                    setMin: (minSize: Array<number | string>) => {\n                        ev.setMin(minSize);\n                        updateGroupMin();\n                    },\n                    setMax: (maxSize: Array<number | string>) => {\n                        ev.setMax(maxSize);\n                        updateGroupMax();\n                    },\n                };\n            }),\n            setFixedDirection,\n            setMin: (minSize: Array<number | string>) => {\n                params.setMin(minSize);\n                updateGroupMin();\n            },\n            setMax: (maxSize: Array<number | string>) => {\n                params.setMax(maxSize);\n                updateGroupMax();\n            },\n        };\n        const result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeResize\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeResizeGroup\", fillParams<OnBeforeResizeGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n\n\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const {\n            boundingWidth,\n            boundingHeight,\n            dist,\n        } = params;\n\n        const keepRatio = moveable.props.keepRatio;\n\n        const parentScale = [\n            boundingWidth / (boundingWidth - dist[0]),\n            boundingHeight / (boundingHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * parentScale[0],\n                        ev.datas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {Moveable.Resizable.ResizableRequestParam} e - the Resizable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any>) {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: ResizableRequestParam) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: ResizableRequestParam) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth! - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth!;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight! - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight!;\n                }\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can be resized.\n * @name Moveable.Resizable#resizable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize. If throttleResize is set to less than 1, the target may shake.\n * @name Moveable.Resizable#throttleResize\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 1,\n * });\n *\n * moveable.throttleResize = 0;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height.\n * @name Moveable.Resizable#keepRatio\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * Set directions to show the control box.\n * @name Moveable.Resizable#renderDirections\n * @default [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * Function to convert size for resize\n * @name Moveable.Resizable#resizeFormat\n * @default oneself\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   resizeFormat: v => v,\n * });\n *\n * moveable.resizeFormat = (size: number[]) => ([Math.trunc(size[0]), Math.trunc(size[1])];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When resizing, `beforeResize` is called before `resize` occurs. In `beforeResize`, you can get and set the pre-value before resizing.\n * @memberof Moveable.Resizable\n * @event beforeResize\n * @param {Moveable.Resizable.OnBeforeResize} - Parameters for the `beforeResize` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"beforeResize\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"resize\", ({ target, width, height, drag }) => {\n *     target.style.width = `${width}px`;\n *     target.style.height = `${height}px`;\n *     target.style.transform = drag.transform;\n * });\n */\n\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    getDirection, triggerEvent, multiply2,\n    fillParams, fillEndParams, directionCondition, getAbsolutePosesByState, catchEvent, getOffsetSizeDist,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, resolveTransformEvent,\n    convertTransformFormat,\n    getScaleDist,\n    fillTransformStartEvent,\n    fillTransformEvent,\n    getAbsolutePosition,\n    setDefaultTransformIndex,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirections\";\nimport {\n    ScalableProps, ResizableProps, OnScaleGroup, OnScaleGroupEnd,\n    Renderer, OnScaleGroupStart, DraggableProps, OnDragStart,\n    SnappableState, GroupableProps, OnScaleStart,\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\n    OnBeforeScaleGroup,\n    OnBeforeScale,\n} from \"../types\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus, minus } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapScale } from \"./Snappable\";\nimport {\n    isArray, IObject, getDist,\n    throttle,\n} from \"@daybrush/utils\";\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        scalable: Boolean,\n        throttleScale: Number,\n        renderDirections: String,\n        keepRatio: Boolean,\n    } as const,\n    events: {\n        onScaleStart: \"scaleStart\",\n        onBeforeScale: \"beforeScale\",\n        onScale: \"scale\",\n        onScaleEnd: \"scaleEnd\",\n        onScaleGroupStart: \"scaleGroupStart\",\n        onBeforeScaleGroup: \"beforeScaleGroup\",\n        onScaleGroup: \"scaleGroup\",\n        onScaleGroupEnd: \"scaleGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<Partial<ResizableProps & ScalableProps>>,\n        React: Renderer): any[] | undefined {\n        const { resizable, scalable, edge } = moveable.props;\n        if (!resizable && scalable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n            pos1,\n            pos2,\n            pos4,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, e);\n        }\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.startValue = [1, 1];\n\n        const scaleWidth = getDist(pos1, pos2);\n        const scaleHeight = getDist(pos2, pos4);\n        const isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n\n        datas.scaleWidth = scaleWidth;\n        datas.scaleHeight = scaleHeight;\n        datas.scaleXRatio = scaleWidth / width;\n        datas.scaleYRatio = scaleHeight / height;\n\n        setDefaultTransformIndex(e, \"scale\");\n\n\n\n        datas.isWidth = isWidth;\n\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n\n\n        datas.setFixedDirection = setFixedDirection;\n        setRatio(getDist(pos1, pos2) / getDist(pos2, pos4));\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startValue = scale;\n            },\n            setRatio,\n            setFixedDirection,\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent(moveable, \"onScaleStart\", params);\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        resolveTransformEvent(e, \"scale\");\n        const {\n            datas,\n            parentKeepRatio,\n            parentFlag, isPinch,\n            dragClient,\n            isRequest,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            startOffsetWidth,\n            startOffsetHeight,\n            isScale,\n            startValue,\n            isWidth,\n            ratio,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const props = moveable.props;\n        const {\n            throttleScale,\n            parentMoveable,\n        } = props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n        const state = moveable.state;\n\n        function getNextScale() {\n            const {\n                distWidth,\n                distHeight,\n            } = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n\n            let scaleX = (startOffsetWidth + distWidth) / startOffsetWidth;\n            let scaleY = (startOffsetHeight + distHeight) / startOffsetHeight;\n\n            scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n            scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n\n            if (scaleX === 0) {\n                scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            if (scaleY === 0) {\n                scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            return [scaleX, scaleY];\n        }\n\n\n        let scale = getNextScale();\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction, request: e.isRequest };\n            }\n        }\n\n        triggerEvent(moveable, \"onBeforeScale\", fillParams<OnBeforeScale>(moveable, e, {\n            scale,\n            setFixedDirection(nextFixedDirection: number[]) {\n                datas.setFixedDirection(nextFixedDirection);\n\n                scale = getNextScale();\n\n                return scale;\n            },\n            setScale(nextScale: number[]) {\n                scale = nextScale;\n            },\n        }, true));\n\n        const dist = [scale[0] / startValue[0], scale[1] / startValue[1]];\n        let fixedPosition = dragClient;\n        let snapDist = [0, 0];\n\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                dist,\n                direction,\n                isRequest,\n                datas,\n            );\n        }\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0] * startOffsetWidth) > Math.abs(snapDist[1] * startOffsetHeight)) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n                } else {\n                    dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                dist[0] += snapDist[0];\n                const snapHeight = startOffsetWidth * dist[0] * startValue[0] / ratio;\n\n                dist[1] = snapHeight / startOffsetHeight / startValue[1];\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                dist[1] += snapDist[1];\n                const snapWidth = startOffsetHeight * dist[1] * startValue[1] * ratio;\n\n                dist[0] = snapWidth / startOffsetWidth / startValue[0];\n            }\n        } else {\n            dist[0] += snapDist[0];\n            dist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n            }\n            if (!snapDist[1]) {\n                dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n            }\n        }\n\n        if (dist[0] === 0) {\n            dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (dist[1] === 0) {\n            dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n        scale = multiply2(dist, startValue);\n\n        const inverseDist = getScaleDist(moveable, dist, datas.fixedDirection, fixedPosition, datas);\n        const inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n\n        datas.prevDist = dist;\n        datas.prevInverseDist = inverseDist;\n        if (\n            scale[0] === prevDist[0] && scale[1] === prevDist[1]\n            && inverseDelta.every(num => !num)\n            && !parentMoveable\n        ) {\n            return false;\n        }\n\n\n        const nextTransform = convertTransformFormat(\n            datas, `scale(${scale.join(\", \")})`, `scale(${dist.join(\", \")})`);\n        const params = fillParams<OnScale>(moveable, e, {\n            offsetWidth: startOffsetWidth,\n            offsetHeight: startOffsetHeight,\n            direction,\n\n            scale,\n            dist,\n            delta,\n\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\n        const { datas, isDrag } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        triggerEvent(moveable, \"onScaleEnd\", fillEndParams<OnScaleEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n\n        datas.moveableScale = moveable.scale;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection,\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeScale\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeScaleGroup\", fillParams<OnBeforeScaleGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n\n        const moveableScale = datas.moveableScale;\n        moveable.scale = [\n            params.scale[0] * moveableScale[0],\n            params.scale[1] * moveableScale[1],\n        ];\n        const keepRatio = moveable.props.keepRatio;\n        const { dist, scale } = params;\n\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * dist[0],\n                        ev.datas.originalY * dist[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {Moveable.Scalable.ScalableRequestParam} e - the Scalable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can scaled.\n *\n * @name Moveable.Scalable#scalable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, `beforeScale` is called before `scale` occurs. In `beforeScale`, you can get and set the pre-value before scaling.\n * @memberof Moveable.Scalable\n * @event beforeScale\n * @param {Moveable.Scalable.OnBeforeScale} - Parameters for the `beforeScale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"beforeScale\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When scaling, the `scale` event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the `scale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the `scaleEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the `scaleEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\n    triggerEvent, fillParams, fillEndParams,\n} from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    calculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    minus,\n    createWarpMatrix,\n    plus,\n} from \"@scena/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport {\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\n    fillTransformStartEvent, resolveTransformEvent,\n    convertTransformFormat, fillOriginalTransform, getTransfromMatrix,\n} from \"../gesto/GestoUtils\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { hasClass, dot, getRad } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirections\";\nimport { hasGuidelines } from \"./snappable/utils\";\nimport { checkMoveableSnapBounds } from \"./snappable/snapBounds\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: {\n        warpable: Boolean,\n        renderDirections: Array,\n    } as const,\n    events: {\n        onWarpStart: \"warpStart\",\n        onWarp: \"warp\",\n        onWarpEnd: \"warpEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\n        const { resizable, scalable, warpable, zoom } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return [];\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")}\n                key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4, zoom)}></div>,\n            ...renderAllDirections(moveable, React),\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        return hasClass(e.inputEvent.target, prefix(\"direction\"));\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map(p => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startValue = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"matrix3d\");\n\n        state.snapRenderInfo = {\n            request: e.isRequest,\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startValue = matrix;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, isRequest } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n        resolveTransformEvent(e, \"matrix3d\");\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkMoveableSnapBounds(\n                moveable,\n                isRequest,\n                {\n                    horizontal: selectedPoses.map(pos => pos[1] + distY),\n                    vertical: selectedPoses.map(pos => pos[0] + distX),\n                },\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[2],\n            poses[1],\n            poses[3],\n            nextPoses[0],\n            nextPoses[2],\n            nextPoses[1],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n        // B * A * M\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\n\n        // B * M * A\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\n\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n        const totalMatrix = multiply(startValue, matrix, 4);\n        const nextTransform = convertTransformFormat(\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\n\n        fillOriginalTransform(e, nextTransform);\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: totalMatrix,\n            dist: matrix,\n            multiply,\n            transform: nextTransform,\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\n        return isDrag;\n    },\n};\n\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n","import { prefix } from \"./utils\";\n\nexport const AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nexport const AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nexport const AVOID = /*#__PURE__*/prefix(\"avoid\");\n","import {\n    createWarpMatrix,\n} from \"@scena/matrix\";\nimport { ref } from \"framework-utils\";\nimport { getRect, calculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\nimport {\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\nimport { addClass, removeClass, requestAnimationFrame } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManagerInterface) {\n    const el = moveable.areaElement;\n\n    if (!el) {\n        return;\n    }\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: {\n        dragArea: Boolean,\n        passDragArea: Boolean,\n    } as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\n        const { width, height, renderPoses } = moveable.state;\n\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            renderPoses[0],\n            renderPoses[1],\n            renderPoses[2],\n            renderPoses[3],\n        );\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        const areaElement = moveable.areaElement;\n        const state = moveable.state;\n        const {\n            moveableClientRect,\n            renderPoses,\n            rootMatrix,\n            is3d,\n        } = state;\n        const { left, top } = moveableClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n            width,\n            height,\n        } = getRect(renderPoses);\n        const n = is3d ? 4 : 3;\n        let [posX, posY] = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\n\n        posX -= relativeLeft;\n        posY -= relativeTop;\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n        state.disableNativeEvent = true;\n        return;\n    },\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\n        this.enableNativeEvent(moveable);\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\n        this.enableNativeEvent(moveable);\n        const { inputEvent, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<DragAreaProps>,\n        e: any,\n    ) {\n        return this.dragEnd(moveable, e);\n    },\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\n        restoreStyle(moveable);\n        moveable.state.disableNativeEvent = false;\n    },\n    enableNativeEvent(moveable: MoveableManagerInterface<DragAreaProps>) {\n        const state = moveable.state;\n        if (state.disableNativeEvent) {\n            requestAnimationFrame(() => {\n                state.disableNativeEvent = false;\n            });\n        }\n    },\n};\n\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n","import { prefix, getControlTransform } from \"../utils\";\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"origin\", {\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\n        const { zoom } = moveable.props;\n        const { beforeOrigin, rotation } = moveable.state;\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, zoom!, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n});\n\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n","\nimport { ScrollableProps, OnScroll, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { triggerEvent, fillParams, getRefTarget } from \"../utils\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: {\n        scrollable: Boolean,\n        scrollContainer: Object,\n        scrollThreshold: Number,\n        getScrollPosition: Function,\n    } as const,\n    events: {\n        onScroll: \"scroll\",\n        onScrollGroup: \"scrollGroup\",\n    } as const,\n    dragRelation: \"strong\",\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer() as HTMLElement,\n        } = props;\n\n        const dragScroll = new DragScroll();\n        const scrollContainerElement = getRefTarget<HTMLElement>(scrollContainer, true);\n\n        e.datas.dragScroll = dragScroll;\n\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY }) => {\n            moveable[gestoName].scrollBy(offsetX, offsetY, e.inputEvent, false);\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainerElement!,\n        });\n    },\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const {\n            dragScroll,\n        } = e.datas;\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer(),\n            scrollThreshold = 0,\n            getScrollPosition = getDefaultScrollPosition,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer,\n            threshold: scrollThreshold,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupContro(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n\n/**\n * Whether or not target can be scrolled to the scroll container (default: false)\n * @name Moveable.Scrollable#scrollable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n * moveable.scrollable = true;\n */\n\n/**\n * The container to which scroll is applied (default: container)\n * @name Moveable.Scrollable#scrollContainer\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n/**\n * Expand the range of the scroll check area. (default: 0)\n * @name Moveable.Scrollable#scrollThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Sets a function to get the scroll position. (default: Function)\n * @name Moveable.Scrollable#getScrollPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n","export default {\n    name: \"\",\n    props: {\n        target: Object,\n        dragTarget: Object,\n        container: Object,\n        portalContainer: Object,\n        rootContainer: Object,\n        useResizeObserver: Boolean,\n        zoom: Number,\n        transformOrigin: Array,\n        edge: Boolean,\n        ables: Array,\n        className: String,\n        pinchThreshold: Number,\n        pinchOutside: Boolean,\n        triggerAblesSimultaneously: Boolean,\n        checkInput: Boolean,\n        cspNonce: String,\n        translateZ: Number,\n        hideDefaultLines: Boolean,\n        props: Object,\n        flushSync: Function,\n    } as const,\n    events: {} as const,\n};\n","import { prefix, makeMatrixCSS } from \"../utils\";\nimport { Renderer, MoveableManagerInterface } from \"../types\";\nimport { createWarpMatrix } from \"@scena/matrix\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"padding\", {\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\n        const props = moveable.props;\n        if (props.dragArea) {\n            return [];\n        }\n        const padding = props.padding || {};\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = padding;\n        const {\n            renderPoses,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        } = moveable.state;\n\n        const poses = [pos1, pos2, pos3, pos4];\n        const paddingDirections: number[][] = [];\n\n        if (left > 0) {\n            paddingDirections.push([0, 2]);\n        }\n        if (top > 0) {\n            paddingDirections.push([0, 1]);\n        }\n        if (right > 0) {\n            paddingDirections.push([1, 3]);\n        }\n        if (bottom > 0) {\n            paddingDirections.push([2, 3]);\n        }\n        return paddingDirections.map(([dir1, dir2], i) => {\n            const paddingPos1 = poses[dir1];\n            const paddingPos2 = poses[dir2];\n            const paddingPos3 = renderPoses[dir1];\n            const paddingPos4 = renderPoses[dir2];\n\n            const h = createWarpMatrix(\n                [0, 0],\n                [100, 0],\n                [0, 100],\n                [100, 100],\n                paddingPos1,\n                paddingPos2,\n                paddingPos3,\n                paddingPos4,\n            );\n            if (!h.length) {\n                return undefined;\n            }\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\n                transform: makeMatrixCSS(h, true),\n            }}></div>);\n        });\n    },\n});\n\n/**\n * Add padding around the target to increase the drag area.\n * @name Moveable#padding\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n","import { convertCSSSize } from \"../../utils\";\nimport { ControlPose } from \"../../types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\n\nfunction calculateRatio(values: number[], size: number) {\n    const sumSize = values[0] + values[1];\n    const sumRatio = sumSize > size ? size / sumSize : 1;\n\n    values[0] *= sumRatio;\n    values[1] = size - values[1] * sumRatio;\n\n    return values;\n}\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\n\nexport function getRadiusStyles(\n    poses: number[][], controlPoses: ControlPose[],\n    isRelative: boolean,\n    width: number,\n    height: number,\n    left = 0,\n    top = 0,\n    right: number = width,\n    bottom: number = height,\n) {\n    const clipStyles: string[] = [];\n    let isVertical = false;\n\n    const raws = poses.map((pos, i) => {\n        const { horizontal, vertical } = controlPoses[i];\n        if (vertical && !isVertical) {\n            isVertical = true;\n            clipStyles.push(\"/\");\n        }\n\n        if (isVertical) {\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n\n            return rawPos;\n        } else {\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n\n            return rawPos;\n        }\n    });\n\n    return {\n        styles: clipStyles,\n        raws,\n    };\n}\nexport function getRadiusRange(controlPoses: ControlPose[]) {\n    // [start, length]\n    const horizontalRange = [0, 0];\n    const verticalRange = [0, 0];\n    const length = controlPoses.length;\n\n    for (let i = 0; i < length; ++i) {\n        const clipPose = controlPoses[i];\n\n        if (!clipPose.sub) {\n            continue;\n        }\n        if (clipPose.horizontal) {\n            if (horizontalRange[1] === 0) {\n                horizontalRange[0] = i;\n            }\n            horizontalRange[1] = i - horizontalRange[0] + 1;\n            verticalRange[0] = i + 1;\n        }\n        if (clipPose.vertical) {\n            if (verticalRange[1] === 0) {\n                verticalRange[0] = i;\n            }\n            verticalRange[1] = i - verticalRange[0] + 1;\n        }\n    }\n\n    return {\n        horizontalRange,\n        verticalRange,\n    };\n}\nexport function getRadiusValues(\n    values: string[],\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n    minCounts: number[] = [0, 0],\n): ControlPose[] {\n    const splitIndex = values.indexOf(\"/\");\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n    const horizontalValues = values.slice(0, splitLength);\n    const verticalValues = values.slice(splitLength + 1);\n    const [\n        nwValue = \"0px\",\n        neValue = nwValue,\n        seValue = nwValue,\n        swValue = neValue,\n    ] = horizontalValues;\n    const [\n        wnValue = nwValue,\n        enValue = wnValue,\n        esValue = wnValue,\n        wsValue = enValue,\n    ] = verticalValues;\n\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\n    const horizontalPoses = horizontalRawPoses.slice();\n    const verticalPoses = verticalRawPoses.slice();\n\n    [horizontalPoses[0], horizontalPoses[1]] = calculateRatio([horizontalPoses[0], horizontalPoses[1]], width);\n    [horizontalPoses[3], horizontalPoses[2]] = calculateRatio([horizontalPoses[3], horizontalPoses[2]], width);\n    [verticalPoses[0], verticalPoses[3]] = calculateRatio([verticalPoses[0], verticalPoses[3]], height);\n    [verticalPoses[1], verticalPoses[2]] = calculateRatio([verticalPoses[1], verticalPoses[2]], height);\n\n    const nextHorizontalPoses\n        = horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValues.length));\n    const nextVerticalPoses\n        = verticalPoses.slice(0, Math.max(minCounts[1], verticalValues.length));\n    return [\n        ...nextHorizontalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n                sub: true,\n                raw: horizontalRawPoses[i],\n                direction,\n            };\n        }),\n        ...nextVerticalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n                sub: true,\n                raw: verticalRawPoses[i],\n                direction,\n            };\n        }),\n    ];\n}\nexport function removeRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    index: number,\n    startIndex: number,\n    length: number = poses.length,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    const radiuslIndex = index - startIndex;\n    let deleteCount = 0;\n\n    if (radiuslIndex === 0) {\n        deleteCount = length;\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n        deleteCount = horizontalRange[1] - radiuslIndex;\n    } else if (radiuslIndex >= verticalRange[0]) {\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n    } else {\n        return;\n    }\n    controlPoses.splice(index, deleteCount);\n    poses.splice(index, deleteCount);\n}\nexport function addRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    startIndex: number,\n    horizontalIndex: number,\n    verticalIndex: number,\n    distX: number,\n    distY: number,\n    right: number,\n    bottom: number,\n    left = 0,\n    top = 0,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    if (horizontalIndex > -1) {\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\n            ? distX - left\n            : right - distX;\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n            let x = 0;\n            if (horizontalIndex === i) {\n                x = distX;\n            } else if (i === 0) {\n                x = left + radiusX;\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n                x = right - (poses[startIndex][0] - left);\n            }\n            controlPoses.splice(startIndex + i, 0, {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [x, y],\n            });\n            poses.splice(startIndex + i, 0, [x, y]);\n\n            if (i === 0) {\n                break;\n            }\n        }\n    } else if (verticalIndex > - 1) {\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\n            ? distY - top\n            : bottom - distY;\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n            const pos = [\n                left + radiusY,\n                top,\n            ];\n            controlPoses.push({\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n                vertical: 0,\n                pos,\n            });\n            poses.push(pos);\n        }\n\n        const startVerticalIndex = verticalRange[0];\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n            let y = 0;\n            if (verticalIndex === i) {\n                y = distY;\n            } else if (i === 0) {\n                y = top + radiusY;\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n                y = poses[startIndex + startVerticalIndex][1];\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n            }\n            controlPoses.push({\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [x, y],\n            });\n            poses.push([x, y]);\n            if (i === 0) {\n                break;\n            }\n        }\n    }\n}\nexport function splitRadiusPoses(\n    controlPoses: ControlPose[],\n    raws: number[] = controlPoses.map(pos => pos.raw!),\n) {\n    const horizontals = controlPoses\n        .map((pos, i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\n    const verticals = controlPoses\n        .map((pos, i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\n\n    return {\n        horizontals,\n        verticals,\n    };\n}\n","import {\n    Renderer, ClippableProps, OnClip,\n    ClippableState, OnClipEnd, OnClipStart,\n    ControlPose, MoveableManagerInterface, DraggableProps,\n} from \"../types\";\nimport { splitBracket, splitComma, splitUnit, splitSpace, convertUnitSize, getRad } from \"@daybrush/utils\";\nimport {\n    prefix, calculatePosition, getDiagonalSize,\n    fillParams, triggerEvent,\n    makeMatrixCSS, getRect, fillEndParams,\n    convertCSSSize,\n    getComputedStyle,\n    getSizeDistByDist,\n} from \"../utils\";\nimport { plus, minus, multiply } from \"@scena/matrix\";\nimport { getDragDist, calculatePointerDist, setDragStart } from \"../gesto/GestoUtils\";\nimport {\n    getRadiusValues,\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, getRadiusStyles, addRadiusPos, removeRadiusPos,\n} from \"./roundable/borderRadius\";\nimport { renderLine } from \"../renderDirections\";\nimport { checkSnapBoundPriority } from \"./snappable/snap\";\nimport { checkSnapBounds } from \"./snappable/snapBounds\";\nimport { getDefaultGuidelines } from \"./snappable/utils\";\n\n\nconst CLIP_DIRECTIONS = [\n    [0, -1, \"n\"],\n    [1, 0, \"e\"],\n] as const;\nconst CLIP_RECT_DIRECTIONS = [\n    [-1, -1, \"nw\"],\n    [0, -1, \"n\"],\n    [1, -1, \"ne\"],\n    [1, 0, \"e\"],\n    [1, 1, \"se\"],\n    [0, 1, \"s\"],\n    [-1, 1, \"sw\"],\n    [-1, 0, \"w\"],\n] as const;\n\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nfunction getClipStyles(\n    moveable: MoveableManagerInterface<ClippableProps>,\n    clipPath: ReturnType<typeof getClipPath>,\n    poses: number[][],\n) {\n    const {\n        clipRelative,\n    } = moveable.props;\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const {\n        type: clipType,\n        poses: clipPoses,\n    } = clipPath!;\n\n    const isRect = clipType === \"rect\";\n    const isCircle = clipType === \"circle\";\n    if (clipType === \"polygon\") {\n        return poses.map(pos => `${convertCSSSize(pos[0], width, clipRelative)} ${convertCSSSize(pos[1], height, clipRelative)}`);\n    } else if (isRect || clipType === \"inset\") {\n        const top = poses[1][1];\n        const right = poses[3][0];\n        const left = poses[7][0];\n        const bottom = poses[5][1];\n\n        if (isRect) {\n            return [\n                top,\n                right,\n                bottom,\n                left,\n            ].map(pos => `${pos}px`);\n        }\n        const clipStyles\n            = [top, width - right, height - bottom, left]\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\n\n        if (poses.length > 8) {\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\n\n            clipStyles.push(\"round\", ...getRadiusStyles(\n                poses.slice(8),\n                clipPoses.slice(8),\n                clipRelative!,\n                subWidth,\n                subHeight,\n                left, top, right, bottom,\n            ).styles);\n        }\n        return clipStyles;\n    } else if (isCircle || clipType === \"ellipse\") {\n        const center = poses[0];\n        const ry = convertCSSSize(\n            Math.abs(poses[1][1] - center[1]),\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\n            clipRelative,\n        );\n\n        const clipStyles = isCircle ? [ry]\n            : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n\n        clipStyles.push(\n            \"at\", convertCSSSize(center[0], width, clipRelative),\n            convertCSSSize(center[1], height, clipRelative));\n\n        return clipStyles;\n    }\n}\n\nfunction getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\n    const xs = [left, (left + right) / 2, right];\n    const ys = [top, (top + bottom) / 2, bottom];\n\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\n        const x = xs[dirx + 1];\n        const y = ys[diry + 1];\n        return {\n            vertical: Math.abs(diry),\n            horizontal: Math.abs(dirx),\n            direction: dir,\n            pos: [x, y],\n        };\n    });\n}\n\nexport function getControlSize(\n    controlPoses: ControlPose[],\n) {\n    const xRange = [Infinity, -Infinity];\n    const yRange = [Infinity, -Infinity];\n\n    controlPoses.forEach(({ pos }) => {\n        xRange[0] = Math.min(xRange[0], pos[0]);\n        xRange[1] = Math.max(xRange[1], pos[0]);\n        yRange[0] = Math.min(yRange[0], pos[1]);\n        yRange[1] = Math.max(yRange[1], pos[1]);\n    });\n\n    return [\n        Math.abs(xRange[1] - xRange[0]),\n        Math.abs(yRange[1] - yRange[0]),\n    ];\n}\n\nexport function moveControlPos(\n    controlPoses: ControlPose[],\n    index: number,\n    dist: number[],\n    isRect?: boolean,\n    keepRatio?: boolean,\n) {\n    const { direction, sub } = controlPoses[index];\n    const dists = controlPoses.map(() => [0, 0]);\n    const directions = direction ? direction.split(\"\") : [];\n\n    if (isRect && index < 8) {\n        const verticalDirections = directions.filter(dir => dir === \"w\" || dir === \"e\");\n        const horizontalDirections = directions.filter(dir => dir === \"n\" || dir === \"s\");\n\n        const verticalDirection = verticalDirections[0];\n        const horizontalDirection = horizontalDirections[0];\n\n        dists[index] = dist;\n        const [width, height] = getControlSize(controlPoses);\n        const ratio = width && height ? width / height : 0;\n\n        if (ratio && keepRatio) {\n            // 0 1 2\n            // 7   3\n            // 6 5 4\n\n            const fixedIndex = (index + 4) % 8;\n            const fixedPosition = controlPoses[fixedIndex].pos;\n            const sizeDirection = [0, 0];\n\n            if (direction!.indexOf(\"w\") > -1) {\n                sizeDirection[0] = -1;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                sizeDirection[0] = 1;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                sizeDirection[1] = -1;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                sizeDirection[1] = 1;\n            }\n\n\n            const nextDist = getSizeDistByDist(\n                [width, height],\n                dist,\n                ratio,\n                sizeDirection,\n                true,\n            );\n            const nextWidth = width + nextDist[0];\n            const nextHeight = height + nextDist[1];\n            let top = fixedPosition[1];\n            let bottom = fixedPosition[1];\n            let left = fixedPosition[0];\n            let right = fixedPosition[0];\n\n            if (sizeDirection[0] === -1) {\n                left = right - nextWidth;\n            } else if (sizeDirection[0] === 1) {\n                right = left + nextWidth;\n            } else {\n                left = left - nextWidth / 2;\n                right = right + nextWidth / 2;\n            }\n            if (sizeDirection[1] === -1) {\n                top = bottom - nextHeight;\n            } else if (sizeDirection[1] === 1) {\n                bottom = top + nextHeight;\n            } else {\n                top = bottom - nextHeight / 2;\n                bottom = top + nextHeight;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            controlPoses.forEach((controlPose, i) => {\n                dists[i][0] = nextControlPoses[i].pos[0] - controlPose.pos[0];\n                dists[i][1] = nextControlPoses[i].pos[1] - controlPose.pos[1];\n            });\n        } else {\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: controlDir,\n                } = controlPose;\n\n                if (!controlDir) {\n                    return;\n                }\n                if (controlDir.indexOf(verticalDirection) > -1) {\n                    dists[i][0] = dist[0];\n                }\n                if (controlDir.indexOf(horizontalDirection) > -1) {\n                    dists[i][1] = dist[1];\n                }\n            });\n            if (verticalDirection) {\n                dists[1][0] = dist[0] / 2;\n                dists[5][0] = dist[0] / 2;\n            }\n            if (horizontalDirection) {\n                dists[3][1] = dist[1] / 2;\n                dists[7][1] = dist[1] / 2;\n            }\n        }\n    } else if (direction && !sub) {\n        directions.forEach(dir => {\n            const isVertical = dir === \"n\" || dir === \"s\";\n\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: dirDir,\n                    horizontal: dirHorizontal,\n                    vertical: dirVertical,\n                } = controlPose;\n\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\n                    return;\n                }\n                dists[i] = [\n                    isVertical || !dirHorizontal ? 0 : dist[0],\n                    !isVertical || !dirVertical ? 0 : dist[1],\n                ];\n            });\n        });\n    } else {\n        dists[index] = dist;\n    }\n\n    return dists;\n}\nfunction getClipPath(\n    target: HTMLElement | SVGElement,\n    width: number,\n    height: number,\n    defaultClip?: string,\n    customClip?: string,\n) {\n    let clipText: string | undefined = customClip;\n\n    if (!clipText) {\n        const style = getComputedStyle(target!);\n        const clipPath = style.clipPath!;\n\n        clipText = clipPath !== \"none\" ? clipPath : style.clip!;\n    }\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n        clipText = defaultClip;\n\n        if (!clipText) {\n            return;\n        }\n    }\n    const {\n        prefix: clipPrefix = clipText,\n        value = \"\",\n    } = splitBracket(clipText);\n    const isCircle = clipPrefix === \"circle\";\n    let splitter = \" \";\n\n    if (clipPrefix === \"polygon\") {\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\n        splitter = \",\";\n\n        const poses: ControlPose[] = values.map(pos => {\n            const [xPos, yPos] = pos.split(\" \");\n\n            return {\n                vertical: 1,\n                horizontal: 1,\n                pos: [\n                    convertUnitSize(xPos, width),\n                    convertUnitSize(yPos, height),\n                ],\n            };\n        });\n\n        return {\n            type: clipPrefix,\n            clipText,\n            poses,\n            splitter,\n        } as const;\n    } else if (isCircle || clipPrefix === \"ellipse\") {\n        let xPos = \"\";\n        let yPos = \"\";\n        let radiusX = 0;\n        let radiusY = 0;\n        const values = splitSpace(value!);\n\n        if (isCircle) {\n            let radius = \"\";\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n            radiusY = radiusX;\n        } else {\n            let xRadius = \"\";\n            let yRadius = \"\";\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(xRadius, width);\n            radiusY = convertUnitSize(yRadius, height);\n        }\n        const centerPos = [\n            convertUnitSize(xPos, width),\n            convertUnitSize(yPos, height),\n        ];\n        const poses: ControlPose[] = [\n            {\n                vertical: 1,\n                horizontal: 1,\n                pos: centerPos,\n                direction: \"nesw\",\n            },\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\n                vertical: Math.abs(dir[1]),\n                horizontal: dir[0],\n                direction: dir[2],\n                sub: true,\n                pos: [\n                    centerPos[0] + dir[0] * radiusX,\n                    centerPos[1] + dir[1] * radiusY,\n                ],\n            })),\n        ];\n        return {\n            type: clipPrefix as \"circle\" | \"ellipse\",\n            clipText,\n            radiusX,\n            radiusY,\n            left: centerPos[0] - radiusX,\n            top: centerPos[1] - radiusY,\n            poses,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"inset\") {\n        const values = splitSpace(value! || \"0 0 0 0\");\n        const roundIndex = values.indexOf(\"round\");\n\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n        const radiusValues = values.slice(rectLength + 1);\n        const [\n            topValue,\n            rightValue = topValue,\n            bottomValue = topValue,\n            leftValue = rightValue,\n        ] = values.slice(0, rectLength);\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\n        const nextRight = width - right;\n        const nextBottom = height - bottom;\n        const radiusPoses = getRadiusValues(\n            radiusValues,\n            nextRight - left,\n            nextBottom - top,\n            left,\n            top,\n        );\n        const poses: ControlPose[] = [\n            ...getRectPoses(top, nextRight, nextBottom, left),\n            ...radiusPoses,\n        ];\n\n        return {\n            type: \"inset\",\n            clipText,\n            poses,\n            top,\n            left,\n            right: nextRight,\n            bottom: nextBottom,\n            radius: radiusValues,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"rect\") {\n        // top right bottom left\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\n\n        splitter = \",\";\n        const [top, right, bottom, left] = values.map(pos => {\n            const { value: posValue } = splitUnit(pos);\n\n            return posValue;\n        });\n        const poses = getRectPoses(top, right, bottom, left);\n\n        return {\n            type: \"rect\",\n            clipText,\n            poses,\n            top,\n            right,\n            bottom,\n            left,\n            values,\n            splitter,\n        } as const;\n    }\n    return;\n}\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const [distX, distY] = calculatePointerDist(moveable, e);\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    if (clipType === \"polygon\") {\n        poses.splice(clipIndex, 0, [distX, distY]);\n    } else if (clipType === \"inset\") {\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(clipIndex);\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(clipIndex);\n        const length = clipPoses.length;\n\n        addRadiusPos(\n            clipPoses,\n            poses,\n            8,\n            horizontalIndex,\n            verticalIndex,\n            distX,\n            distY,\n            poses[4][0],\n            poses[4][1],\n            poses[0][0],\n            poses[0][1],\n        );\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"added\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    const length = poses.length;\n    if (clipType === \"polygon\") {\n        clipPoses.splice(clipIndex, 1);\n        poses.splice(clipIndex, 1);\n    } else if (clipType === \"inset\") {\n        if (clipIndex < 8) {\n            return;\n        }\n        removeRadiusPos(clipPoses, poses, clipIndex, 8, length);\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"removed\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nexport default {\n    name: \"clippable\",\n    props: {\n        clippable: Boolean,\n        defaultClipPath: String,\n        customClipPath: String,\n        keepRatio: Boolean,\n        clipRelative: Boolean,\n        clipArea: Boolean,\n        dragWithClip: Boolean,\n        clipTargetBounds: Boolean,\n        clipVerticalGuidelines: Array,\n        clipHorizontalGuidelines: Array,\n        clipSnapThreshold: Boolean,\n    } as const,\n    events: {\n        onClipStart: \"clipStart\",\n        onClip: \"clip\",\n        onClipEnd: \"clipEnd\",\n    } as const,\n    css: [\n        `.control.clip-control {\n    background: #6d6;\n    cursor: pointer;\n}\n.control.clip-control.clip-radius {\n    background: #d66;\n}\n.line.clip-line {\n    background: #6e6;\n    cursor: move;\n    z-index: 1;\n}\n.clip-area {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.clip-ellipse {\n    position: absolute;\n    cursor: move;\n    border: 1px solid #6d6;\n    border: var(--zoompx) solid #6d6;\n    border-radius: 50%;\n    transform-origin: 0px 0px;\n}`,\n        `:host {\n    --bounds-color: #d66;\n}`,\n        `.guideline {\n    pointer-events: none;\n    z-index: 2;\n}`,\n        `.line.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\n        const {\n            customClipPath, defaultClipPath,\n            clipArea, zoom,\n        } = moveable.props;\n        const {\n            target, width, height, allMatrix, is3d, left, top,\n            pos1, pos2, pos3, pos4,\n            clipPathState,\n            snapBoundInfos,\n            rotation: rotationRad,\n        } = moveable.state;\n\n        if (!target) {\n            return [];\n        }\n\n        const clipPath = getClipPath(\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n\n        if (!clipPath) {\n            return [];\n        }\n        const n = is3d ? 4 : 3;\n        const type = clipPath.type;\n        const clipPoses = clipPath.poses;\n        const poses = clipPoses.map(pos => {\n            // return [x, y];\n            const calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n\n            return [\n                calculatedPos[0] - left,\n                calculatedPos[1] - top,\n            ];\n        });\n\n        let controls: any[] = [];\n        let lines: any[] = [];\n\n        const isRect = type === \"rect\";\n        const isInset = type === \"inset\";\n        const isPolygon = type === \"polygon\";\n\n        if (isRect || isInset || isPolygon) {\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\n\n            lines = linePoses.map((to, i) => {\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\n\n                const rad = getRad(from, to);\n                const dist = getDiagonalSize(from, to);\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\n                    data-clip-index={i}\n                    style={{\n                        width: `${dist}px`,\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n                    }}></div>;\n            });\n        }\n        controls = poses.map((pos, i) => {\n            return <div key={`clipControl${i}`}\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\n                data-clip-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                }}></div>;\n        });\n\n        if (isInset) {\n            controls.push(...poses.slice(8).map((pos, i) => {\n                return <div key={`clipRadiusControl${i}`}\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\n                    data-clip-index={8 + i}\n                    style={{\n                        transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                    }}></div>;\n            }));\n        }\n        if (type === \"circle\" || type === \"ellipse\") {\n            const {\n                left: clipLeft,\n                top: clipTop,\n                radiusX,\n                radiusY,\n            } = clipPath;\n\n            const [distLeft, distTop] = minus(\n                calculatePosition(allMatrix, [clipLeft!, clipTop!], n),\n                calculatePosition(allMatrix, [0, 0], n),\n            );\n            let ellipseClipPath = \"none\";\n\n            if (!clipArea) {\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\n                const areaPoses: number[][] = [];\n\n                for (let i = 0; i <= piece; ++i) {\n                    const rad = Math.PI * 2 / piece * i;\n                    areaPoses.push([\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\n                    ]);\n                }\n                areaPoses.push([radiusX!, -2]);\n                areaPoses.push([-2, -2]);\n                areaPoses.push([-2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, -2]);\n                areaPoses.push([radiusX!, -2]);\n\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\n            }\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\n                width: `${radiusX! * 2}px`,\n                height: `${radiusY! * 2}px`,\n                clipPath: ellipseClipPath,\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\n            }}></div>);\n        }\n        if (clipArea) {\n            const {\n                width: allWidth,\n                height: allHeight,\n                left: allLeft,\n                top: allTop,\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\n            if (isPolygon || isRect || isInset) {\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\n                    width: `${allWidth}px`,\n                    height: `${allHeight}px`,\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\n                    clipPath: `polygon(${areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")})`,\n                }}></div>);\n            }\n        }\n        if (snapBoundInfos) {\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\n                const info = snapBoundInfos[directionType];\n                const isHorizontal = directionType === \"horizontal\";\n\n                if (info.isSnap) {\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}snap${i}`, \"guideline\");\n                    }));\n                }\n                if (info.isBound) {\n                    lines.push(...info.bounds.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\n                    }));\n                }\n            });\n        }\n        return [\n            ...controls,\n            ...lines,\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n    },\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const props = moveable.props;\n        const {\n            dragWithClip = true,\n        } = props;\n\n        if (dragWithClip) {\n            return false;\n        }\n\n        return this.dragControlStart(moveable, e);\n    },\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControl(moveable, {...e, isDragTarget: true });\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControlEnd(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const state = moveable.state;\n        const { defaultClipPath, customClipPath } = moveable.props;\n        const { target, width, height } = state;\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\n        const className = (inputTarget && inputTarget.getAttribute(\"class\")) || \"\";\n        const datas = e.datas;\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\n\n        if (!clipPath) {\n            return false;\n        }\n        const { clipText, type, poses } = clipPath;\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\n            clipType: type,\n            clipStyle: clipText,\n            poses: poses.map(pos => pos.pos),\n        }));\n\n        if (result === false) {\n            datas.isClipStart = false;\n            return false;\n        }\n        datas.isControl = className && className.indexOf(\"clip-control\") > -1;\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n        datas.clipIndex = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n        datas.clipPath = clipPath;\n        datas.isClipStart = true;\n        state.clipPathState = clipText;\n        setDragStart(moveable, e);\n\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<ClippableProps & DraggableProps, ClippableState>, e: any) {\n        const { datas, originalDatas, isDragTarget } = e;\n\n        if (!datas.isClipStart) {\n            return false;\n        }\n        const { isControl, isLine, isArea, clipIndex, clipPath } = datas as {\n            clipPath: ReturnType<typeof getClipPath>,\n            [key: string]: any,\n        };\n        if (!clipPath) {\n            return false;\n        }\n\n        const { keepRatio } = moveable.props;\n        let distX = 0;\n        let distY = 0;\n\n        const originalDraggable = originalDatas.draggable;\n        const originalDist = getDragDist(e);\n\n        if (isDragTarget && originalDraggable) {\n            [distX, distY] = originalDraggable.prevBeforeDist;\n        } else {\n            [distX, distY] = originalDist;\n        }\n\n        const firstDist = [distX, distY];\n        const props = moveable.props;\n        const state = moveable.state;\n        const { width, height } = state;\n        const isDragWithTarget = !isArea && !isControl && !isLine;\n        const {\n            type: clipType,\n            poses: clipPoses,\n            splitter,\n        } = clipPath;\n        const poses = clipPoses.map(pos => pos.pos);\n\n        if (isDragWithTarget) {\n            distX = -distX;\n            distY = -distY;\n        }\n        const isAll = !isControl || clipPoses[clipIndex].direction === \"nesw\";\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\n        let dists = clipPoses.map(() => [0, 0]);\n\n        if (isControl && !isAll) {\n            const { horizontal, vertical } = clipPoses[clipIndex];\n            const dist = [\n                distX * Math.abs(horizontal),\n                distY * Math.abs(vertical),\n            ];\n            dists = moveControlPos(clipPoses, clipIndex, dist, isRect, keepRatio);\n        } else if (isAll) {\n            dists = poses.map(() => [distX, distY]);\n        }\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\n        const guidePoses = [...nextPoses];\n\n        state.snapBoundInfos = null;\n        const isCircle = clipPath.type === \"circle\";\n        const isEllipse = clipPath.type === \"ellipse\";\n\n        if (isCircle || isEllipse) {\n            const guideRect = getRect(nextPoses);\n            const ry = Math.abs(guideRect.bottom - guideRect.top);\n            const rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n            const bottom = nextPoses[0][1] + ry;\n            const left = nextPoses[0][0] - rx;\n            const right = nextPoses[0][0] + rx;\n\n            // right\n            if (isCircle) {\n                guidePoses.push([right, guideRect.bottom]);\n                dists.push([1, 0]);\n            }\n            // bottom\n            guidePoses.push([guideRect.left, bottom]);\n            dists.push([0, 1]);\n            // left\n            guidePoses.push([left, guideRect.bottom]);\n            dists.push([1, 0]);\n        }\n\n        const guidelines = getDefaultGuidelines(\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\n            width!, height!,\n        );\n        let guideXPoses: number[] = [];\n        let guideYPoses: number[] = [];\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\n\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\n        }\n        const boundDelta = [0, 0];\n        const {\n            horizontal: horizontalSnapInfo,\n            vertical: verticalSnapInfo,\n        } = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            5,\n        );\n        let snapOffsetY = horizontalSnapInfo.offset;\n        let snapOffsetX = verticalSnapInfo.offset;\n\n        if (horizontalSnapInfo.isBound) {\n            boundDelta[1] += snapOffsetY;\n        }\n        if (verticalSnapInfo.isBound) {\n            boundDelta[0] += snapOffsetX;\n        }\n        if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n            const guideRect = getRect(nextPoses);\n            let cy = guideRect.bottom - guideRect.top;\n            let cx = isEllipse ? guideRect.right - guideRect.left : cy;\n\n\n            const distSnapX = verticalSnapInfo.isBound\n                ? Math.abs(snapOffsetX)\n                : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\n            const distSnapY = horizontalSnapInfo.isBound\n                ? Math.abs(snapOffsetY)\n                : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\n            cx -= distSnapX;\n            cy -= distSnapY;\n\n            if (isCircle) {\n                cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n                cx = cy;\n            }\n            const center = guidePoses[0];\n\n            guidePoses[1][1] = center[1] - cy;\n            guidePoses[2][0] = center[0] + cx;\n            guidePoses[3][1] = center[1] + cy;\n            guidePoses[4][0] = center[0] - cx;\n        } else if (isRect && keepRatio && isControl) {\n            const [width, height] = getControlSize(clipPoses);\n            const ratio = width && height ? width / height : 0;\n            const clipPose = clipPoses[clipIndex];\n            const direction = clipPose.direction! || \"\";\n            let top = guidePoses[1][1];\n            let bottom = guidePoses[5][1];\n            let left = guidePoses[7][0];\n            let right = guidePoses[3][0];\n\n\n            if (snapOffsetY <= snapOffsetX) {\n                snapOffsetY = snapOffsetX / ratio;\n            } else {\n                snapOffsetX = snapOffsetY * ratio;\n            }\n            if (direction!.indexOf(\"w\") > -1) {\n                left -= snapOffsetX;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                right -= snapOffsetX;\n            } else {\n                left += snapOffsetX / 2;\n                right -= snapOffsetX / 2;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                top -= snapOffsetY;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                bottom -= snapOffsetY;\n            } else {\n                top += snapOffsetY / 2;\n                bottom -= snapOffsetY / 2;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            guidePoses.forEach((pos, i) => {\n                [pos[0], pos[1]] = nextControlPoses[i].pos;\n            });\n        } else {\n            guidePoses.forEach((pos, j) => {\n                const dist = dists[j];\n\n                if (dist[0]) {\n                    pos[0] -= snapOffsetX;\n                }\n                if (dist[1]) {\n                    pos[1] -= snapOffsetY;\n                }\n            });\n        }\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\n\n        state.clipPathState = clipStyle;\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n\n            guideXPoses = rectPoses.map(pos => pos[0]);\n            guideYPoses = rectPoses.map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.map(pos => pos[0]);\n            guideYPoses = guidePoses.map(pos => pos[1]);\n        }\n        state.snapBoundInfos = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            1,\n        );\n\n        if (originalDraggable) {\n            const {\n                is3d,\n                allMatrix,\n            } = state;\n            const n = is3d ? 4 : 3;\n\n            let dragDist = boundDelta;\n\n            if (isDragTarget) {\n                dragDist = [\n                    firstDist[0] + boundDelta[0] - originalDist[0],\n                    firstDist[1] + boundDelta[1] - originalDist[1],\n                ];\n            }\n            originalDraggable.deltaOffset = multiply(allMatrix, [dragDist[0], dragDist[1], 0, 0], n);\n        }\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n            clipEventType: \"changed\",\n            clipType,\n            poses: nextPoses,\n            clipStyle,\n            clipStyles: nextClipStyles,\n            distX,\n            distY,\n        }));\n\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        this.unset(moveable);\n        const { isDrag, datas, isDouble } = e;\n        const { isLine, isClipStart, isControl } = datas;\n\n        if (!isClipStart) {\n            return false;\n        }\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\n        if (isDouble) {\n            if (isControl) {\n                removeClipPath(moveable, e);\n            } else if (isLine) {\n                // add\n                addClipPath(moveable, e);\n            }\n        }\n        return isDouble || isDrag;\n    },\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\n        moveable.state.clipPathState = \"\";\n        moveable.state.snapBoundInfos = null;\n    },\n};\n\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea. (default: false)\n * @name Moveable.Clippable#clipArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target. (default: false)\n* @name Moveable.Clippable#clipTargetBounds\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* Add clip guidelines in the vertical direction. (default: [])\n* @name Moveable.Clippable#clipVerticalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction. (default: [])\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n* istance value that can snap to clip guidelines. (default: 5)\n* @name Moveable.Clippable#clipSnapThreshold\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    prefix, triggerEvent,\n    fillParams, calculatePoses, getRect, fillEndParams, convertCSSSize,\n} from \"../utils\";\nimport {\n    OnDragOriginStart, OnDragOrigin,\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface,\n} from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport Draggable from \"./Draggable\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\nexport default {\n    name: \"originDraggable\",\n    props: {\n        originDraggable: Boolean,\n        originRelative: Boolean,\n    } as const,\n    events: {\n        onDragOriginStart: \"dragOriginStart\",\n        onDragOrigin: \"dragOrigin\",\n        onDragOriginEnd: \"dragOriginEnd\",\n    } as const,\n    css: [\n        `:host[data-able-origindraggable] .control.origin {\n    pointer-events: auto;\n}`,\n    ],\n    dragControlCondition(_: any, e: any) {\n        if (e.isRequest) {\n            return e.requestAble === \"originDraggable\";\n        }\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas } = e;\n\n        setDragStart(moveable, e);\n\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent(moveable, \"onDragOriginStart\", params);\n\n        datas.startOrigin = moveable.state.transformOrigin;\n        datas.startTargetOrigin = moveable.state.targetOrigin;\n        datas.prevOrigin = [0, 0];\n        datas.isDragOrigin = true;\n\n        if (result === false) {\n            datas.isDragOrigin = false;\n            return false;\n        }\n\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas, isPinch, isRequest } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        const [distX, distY] = getDragDist(e);\n        const state = moveable.state;\n        const {\n            width,\n            height,\n            offsetMatrix,\n            targetMatrix,\n            is3d,\n        } = state;\n        const {\n            originRelative = true,\n        } = moveable.props;\n        const n = is3d ? 4 : 3;\n        let dist = [distX, distY];\n\n        if (isRequest) {\n            const distOrigin = e.distOrigin;\n            if (distOrigin[0] || distOrigin[1]) {\n                dist = distOrigin;\n            }\n        }\n        const origin = plus(datas.startOrigin, dist);\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\n        const delta = minus(dist, datas.prevOrigin);\n\n        const nextMatrix = getNextMatrix(\n            offsetMatrix,\n            targetMatrix,\n            origin,\n            n,\n        );\n\n        const rect = moveable.getRect();\n        const nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n\n        const dragDelta = [\n            rect.left - nextRect.left,\n            rect.top - nextRect.top,\n        ];\n\n        datas.prevOrigin = dist;\n        const transformOrigin = [\n            convertCSSSize(targetOrigin[0], width, originRelative),\n            convertCSSSize(targetOrigin[1], height, originRelative),\n        ].join(\" \");\n        const params = fillParams<OnDragOrigin>(moveable, e, {\n            width,\n            height,\n            origin,\n            dist,\n            delta,\n            transformOrigin,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\n            )!,\n        });\n        triggerEvent(moveable, \"onDragOrigin\", params);\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        triggerEvent(moveable, \"onDragOriginEnd\",\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\n        return true;\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        return true;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        moveable.transformOrigin = params.transformOrigin;\n\n        return true;\n    },\n    /**\n    * @method Moveable.OriginDraggable#request\n    * @param {object} e - the OriginDraggable's request parameter\n    * @param {number} [e.x] - x position\n    * @param {number} [e.y] - y position\n    * @param {number} [e.deltaX] - x number to move\n    * @param {number} [e.deltaY] - y number to move\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n    * @param {array} [e.origin] - transform-origin position\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\n    * @return {Moveable.Requester} Moveable Requester\n    * @example\n\n    * // Instantly Request (requestStart - request - requestEnd)\n    * // Use Relative Value\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n    * // Use Transform Value\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n    * // requestStart\n    * const requester = moveable.request(\"originDraggable\");\n    *\n    * // request\n    * // Use Relative Value\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n    *\n    * // requestEnd\n    * requester.requestEnd();\n    */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        const transformOrigin = rect.transformOrigin;\n        const distOrigin = [0, 0];\n\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaOrigin\" in e) {\n                    distOrigin[0] += e.deltaOrigin[0];\n                    distOrigin[1] += e.deltaOrigin[1];\n                } else if (\"origin\" in e) {\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\n                } else {\n                    if (\"x\" in e) {\n                        distX = e.x - rect.left;\n                    } else if (\"deltaX\" in e) {\n                        distX += e.deltaX;\n                    }\n                    if (\"y\" in e) {\n                        distY = e.y - rect.top;\n                    } else if (\"deltaY\" in e) {\n                        distY += e.deltaY;\n                    }\n                }\n\n                return { datas, distX, distY, distOrigin };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n","import {\n    prefix, triggerEvent,\n    fillParams, fillEndParams, calculatePosition,\n    getComputedStyle,\n} from \"../utils\";\nimport {\n    Renderer, RoundableProps, OnRoundStart, RoundableState, OnRound, ControlPose, OnRoundEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { splitSpace } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    getRadiusValues, getRadiusStyles, removeRadiusPos,\n    addRadiusPos, splitRadiusPoses,\n} from \"./roundable/borderRadius\";\n\nfunction addBorderRadius(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    lineIndex: number,\n    distX: number,\n    distY: number,\n    width: number,\n    height: number,\n) {\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses);\n    const horizontalsLength = horizontals.length;\n    const verticalsLength = verticals.length;\n    // lineIndex\n    // 0 top\n    // 1 right\n    // 2 left\n    // 3 bottom\n\n    // 0 top - left\n    // 1 top - right\n    // 2 bottom - right\n    // 3 bottom - left\n    // 0 left - top\n    // 1 right - top\n    // 2 right - bottom\n    // 3 left - bottom\n    let horizontalIndex = -1;\n    let verticalIndex = -1;\n\n    if (lineIndex === 0) {\n        if (horizontalsLength === 0) {\n            horizontalIndex = 0;\n        } else if (horizontalsLength === 1) {\n            horizontalIndex = 1;\n        }\n    } else if (lineIndex === 3) {\n        if (horizontalsLength <= 2) {\n            horizontalIndex = 2;\n        } else if (horizontalsLength <= 3) {\n            horizontalIndex = 3;\n        }\n    }\n    if (lineIndex === 2) {\n        if (verticalsLength === 0) {\n            verticalIndex = 0;\n        } else if (verticalsLength < 4) {\n            verticalIndex = 3;\n        }\n    } else if (lineIndex === 1) {\n        if (verticalsLength <= 1) {\n            verticalIndex = 1;\n        } else if (verticalsLength <= 2) {\n            verticalIndex = 2;\n        }\n    }\n\n    addRadiusPos(\n        controlPoses, poses, 0,\n        horizontalIndex, verticalIndex,\n        distX, distY, width, height,\n    );\n}\nfunction getBorderRadius(\n    target: HTMLElement | SVGElement,\n    width: number, height: number,\n    minCounts: number[] = [0, 0],\n    state?: string,\n) {\n    let borderRadius: string;\n    let values: string[] = [];\n\n    if (!state) {\n        const style = getComputedStyle(target);\n\n        borderRadius = (style && style.borderRadius) || \"\";\n    } else {\n        borderRadius = state;\n    }\n    if (!borderRadius || (!state && borderRadius === \"0px\")) {\n        values = [];\n    } else {\n        values = splitSpace(borderRadius);\n    }\n\n    return getRadiusValues(values, width, height, 0, 0, minCounts);\n}\n\nfunction triggerRoundEvent(\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\n    e: any,\n    dist: number[],\n    delta: number[],\n    controlPoses: ControlPose[],\n    nextPoses: number[][],\n) {\n    const state = moveable.state;\n    const {\n        width,\n        height,\n    } = state;\n    const {\n        raws,\n        styles,\n    } = getRadiusStyles(\n        nextPoses,\n        controlPoses,\n        moveable.props.roundRelative!,\n        width,\n        height,\n    );\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses, raws);\n    const borderRadius = styles.join(\" \");\n\n    state.borderRadiusState = borderRadius;\n    triggerEvent(moveable, \"onRound\", fillParams<OnRound>(moveable, e, {\n        horizontals,\n        verticals,\n        borderRadius,\n        width,\n        height,\n        delta,\n        dist,\n    }));\n}\n\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nexport default {\n    name: \"roundable\",\n    props: {\n        roundable: Boolean,\n        roundRelative: Boolean,\n        minRoundControls: Array,\n        maxRoundControls: Array,\n        roundClickable: Boolean,\n    } as const,\n    events: {\n        onRoundStart: \"roundStart\",\n        onRound: \"round\",\n        onRoundEnd: \"roundEnd\",\n    } as const,\n    css: [\n        `.control.border-radius {\n    background: #d66;\n    cursor: pointer;\n}`,\n        `:host[data-able-roundable] .line.direction {\n    cursor: pointer;\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\n        const {\n            target,\n            width,\n            height,\n            allMatrix,\n            is3d,\n            left,\n            top,\n            borderRadiusState,\n        } = moveable.state;\n        const {\n            minRoundControls = [0, 0],\n            maxRoundControls = [4, 4],\n            zoom,\n        } = moveable.props;\n\n        if (!target) {\n            return null;\n        }\n\n        const n = is3d ? 4 : 3;\n        const radiusValues = getBorderRadius(\n            target, width, height, minRoundControls, borderRadiusState);\n\n        if (!radiusValues) {\n            return null;\n        }\n        let verticalCount = 0;\n        let horizontalCount = 0;\n\n        return radiusValues.map((v, i) => {\n            horizontalCount += Math.abs(v.horizontal);\n            verticalCount += Math.abs(v.vertical);\n            const pos = minus(calculatePosition(allMatrix, v.pos, n), [left, top]);\n            const isDisplay = v.vertical\n                ? verticalCount <= maxRoundControls[1]\n                : horizontalCount <= maxRoundControls[0];\n\n            return <div key={`borderRadiusControl${i}`}\n                className={prefix(\"control\", \"border-radius\")}\n                data-radius-index={i}\n                style={{\n                    display: isDisplay ? \"block\" : \"none\",\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (!e.inputEvent || e.isRequest) {\n            return false;\n        }\n        const className = (e.inputEvent.target.getAttribute(\"class\") || \"\");\n\n        return className.indexOf(\"border-radius\") > -1\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { inputEvent, datas } = e;\n        const inputTarget = inputEvent.target;\n        const className = (inputTarget.getAttribute(\"class\") || \"\");\n        const isControl = className.indexOf(\"border-radius\") > -1;\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n        const lineIndex = isLine ? parseInt(inputTarget.getAttribute(\"data-line-index\"), 10) : -1;\n\n        if (!isControl && !isLine) {\n            return false;\n        }\n\n        const result = triggerEvent(\n            moveable, \"onRoundStart\", fillParams<OnRoundStart>(moveable, e, {}));\n\n        if (result === false) {\n            return false;\n        }\n\n        datas.lineIndex = lineIndex;\n        datas.controlIndex = controlIndex;\n        datas.isControl = isControl;\n        datas.isLine = isLine;\n\n        setDragStart(moveable, e);\n\n        const {\n            roundRelative,\n            minRoundControls = [0, 0],\n        } = moveable.props;\n        const state = moveable.state;\n        const {\n            target,\n            width,\n            height,\n        } = state;\n\n        datas.isRound = true;\n        datas.prevDist = [0, 0];\n        const controlPoses = getBorderRadius(target!, width, height, minRoundControls) || [];\n\n        datas.controlPoses = controlPoses;\n\n        state.borderRadiusState = getRadiusStyles(\n            controlPoses.map(pos => pos.pos), controlPoses, roundRelative!, width, height).styles.join(\" \");\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRound || !datas.isControl || !datas.controlPoses.length) {\n            return false;\n        }\n        const index = datas.controlIndex as number;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const [distX, distY] = getDragDist(e);\n        const dist = [distX, distY];\n        const delta = minus(dist, datas.prevDist);\n        const {\n            maxRoundControls = [4, 4],\n        } = moveable.props;\n        const { width, height } = moveable.state;\n        const selectedControlPose = controlPoses[index];\n        const selectedVertical = selectedControlPose.vertical;\n        const selectedHorizontal = selectedControlPose.horizontal;\n\n        // 0: [0, 1, 2, 3] maxCount === 1\n        // 0: [0, 2] maxCount === 2\n        // 1: [1, 3] maxCount === 2\n\n        // 0: [0] maxCount === 3\n        // 1: [1, 3] maxCount === 3\n\n        const dists = controlPoses.map(pose => {\n            const { horizontal, vertical } = pose;\n            const poseDist = [\n                horizontal * selectedHorizontal * dist[0],\n                vertical * selectedVertical * dist[1],\n            ];\n            if (horizontal) {\n                if (maxRoundControls[0] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n                    return poseDist;\n                }\n            } else if (maxRoundControls[1] === 0) {\n                poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n\n                return poseDist;\n            } else if (selectedVertical) {\n                if (maxRoundControls[1] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n                    return poseDist;\n                }\n            }\n            return [0, 0];\n        });\n        dists[index] = dist;\n        const nextPoses = controlPoses.map((pos, i) => plus(pos.pos, dists[i]));\n\n        datas.prevDist = [distX, distY];\n\n        triggerRoundEvent(\n            moveable,\n            e,\n            dist,\n            delta,\n            controlPoses,\n            nextPoses,\n        );\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const state = moveable.state;\n\n        state.borderRadiusState = \"\";\n        const { datas, isDouble } = e;\n        if (!datas.isRound) {\n            return false;\n        }\n        const {\n            width,\n            height,\n        } = state;\n        const {\n            isControl,\n            controlIndex,\n            isLine,\n            lineIndex,\n        } = datas;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const poses = controlPoses.map(pos => pos.pos);\n        const length = poses.length;\n        const {\n            roundClickable = true,\n        } = moveable.props;\n\n        if (isDouble && roundClickable) {\n            if (isControl) {\n                removeRadiusPos(controlPoses, poses, controlIndex, 0);\n            } else if (isLine) {\n                const [distX, distY] = calculatePointerDist(moveable, e);\n\n                addBorderRadius(controlPoses, poses, lineIndex, distX, distY, width, height);\n            }\n            if (length !== controlPoses.length) {\n                triggerRoundEvent(\n                    moveable,\n                    e,\n                    [0, 0],\n                    [0, 0],\n                    controlPoses,\n                    poses,\n                );\n            }\n        }\n        triggerEvent(moveable, \"onRoundEnd\",\n            fillEndParams<OnRoundEnd>(moveable, e, {}));\n        state.borderRadiusState = \"\";\n        return true;\n    },\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        moveable.state.borderRadiusState = \"\";\n    },\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * @property - Whether you can add/delete round controls by double-clicking a line or control. (default: true)\n * @name Moveable.Roundable#roundClickable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    MoveableManagerInterface, BeforeRenderableProps,\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd,\n} from \"../types\";\nimport { fillParams, triggerEvent } from \"../utils\";\nimport { convertMatrixtoCSS, createIdentityMatrix } from \"@scena/matrix\";\nimport { isArray, splitSpace } from \"@daybrush/utils\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction isIdentityMatrix(matrix: string, is3d?: boolean) {\n    const value = is3d ? `matrix3d(${createIdentityMatrix(4)}` : `matrix(${createIdentityMatrix(3)})`;\n\n    return matrix === value || matrix === `matrix(1,0,0,1,0,0)`;\n}\nexport default {\n    isPinch: true,\n    name: \"beforeRenderable\",\n    props: {\n    } as const,\n    events: {\n        onBeforeRenderStart: \"beforeRenderStart\",\n        onBeforeRender: \"beforeRender\",\n        onBeforeRenderEnd: \"beforeRenderEnd\",\n        onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n        onBeforeRenderGroup: \"beforeRenderGroup\",\n        onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        const {\n            is3d,\n            target,\n            targetMatrix,\n        } = moveable.state;\n        const transform = target?.style.transform;\n        const cssMatrix = is3d\n            ? `matrix3d(${targetMatrix.join(\",\")})`\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\n        const startTransform = !transform || transform === \"none\" ? cssMatrix : transform;\n\n        e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\n    },\n    resetTransform(e: any) {\n        e.datas.nextTransforms = e.datas.startTransforms;\n        e.datas.nextTransformAppendedIndexes = [];\n    },\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\n            setTransform: (transform: string | string[]) => {\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            },\n            isPinch: !!e.isPinch,\n        });\n    },\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        });\n    },\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.setTransform(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\n    },\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.resetTransform(e);\n\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragStart(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.setTransform(childMoveable, childEvent);\n            return this.fillDragStartParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            setTransform() { },\n            events: params,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.drag(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.resetTransform(childEvent);\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragEnd(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import { getNextTransformText } from \"../gesto/GestoUtils\";\nimport { fillChildEvents } from \"../groupUtils\";\nimport {\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\n    OnRenderEnd, MoveableGroupInterface,\n    OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\n\nexport default {\n    name: \"renderable\",\n    props: {\n    } as const,\n    events: {\n        onRenderStart: \"renderStart\",\n        onRender: \"render\",\n        onRenderEnd: \"renderEnd\",\n        onRenderGroupStart: \"renderGroupStart\",\n        onRenderGroup: \"renderGroup\",\n        onRenderGroupEnd: \"renderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRender`, this.fillDragParams(moveable, e));\n    },\n    dragAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        if (e.resultCount) {\n            return this.drag(moveable, e);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderEnd`, this.fillDragEndParams(moveable, e));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            transform: getNextTransformText(e),\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragEndParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragAfter(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n    fillDragParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n            transform: getNextTransformText(e),\n        });\n    },\n    fillDragEndParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        });\n    },\n} as const;\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { convertDragDist, defaultSync } from \"../utils\";\nimport Gesto from \"gesto\";\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\nimport Renderable from \"../ables/Renderable\";\n\nexport function triggerAble(\n    moveable: MoveableManagerInterface,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    requestInstant?: boolean,\n) {\n    const isStart = eventType === \"Start\";\n    const target = moveable.state.target;\n    const isRequest = e.isRequest;\n\n    if (\n        !target\n        || (isStart && eventAffix.indexOf(\"Control\") > -1\n            && !isRequest && moveable.areaElement === e.inputEvent.target)\n    ) {\n        return false;\n    }\n    // \"drag\" \"Control\" \"After\"\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType === \"After\";\n    const isFirstStart = isStart && (\n        !moveable.targetGesto || !moveable.controlGesto\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\n    );\n\n    if (isFirstStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    if (eventType === \"\" && !isRequest) {\n        convertDragDist(moveable.state, e);\n    }\n    // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Able[] = [...(moveable as any)[ableType]];\n\n    if (isRequest) {\n        const requestAble = e.requestAble;\n\n        if (!ables.some(able => able.name === requestAble)) {\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\n        }\n    }\n    if (!ables.length) {\n        return false;\n    }\n    const eventAbles: Able[] = [BeforeRenderable, ...ables, Renderable].filter((able: any) => able[eventName]);\n    const datas = e.datas;\n\n    if (isFirstStart) {\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n\n    const inputEvent = e.inputEvent;\n    let inputTarget: Element;\n\n    if (isEnd && inputEvent) {\n        inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n    }\n    let resultCount = 0;\n    const results = eventAbles.filter((able: any) => {\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (isStart) {\n            nextDatas.isEventStart = !able[conditionName] || able[conditionName](moveable, e);\n        }\n\n        if (nextDatas.isEventStart) {\n            const result = able[eventName](moveable, {\n                ...e,\n                resultCount,\n                datas: nextDatas,\n                originalDatas: datas,\n                inputTarget,\n            });\n\n            (moveable as any)._emitter.off();\n            if (isStart && result === false) {\n                nextDatas.isEventStart = false;\n            }\n            resultCount += result ? 1 : 0;\n            return result;\n        }\n        return false;\n    });\n\n    const isUpdate = results.length;\n    let isForceEnd = false;\n\n    // end ables\n    if (isStart && eventAbles.length && !isUpdate) {\n        isForceEnd = eventAbles.filter(able => {\n            const ableName = able.name;\n            const nextDatas = datas[ableName];\n\n            if (nextDatas.isEventStart) {\n                if (able.dragRelation === \"strong\") {\n                    // cancel drag\n                    nextDatas.isEventStart = false;\n\n                    return false;\n                }\n                // start drag\n                return true;\n            }\n            // cancel event\n            return false;\n        }).length === 0;\n    }\n    if (isEnd || isForceEnd) {\n        moveable.state.gesto = null;\n\n        if ((moveable as MoveableGroupInterface).moveables) {\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\n                childMoveable.state.gesto = null;\n            });\n        }\n    }\n    if (isFirstStart && isForceEnd) {\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    if (isStart && !isRequest && isUpdate) {\n        e?.preventDefault();\n    }\n    if (moveable.isUnmounted || isForceEnd) {\n        return false;\n    }\n    if ((!isStart && isUpdate && !requestInstant) || isEnd) {\n        const flushSync = moveable.props.flushSync || defaultSync;\n\n        flushSync(() => {\n            moveable.updateRect(isEnd ? eventType : \"\", true, false);\n            moveable.forceUpdate();\n        });\n\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n    }\n    return true;\n}\n\nexport function getTargetAbleGesto(\n    moveable: MoveableManagerInterface,\n    moveableTarget: HTMLElement | SVGElement,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox.getElement();\n    const targets: Array<HTMLElement | SVGElement> = [];\n\n    targets.push(controlBox);\n\n    if (!moveable.props.dragArea || moveable.props.dragTarget) {\n        targets.push(moveableTarget);\n    }\n\n    const startFunc = (e: any) => {\n        const eventTarget = e.inputEvent.target;\n        const areaElement = moveable.areaElement;\n\n        return eventTarget === areaElement\n            || (!moveable.isMoveableElement(eventTarget) && !moveable.controlBox.getElement().contains(eventTarget))\n            || hasClass(eventTarget, \"moveable-area\")\n            || hasClass(eventTarget, \"moveable-padding\");\n    };\n\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n        dragStart: startFunc,\n        pinchStart: startFunc,\n    });\n}\nexport function getAbleGesto(\n    moveable: MoveableManagerInterface,\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n) {\n    const {\n        pinchOutside,\n        pinchThreshold,\n    } = moveable.props;\n    const options: IObject<any> = {\n        preventDefault: false,\n        preventRightClick: true,\n        preventWheelClick: true,\n        container: window,\n        pinchThreshold,\n        pinchOutside,\n    };\n    const gesto = new Gesto(target!, options);\n\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n            gesto.on(`${eventOperation}${eventType}` as any, e => {\n                const eventName = e.eventType;\n\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                    e.stop();\n                    return;\n                }\n                const result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n\n                if (!result) {\n                    e.stop();\n                }\n            });\n        });\n    });\n\n    return gesto;\n}\n","import { Able, MoveableManagerInterface } from \"./types\";\n\nexport default class EventManager {\n    private ables: Able[] = [];\n    constructor(\n        private target: HTMLElement | SVGElement | null,\n        private moveable: MoveableManagerInterface | null,\n        private eventName: string,\n    ) {\n        target!.addEventListener(eventName.toLowerCase(), this._onEvent);\n    }\n    public setAbles(ables: Able[]) {\n        this.ables = ables;\n    }\n    public destroy() {\n        this.target!.removeEventListener(this.eventName.toLowerCase(), this._onEvent);\n        this.target = null;\n        this.moveable = null;\n    }\n    private _onEvent = (e: Event) => {\n        const eventName = this.eventName;\n        const moveable = this.moveable!;\n\n        if (moveable.state.disableNativeEvent) {\n            return;\n        }\n        this.ables.forEach(able => {\n            (able as any)[eventName](moveable, {\n                inputEvent: e,\n            });\n        });\n    }\n}\n","import * as React from \"react\";\nimport { createElement } from \"react\";\nimport { PREFIX } from \"./consts\";\nimport {\n    prefix,\n    getTargetInfo,\n    unset,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    flat,\n    groupByMap,\n    calculatePadding,\n    getAbsoluteRotation,\n    defaultSync,\n} from \"./utils\";\nimport Gesto from \"gesto\";\nimport { ref } from \"framework-utils\";\nimport {\n    MoveableManagerProps, MoveableManagerState, Able,\n    RectInfo, Requester, PaddingBox, HitRect, MoveableManagerInterface,\n    MoveableDefaultOptions,\n} from \"./types\";\nimport { triggerAble, getTargetAbleGesto, getAbleGesto } from \"./gesto/getAbleGesto\";\nimport { plus } from \"@scena/matrix\";\nimport { cancelAnimationFrame, getKeys, IObject, removeEvent, requestAnimationFrame } from \"@daybrush/utils\";\nimport { renderLine } from \"./renderDirections\";\nimport { fitPoints, getAreaSize, getOverlapSize, isInside } from \"overlap-area\";\nimport EventManager from \"./EventManager\";\nimport styled from \"react-css-styled\";\nimport EventEmitter from \"@scena/event-emitter\";\n\nexport default class MoveableManager<T = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        dragTarget: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        edge: false,\n        parentMoveable: null,\n        wrapperMoveable: null,\n        parentPosition: null,\n        portalContainer: null,\n        useResizeObserver: false,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        passDragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        triggerAblesSimultaneously: false,\n        padding: {},\n        pinchOutside: true,\n        checkInput: false,\n        groupable: false,\n        hideDefaultLines: false,\n        cspNonce: \"\",\n        translateZ: 0,\n        cssStyled: null,\n        customStyledMap: {},\n        props: {},\n        flushSync: defaultSync,\n    };\n    public state: MoveableManagerState = {\n        container: null,\n        gesto: null,\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n        disableNativeEvent: false,\n        ...getTargetInfo(null),\n    };\n    public enabledAbles: Able[] = [];\n    public targetAbles: Able[] = [];\n    public controlAbles: Able[] = [];\n    public controlBox!: { getElement(): HTMLElement };\n    public areaElement!: HTMLElement;\n    public targetGesto!: Gesto;\n    public controlGesto!: Gesto;\n    public rotation = 0;\n    public scale: number[] = [1, 1];\n    public isUnmounted = false;\n    public events: Record<string, EventManager | null> = {\n        \"mouseEnter\": null,\n        \"mouseLeave\": null,\n    };\n\n    protected _emitter: EventEmitter = new EventEmitter();\n    protected _prevTarget: HTMLElement | SVGElement | null | undefined = null;\n    protected _prevDragArea = false;\n\n    private _observer: ResizeObserver | null = null;\n    private _observerId = 0;\n\n    public render() {\n        const props = this.props;\n        const state = this.state;\n        const {\n            parentPosition, className,\n            target: propsTarget,\n            zoom, cspNonce,\n            translateZ,\n            cssStyled: ControlBoxElement,\n            portalContainer,\n        } = props;\n\n        this.checkUpdate();\n        this.updateRenderPoses();\n\n        const { left: parentLeft, top: parentTop } = parentPosition! || { left: 0, top: 0 };\n        const {\n            left,\n            top,\n            target: stateTarget,\n            direction,\n            hasFixed,\n        } = state;\n        const groupTargets = (props as any).targets;\n        const isDisplay = ((groupTargets && groupTargets.length) || propsTarget) && stateTarget;\n        const isDragging = this.isDragging();\n        const ableAttributes: IObject<boolean> = {};\n        this.getEnabledAbles().forEach(able => {\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\n        });\n        return (\n            <ControlBoxElement\n                cspNonce={cspNonce}\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1\n                    ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${className}`}\n                {...ableAttributes}\n                onClick={this.onPreventClick}\n                portalContainer={portalContainer}\n                style={{\n                    \"position\": hasFixed ? \"fixed\" : \"absolute\",\n                    \"display\": isDisplay ? \"block\" : \"none\",\n                    \"transform\": `translate3d(${left - parentLeft}px, ${top - parentTop}px, ${translateZ})`,\n                    \"--zoom\": zoom,\n                    \"--zoompx\": `${zoom}px`,\n                }}>\n                {this.renderAbles()}\n                {this._renderLines()}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.isUnmounted = false;\n        this.controlBox.getElement();\n        const props = this.props;\n        const { parentMoveable, container, wrapperMoveable } = props;\n\n        this._updateTargets();\n        this._updateNativeEvents();\n        this._updateEvents();\n\n        if (!container && !parentMoveable && !wrapperMoveable) {\n            this.updateRect(\"\", false, true);\n        }\n        this.updateCheckInput();\n        this._updateObserver(this.props);\n    }\n    public componentDidUpdate(prevProps: any) {\n        this._updateNativeEvents();\n        this._updateEvents();\n        this._updateTargets();\n        this.updateCheckInput();\n        this._updateObserver(prevProps);\n    }\n    public componentWillUnmount() {\n        this.isUnmounted = true;\n        this._emitter.off();\n        unset(this, \"targetGesto\");\n        unset(this, \"controlGesto\");\n\n        const events = this.events;\n        for (const name in events) {\n            const manager = events[name];\n            manager && manager.destroy();\n        }\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, wrapperMoveable, container } = this.props;\n\n        return container!\n            || (wrapperMoveable && wrapperMoveable.getContainer())\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.getElement().parentElement!;\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: Element) {\n        return target && (target.getAttribute(\"class\") || \"\").indexOf(PREFIX) > -1;\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent) {\n        const targetGesto = this.targetGesto;\n\n        if (targetGesto && !targetGesto.isFlag()) {\n            targetGesto.triggerDragStart(e);\n        }\n        return this;\n    }\n    /**\n     * Hit test an element or rect on a moveable target.\n     * @method Moveable#hitTest\n     * @param - element or rect to test\n     * @return - Get hit test rate (rate > 0 is hitted)\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.hitTest(e.target) > 0) {\n     *          console.log(\"hiited\");\n     *     }\n     * });\n     */\n    public hitTest(el: Element | HitRect): number {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return 0;\n        }\n        let rect: Required<HitRect>;\n\n        if (el instanceof Element) {\n            const clientRect = el.getBoundingClientRect();\n\n            rect = {\n                left: clientRect.left,\n                top: clientRect.top,\n                width: clientRect.width,\n                height: clientRect.height,\n            };\n        } else {\n            rect = { width: 0, height: 0, ...el };\n        }\n\n        const {\n            left: rectLeft,\n            top: rectTop,\n            width: rectWidth,\n            height: rectHeight,\n        } = rect;\n        const points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n        const size = getOverlapSize(points, [\n            [rectLeft, rectTop],\n            [rectLeft + rectWidth, rectTop],\n            [rectLeft + rectWidth, rectTop + rectHeight],\n            [rectLeft, rectTop + rectHeight],\n        ]);\n        const totalSize = getAreaSize(points);\n\n        if (!size || !totalSize) {\n            return 0;\n        }\n\n        return Math.min(100, size / totalSize * 100);\n    }\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number) {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || this.props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? parentMoveable.props.rootContainer\n            : props.rootContainer;\n        this.updateState(\n            getTargetInfo(this.controlBox && this.controlBox.getElement(),\n                target, container, container,\n                rootContainer || container,\n                // isTarget ? state : undefined\n            ),\n            parentMoveable ? false : isSetState,\n        );\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging() {\n        return (this.targetGesto ? this.targetGesto.isFlag() : false)\n            || (this.controlGesto ? this.controlGesto.isFlag() : false);\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @method Moveable#updateTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        const transformOrigin = state.transformOrigin;\n\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n            transformOrigin,\n            rotation: this.getRotation(),\n        };\n    }\n    /**\n     * Get a manager that manages the moveable's state and props.\n     * @method Moveable#getManager\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const manager = moveable.getManager(); // real moveable class instance\n     */\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this as any;\n    }\n    public getRotation() {\n        const {\n            pos1,\n            pos2,\n            direction,\n        } = this.state;\n\n        return getAbsoluteRotation(pos1, pos2, direction);\n    }\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n     * @param - ableName\n     * @param - request to be able params.\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const requestInstant = isInstant || param.isInstant;\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n            requestEnd() {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            requestAble: ableName,\n            isRequest: true,\n        }, requestInstant);\n\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.componentWillUnmount();\n    }\n    public updateRenderPoses() {\n        const state = this.state;\n        const props = this.props;\n        const {\n            originalBeforeOrigin, transformOrigin,\n            allMatrix, is3d, pos1, pos2, pos3, pos4,\n            left: stateLeft, top: stateTop,\n        } = state;\n        const {\n            left = 0,\n            top = 0,\n            bottom = 0,\n            right = 0,\n        } = (props.padding || {}) as PaddingBox;\n        const n = is3d ? 4 : 3;\n        const absoluteOrigin = (props as any).groupable\n            ? originalBeforeOrigin : plus(originalBeforeOrigin, [stateLeft, stateTop]);\n\n        state.renderPoses = [\n            plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)),\n            plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n)),\n        ];\n    }\n    public checkUpdate() {\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isChanged = !equals(stateTarget, target) || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n        const moveableContainer = container || this.controlBox;\n\n        if (moveableContainer) {\n            this.unsetAbles();\n        }\n        this.updateState({ target, container });\n\n        if (!parentMoveable && moveableContainer) {\n            this.updateRect(\"End\", false, false);\n        }\n    }\n    public triggerEvent(name: string, e: any): any {\n        this._emitter.trigger(name, e);\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    public useCSS(tag: string, css: string) {\n        const customStyleMap = this.props.customStyledMap as Record<string, any>;\n\n        const key = tag + css;\n\n        if (!customStyleMap[key]) {\n            customStyleMap[key] = styled(tag, css);\n        }\n        return customStyleMap[key];\n    }\n    public onPreventClick = (e: any) => {\n        e.stopPropagation();\n        e.preventDefault();\n        removeEvent(window, \"click\", this.onPreventClick, true);\n    }\n    public checkUpdateRect = () => {\n        if (this.isDragging()) {\n            return;\n        }\n        const parentMoveable = this.props.parentMoveable;\n\n        if (parentMoveable) {\n            (parentMoveable as MoveableManager).checkUpdateRect();\n            return;\n        }\n        cancelAnimationFrame(this._observerId);\n        this._observerId = requestAnimationFrame(() => {\n            if (this.isDragging()) {\n                return;\n            }\n            this.updateRect();\n        });\n    }\n    protected unsetAbles() {\n        this.targetAbles.forEach(able => {\n            if (able.unset) {\n                able.unset(this);\n            }\n        });\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = ables!.filter(able => able && (\n            (able.always && props[able.name] !== false)\n            || props[able.name]));\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.enabledAbles = enabledAbles;\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            if (this.isUnmounted) {\n                return;\n            }\n            this.setState(nextState);\n        } else {\n            const state = this.state;\n\n            for (const name in nextState) {\n                (state as any)[name] = nextState[name];\n            }\n        }\n    }\n    protected getEnabledAbles() {\n        const props = this.props as any;\n        const ables: Able[] = props.ables!;\n        return ables.filter(able => able && props[able.name]);\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const Renderer = {\n            createElement,\n        };\n\n        return groupByMap(flat<any>(\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n                return render!(this, Renderer) || [];\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n    protected updateCheckInput() {\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n    }\n    protected _updateObserver(prevProps: MoveableDefaultOptions) {\n        const props = this.props;\n        const target = props.target;\n\n        if (!window.ResizeObserver || !target || !props.useResizeObserver) {\n            this._observer?.disconnect();\n            return;\n        }\n\n\n        if (prevProps.target === target && this._observer) {\n            return;\n        }\n\n        const observer = new ResizeObserver(this.checkUpdateRect);\n\n        observer.observe(target!, {\n            box: \"border-box\",\n        });\n        this._observer = observer;\n\n        return;\n    }\n    protected _updateEvents() {\n        const controlBoxElement = this.controlBox.getElement();\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const isUnset = (!hasTargetAble && this.targetGesto)\n            || this._isTargetChanged(true);\n\n        if (isUnset) {\n            unset(this, \"targetGesto\");\n            this.updateState({ gesto: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlGesto\");\n        }\n\n        if (target && hasTargetAble && !this.targetGesto) {\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\n        }\n        if (!this.controlGesto && hasControlAble) {\n            this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n        }\n    }\n    protected _updateTargets() {\n        const props = this.props;\n\n        this._prevTarget = props.dragTarget || props.target;\n        this._prevDragArea = props.dragArea!;\n    }\n    private _renderLines() {\n        const props = this.props;\n        const {\n            edge,\n            zoom,\n            hideDefaultLines,\n        } = props;\n\n        if (hideDefaultLines) {\n            return [];\n        }\n        const renderPoses = this.state.renderPoses;\n        const Renderer = {\n            createElement,\n        };\n        return [\n            renderLine(Renderer, edge ? \"n\" : \"\", renderPoses[0], renderPoses[1], zoom!, 0),\n            renderLine(Renderer, edge ? \"e\" : \"\", renderPoses[1], renderPoses[3], zoom!, 1),\n            renderLine(Renderer, edge ? \"w\" : \"\", renderPoses[0], renderPoses[2], zoom!, 2),\n            renderLine(Renderer, edge ? \"s\" : \"\", renderPoses[2], renderPoses[3], zoom!, 3),\n        ];\n    }\n    private _isTargetChanged(useDragArea?: boolean) {\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const prevTarget = this._prevTarget;\n        const prevDragArea = this._prevDragArea;\n        const dragArea = props.dragArea;\n\n        // check target without dragArea\n        const isTargetChanged = !dragArea && prevTarget !== target;\n        const isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\n\n        return isTargetChanged || isDragAreaChanged;\n    }\n    private _updateNativeEvents() {\n        const props = this.props;\n        const target = props.dragArea ? this.areaElement : this.state.target;\n        const events = this.events;\n        const eventKeys = getKeys(events);\n\n        if (this._isTargetChanged()) {\n            for (const eventName in events) {\n                const manager = events[eventName];\n                manager && manager.destroy();\n                events[eventName] = null;\n            }\n        }\n        if (!target) {\n            return;\n        }\n        const enabledAbles = this.enabledAbles;\n        eventKeys.forEach(eventName => {\n            const ables = filterAbles(enabledAbles, [eventName] as any);\n            const hasAbles = ables.length > 0;\n            let manager = events[eventName];\n\n            if (!hasAbles) {\n                if (manager) {\n                    manager.destroy();\n                    events[eventName] = null;\n                }\n                return;\n            }\n            if (!manager) {\n                manager = new EventManager(target, this, eventName);\n                events[eventName] = manager;\n            }\n            manager.setAbles(ables);\n        });\n    }\n}\n\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Zooms in the elements of a moveable.\n * @name Moveable#zoom\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Whether the target size is detected and updated whenever it changes.\n * @name Moveable#zoom\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.useResizeObserver = true;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox.\n * @name Moveable#className\n * @default \"\"\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s)\n * @name Moveable#dragTarget\n * @default target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n","import { refs } from \"framework-utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { Renderer, MoveableGroupInterface } from \"../types\";\n\nexport default {\n    name: \"groupable\",\n    props: {\n        defaultGroupRotate: Number,\n        defaultGroupOrigin: String,\n        groupable: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableGroupInterface, React: Renderer): any[] {\n        const targets = moveable.props.targets || [];\n\n        moveable.moveables = [];\n        const { left, top } = moveable.state;\n        const position = { left, top };\n        const props = moveable.props;\n\n        return targets.map((target, i) => {\n            return <MoveableManager\n                key={\"moveable\" + i}\n                ref={refs(moveable, \"moveables\", i)}\n                target={target}\n                origin={false}\n                cssStyled={props.cssStyled}\n                customStyledMap={props.customStyledMap}\n                useResizeObserver={props.useResizeObserver}\n                parentMoveable={moveable}\n                parentPosition={position}\n            />;\n        });\n    },\n};\n","import {\n    MoveableManagerInterface, MoveableGroupInterface,\n    ClickableProps, OnClick, OnClickGroup,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { addEvent, findIndex, removeEvent, requestAnimationFrame } from \"@daybrush/utils\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"clickable\", {\n    props: {\n        clickable: Boolean,\n        preventClickDefault: Boolean,\n    },\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    always: true,\n    dragRelation: \"weak\",\n    dragStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        if (!e.isRequest) {\n            addEvent(window, \"click\", moveable.onPreventClick, true);\n        }\n    },\n    dragControlStart(moveable: MoveableManagerInterface, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragStart(moveable, e);\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.endEvent(moveable);\n        const target = moveable.state.target!;\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        const isMoveableElement = moveable.isMoveableElement(inputTarget);\n        const containsElement = !isMoveableElement && moveable.controlBox.getElement().contains(inputTarget);\n\n        if ((!moveable.props.preventClickDefault && !e.isDrag) || containsElement) {\n            this.unset(moveable);\n        }\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            || containsElement\n            // External event duplicate target or dragAreaElement\n        ) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            isDouble: e.isDouble,\n            inputTarget,\n            isTarget: target === inputTarget,\n            containsTarget,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\n        this.endEvent(moveable);\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n            || e.datas.inputTarget === inputTarget\n        ) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\n            isDouble: e.isDouble,\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n        }));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n    endEvent(moveable: MoveableManagerInterface<ClickableProps>) {\n        requestAnimationFrame(() => {\n            this.unset(moveable);\n        });\n    },\n    unset(moveable: MoveableManagerInterface<ClickableProps>) {\n        removeEvent(window, \"click\", moveable.onPreventClick, true);\n    },\n});\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n","import { hasClass } from \"@daybrush/utils\";\nimport { DraggableProps, MoveableGroupInterface, MoveableManagerInterface } from \"../types\";\nimport { prefix } from \"../utils\";\nimport Draggable from \"./Draggable\";\nimport { makeAble } from \"./AbleManager\";\n\nfunction getDraggableEvent(e: any) {\n    let datas = e.originalDatas.draggable;\n    if (!datas) {\n        e.originalDatas.draggable = {};\n        datas = e.originalDatas.draggable;\n    }\n    return { ...e, datas };\n}\nexport default makeAble(\"edgeDraggable\", {\n    dragControlCondition(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.dragStart(moveable, getDraggableEvent(e));\n    },\n    dragControl(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.drag(moveable, getDraggableEvent(e));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragEnd(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlCondition(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroup(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n    },\n    unset(moveable: any) {\n        return Draggable.unset(moveable);\n    },\n});\n\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n","export default {\n    name: \"individualGroupable\",\n    props: {\n        individualGroupable: Boolean,\n    } as const,\n    events: {} as const,\n} as const;\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\nimport Padding from \"./Padding\";\nimport Clippable from \"./Clippable\";\nimport OriginDraggable from \"./OriginDraggable\";\nimport Roundable from \"./Roundable\";\nimport { UnionToIntersection } from \"../types\";\nimport { invertObject } from \"../utils\";\nimport Groupable from \"./Groupable\";\nimport BeforeRenderable from \"./BeforeRenderable\";\nimport Renderable from \"./Renderable\";\nimport Clickable from \"./Clickable\";\nimport edgeDraggable from \"./edgeDraggable\";\nimport IndividualGroupable from \"./IndividualGroupable\";\n\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\n    BeforeRenderable,\n    Default, Snappable, Pinchable, Draggable, edgeDraggable, Rotatable,\n    Resizable, Scalable, Warpable, Scrollable, Padding, Origin,\n    OriginDraggable,\n    Clippable, Roundable, Groupable, IndividualGroupable,\n    Clickable,\n    DragArea,\n    Renderable,\n] as const;\n\nexport const MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...(\"events\" in able ? able.events : {})};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"events\"]>;\nexport const MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.props};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"props\"]>;\n\nexport const MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nexport const MOVEABLE_EVENTS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_EVENTS_MAP);\nexport const MOVEABLE_PROPS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_PROPS_MAP);\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, RectInfo } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport { getTargetInfo, getAbsolutePosesByState, equals, unset } from \"./utils\";\nimport { minus, plus, rotate } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { throttle } from \"@daybrush/utils\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getGroupRect(moveables: MoveableManager[], rotation: number) {\n    if (!moveables.length) {\n        return [0, 0, 0, 0];\n    }\n\n    const moveablePoses = moveables.map(({ state }) => getAbsolutePosesByState(state));\n    let minX = MAX_NUM;\n    let minY = MAX_NUM;\n    let groupWidth = 0;\n    let groupHeight = 0;\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = fixedRotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        const b1MinMax = [MIN_NUM, MAX_NUM];\n        const b2MinMax = [MIN_NUM, MAX_NUM];\n\n        moveablePoses.forEach(poses => {\n            poses.forEach(pos => {\n                // ax + b = y\n                // b = y - ax\n                const b1 = pos[1] - a1 * pos[0];\n                const b2 = pos[1] - a2 * pos[0];\n\n                b1MinMax[0] = Math.max(b1MinMax[0], b1);\n                b1MinMax[1] = Math.min(b1MinMax[1], b1);\n                b2MinMax[0] = Math.max(b2MinMax[0], b2);\n                b2MinMax[1] = Math.min(b2MinMax[1], b2);\n            });\n        });\n\n        b1MinMax.forEach(b1 => {\n            // a1x + b1 = a2x + b2\n            b2MinMax.forEach(b2 => {\n                // (a1 - a2)x = b2 - b1\n                const x = (b2 - b1) / (a1 - a2);\n                const y = a1 * x + b1;\n\n                minX = Math.min(minX, x);\n                minY = Math.min(minY, y);\n            });\n        });\n        const rotatePoses = moveablePoses.map(([pos1, pos2, pos3, pos4]) => {\n            return [\n                rotate(pos1, -rad),\n                rotate(pos2, -rad),\n                rotate(pos3, -rad),\n                rotate(pos4, -rad),\n            ];\n        });\n\n        groupWidth = getMaxPos(rotatePoses, 0) - getMinPos(rotatePoses, 0);\n        groupHeight = getMaxPos(rotatePoses, 1) - getMinPos(rotatePoses, 1);\n    } else {\n        minX = getMinPos(moveablePoses, 0);\n        minY = getMinPos(moveablePoses, 1);\n        groupWidth = getMaxPos(moveablePoses, 0) - minX;\n        groupHeight = getMaxPos(moveablePoses, 1) - minY;\n\n        if (fixedRotation % 180) {\n            const changedWidth = groupWidth;\n\n            groupWidth = groupHeight;\n            groupHeight = changedWidth;\n        }\n    }\n    return [minX, minY, groupWidth, groupHeight];\n}\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\nclass MoveableGroup extends MoveableManager<GroupableProps> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n        defaultGroupOrigin: \"50% 50%\",\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public transformOrigin = \"50% 50%\";\n\n    public checkUpdate() {\n        this.updateAbles();\n    }\n\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState = true) {\n        if (!this.controlBox) {\n            return;\n        }\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const state = this.state;\n        const props = this.props;\n        const target = state.target! || props.target!;\n\n        if (!isTarget || (type !== \"\" && props.updateGroup)) {\n            // reset rotataion\n            this.rotation = props.defaultGroupRotate!;\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n            this.scale = [1, 1];\n\n        }\n        const rotation = this.rotation;\n        const scale = this.scale;\n        const [left, top, width, height] = getGroupRect(this.moveables, rotation);\n\n        // tslint:disable-next-line: max-line-length\n        const transform = `rotate(${rotation}deg) scale(${scale[0] >= 0 ? 1 : -1}, ${scale[1] >= 0 ? 1 : -1})`;\n        target.style.cssText += `left:0px;top:0px; transform-origin: ${this.transformOrigin}; width:${width}px; height:${height}px;`\n            + `transform:${transform}`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getTargetInfo(\n            this.controlBox.getElement(),\n            target,\n            this.controlBox.getElement(),\n            this.getContainer(),\n            this.props.rootContainer || container,\n            // state,\n        );\n        const pos = [info.left!, info.top!];\n        const [\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        ] = getAbsolutePosesByState(info); // info.left + info.pos(1 ~ 4)\n\n        const minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n        const delta = [minPos.minX, minPos.minY];\n        info.pos1 = minus(pos1, delta);\n        info.pos2 = minus(pos2, delta);\n        info.pos3 = minus(pos3, delta);\n        info.pos4 = minus(pos4, delta);\n        info.left = left - info.left! + delta[0];\n        info.top = top - info.top! + delta[1];\n        info.origin = minus(plus(pos, info.origin!), delta);\n        info.beforeOrigin = minus(plus(pos, info.beforeOrigin!), delta);\n        info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin!);\n        // info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\n\n        const clientRect = info.targetClientRect!;\n        const direction = scale[0] * scale[1] > 0 ? 1 : -1;\n\n        clientRect.top += info.top - state.top;\n        clientRect.left += info.left - state.left;\n\n        target.style.transform = `translate(${-delta[0]}px, ${-delta[1]}px) ${transform}`;\n\n        this.updateState(\n            {\n                ...info,\n                direction,\n                beforeDirection: direction,\n            },\n            isSetState,\n        );\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\n        if (isManager || name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        } else {\n            this._emitter.trigger(name, e);\n        }\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n    protected _updateTargets() {\n        super._updateTargets();\n        this._prevTarget = this.props.dragTarget || this.areaElement;\n    }\n    protected _updateEvents() {\n        const state = this.state;\n        const props = this.props;\n\n        const prevTarget = this._prevTarget;\n        const nextTarget = props.dragTarget || this.areaElement;\n\n        if (prevTarget !== nextTarget) {\n            unset(this, \"targetGesto\");\n            unset(this, \"controlGesto\");\n            state.target = null;\n        }\n        if (!state.target) {\n            state.target = this.areaElement;\n            this.controlBox.getElement().style.display = \"block\";\n        }\n        if (state.target) {\n            if (!this.targetGesto) {\n                this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n            }\n            if (!this.controlGesto) {\n                this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n            }\n        }\n        const isContainerChanged = !equals(state.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const { added, changed, removed } = this.differ.update(props.targets!);\n\n        if (isContainerChanged || added.length || changed.length || removed.length) {\n            this.updateRect();\n        }\n    }\n    protected _updateObserver() {}\n}\n\n/**\n * Sets the initial rotation of the group. (default 0)\n * @name Moveable.Group#defaultGroupRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupRotate: 0,\n * });\n *\n * moveable.defaultGroupRotate = 40;\n */\n\n/**\n * Sets the initial origin of the group. (default 0)\n * @name Moveable.Group#defaultGroupOrigin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupOrigin: \"50% 50%\",\n * });\n *\n * moveable.defaultGroupOrigin = \"20% 40%\";\n */\nexport default MoveableGroup;\n","import { ref, refs } from \"framework-utils\";\nimport * as React from \"react\";\nimport MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, RectInfo } from \"./types\";\nimport { prefix } from \"./utils\";\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\nclass MoveableIndividualGroup extends MoveableManager<GroupableProps> {\n    public moveables: MoveableManager[] = [];\n    public render() {\n        const {\n            cspNonce,\n            cssStyled: ControlBoxElement,\n            targets,\n        } = this.props;\n\n        return <ControlBoxElement\n            cspNonce={cspNonce}\n            ref={ref(this, \"controlBox\")}\n            className={prefix(\"control-box\")}>\n            {targets!.map((target, i) => {\n                return <MoveableManager\n                    key={\"moveable\" + i}\n                    ref={refs(this, \"moveables\", i)}\n                    {...this.props}\n                    target={target}\n                    wrapperMoveable={this}\n                />;\n            })}\n        </ControlBoxElement>;\n    }\n    public componentDidUpdate() {}\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, isTarget, isSetState);\n        });\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public request() {\n        return {\n            request() {\n                return this;\n            },\n            requestEnd() {\n                return this;\n            },\n        };\n    }\n    public dragStart() {\n        return this;\n    }\n    public hitTest() {\n        return 0;\n    }\n    public isInside() {\n        return false;\n    }\n    public isDragging() {\n        return false;\n    }\n    public updateRenderPoses() { }\n    public checkUpdate() { }\n    public triggerEvent() { }\n    protected updateAbles() { }\n    protected _updateEvents() { }\n    protected _updateObserver() {}\n}\n\n/**\n * Create targets individually, not as a group.\n * @name Moveable.IndividualGroup#individualGroupable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   individualGroupable: true,\n * });\n */\nexport default MoveableIndividualGroup;\n","import * as React from \"react\";\nimport {\n    Able, MoveableInterface, GroupableProps, MoveableDefaultProps,\n    IndividualGroupableProps, MoveableManagerInterface,\n} from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\nimport { getKeys, IObject, isString } from \"@daybrush/utils\";\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\nimport Default from \"./ables/Default\";\nimport Groupable from \"./ables/Groupable\";\nimport DragArea from \"./ables/DragArea\";\nimport styled from \"react-css-styled\";\nimport { getRefTargets, getElementTargets } from \"./utils\";\nimport IndividualGroupable from \"./ables/IndividualGroupable\";\nimport MoveableIndividualGroup from \"./MoveableIndividualGroup\";\n\n\nexport class InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & IndividualGroupableProps & T> {\n    public static defaultAbles: Able[] = [];\n    public static customStyledMap: Record<string, any> = {};\n    public static defaultStyled: any = null;\n    public static makeStyled() {\n        const cssMap: IObject<boolean> = {};\n\n        const ables = this.getTotalAbles();\n        ables.forEach(({ css }: Able) => {\n            if (!css) {\n                return;\n            }\n            css.forEach(text => {\n                cssMap[text] = true;\n            });\n        });\n        const style = getKeys(cssMap).join(\"\\n\");\n\n        this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n    }\n    public static getTotalAbles(): Able[] {\n\n        return [Default, Groupable, IndividualGroupable, DragArea, ...this.defaultAbles];\n    }\n    @withMethods(MOVEABLE_METHODS)\n    public moveable!: MoveableManager | MoveableGroup | MoveableIndividualGroup;\n    public refTargets: Array<HTMLElement | SVGElement | string | undefined | null> = [];\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    public render() {\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\n\n        if (!moveableContructor.defaultStyled) {\n            moveableContructor.makeStyled();\n        }\n        const {\n            ables: userAbles,\n            props: userProps,\n            ...props\n        } = this.props;\n        const refTargets = this._updateRefs(true);\n        const elementTargets = getElementTargets(refTargets, this.selectorMap);\n\n        const isGroup = elementTargets.length > 1;\n        const totalAbles = moveableContructor.getTotalAbles();\n        const ables = [\n            ...totalAbles,\n            ...(userAbles as any || []),\n        ];\n        const nextProps = {\n            ...props,\n            ...(userProps || {}),\n            ables,\n            cssStyled: moveableContructor.defaultStyled,\n            customStyledMap: moveableContructor.customStyledMap,\n        };\n\n        if (isGroup) {\n            if (props.individualGroupable) {\n                return <MoveableIndividualGroup key=\"individual-group\" ref={ref(this, \"moveable\")}\n                    {...nextProps}\n                    target={null}\n                    targets={elementTargets} />;\n            }\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={null}\n                targets={elementTargets}  />;\n        } else {\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={elementTargets[0]} />;\n        }\n    }\n    public componentDidMount() {\n        this._updateRefs();\n    }\n    public componentDidUpdate() {\n        this._updateRefs();\n    }\n    public componentWillUnmount() {\n        this.selectorMap = {};\n        this.refTargets = [];\n    }\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this.moveable;\n    }\n    private _updateRefs(isRender?: boolean) {\n        const prevRefTargets = this.refTargets;\n        const nextRefTargets = getRefTargets((this.props.target || this.props.targets) as any);\n        const isBrowser = typeof document !== \"undefined\";\n\n        let isUpdate = (prevRefTargets.length !== nextRefTargets.length) || prevRefTargets.some((target, i) => {\n            const nextTarget = nextRefTargets[i];\n\n            if (!target && !nextTarget) {\n                return false;\n            } else if (target !== nextTarget) {\n                return true;\n            }\n            return false;\n        });\n        const selectorMap = this.selectorMap;\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n\n        this.refTargets.forEach(target => {\n            if (isString(target)) {\n                const selectorTarget = selectorMap[target];\n\n                if (selectorTarget) {\n                    nextSelectorMap[target] = selectorMap[target];\n                } else if (isBrowser) {\n                    isUpdate = true;\n                    nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n                }\n            }\n        });\n\n        this.refTargets = nextRefTargets;\n        this.selectorMap = nextSelectorMap;\n\n        if (!isRender && isUpdate) {\n            this.forceUpdate();\n        }\n        return nextRefTargets;\n    }\n}\nexport interface InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & IndividualGroupableProps & T>,\n    MoveableInterface {\n    setState(state: any, callback?: () => any): any;\n    forceUpdate(callback?: () => any): any;\n}\n","import { MoveableProps, Able } from \"./types\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\n}\n","import { Able } from \"./types\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport function makeMoveable<T = {}>(\n    ables: Array<Able<T>>): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\n    return class Moveable extends InitialMoveable<T> {\n        public static defaultAbles = ables;\n    };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}