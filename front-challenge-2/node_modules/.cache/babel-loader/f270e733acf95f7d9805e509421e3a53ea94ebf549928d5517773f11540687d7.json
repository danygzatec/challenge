{"ast":null,"code":"var _jsxFileName = \"/Users/danygarza/Desktop/challenge/front-challenge-2/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Moveable from \"react-moveable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [moveableComponents, setMoveableComponents] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const addMoveable = () => {\n    // Create a new moveable component and add it to the array\n    const COLORS = [\"red\", \"blue\", \"yellow\", \"green\", \"purple\"];\n    setMoveableComponents([...moveableComponents, {\n      id: Math.floor(Math.random() * Date.now()),\n      top: 0,\n      left: 0,\n      width: 100,\n      height: 100,\n      color: COLORS[Math.floor(Math.random() * COLORS.length)],\n      updateEnd: true\n    }]);\n  };\n  const updateMoveable = function (id, newComponent) {\n    let updateEnd = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const updatedMoveables = moveableComponents.map(moveable => {\n      if (moveable.id === id) {\n        return {\n          id,\n          ...newComponent,\n          updateEnd\n        };\n      }\n      return moveable;\n    });\n    setMoveableComponents(updatedMoveables);\n  };\n  const handleResizeStart = (index, e) => {\n    console.log(\"e\", e.direction);\n    // Check if the resize is coming from the left handle\n    const [handlePosX, handlePosY] = e.direction;\n    // 0 => center\n    // -1 => top or left\n    // 1 => bottom or right\n\n    // -1, -1\n    // -1, 0\n    // -1, 1\n    if (handlePosX === -1) {\n      console.log(\"width\", moveableComponents, e);\n      // Save the initial left and width values of the moveable component\n      const initialLeft = e.left;\n      const initialWidth = e.width;\n\n      // Set up the onResize event handler to update the left value based on the change in width\n      e.setOrigin([\"%\", \"%\"]).on(\"resize\", _ref => {\n        let {\n          width\n        } = _ref;\n        const newLeft = initialLeft + (initialWidth - width);\n        updateMoveable(e.target.id, {\n          left: newLeft,\n          width\n        }, true);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      height: \"100vh\",\n      width: \"100vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMoveable,\n      children: \"Add Moveable1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"parent\",\n      style: {\n        position: \"relative\",\n        background: \"black\",\n        height: \"80vh\",\n        width: \"80vw\"\n      },\n      children: moveableComponents.map((item, index) => /*#__PURE__*/_createElement(Component, {\n        ...item,\n        key: index,\n        updateMoveable: updateMoveable,\n        handleResizeStart: handleResizeStart,\n        setSelected: setSelected,\n        isSelected: selected === item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"X2hn9kZdJVqaWk4Vc5Jh02ip/FQ=\");\n_c = App;\nexport default App;\nconst Component = _ref2 => {\n  _s2();\n  let {\n    updateMoveable,\n    top,\n    left,\n    width,\n    height,\n    index,\n    color,\n    id,\n    setSelected,\n    isSelected = false,\n    updateEnd\n  } = _ref2;\n  const [photo, setPhoto] = useState(\"\");\n  const ref = useRef();\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/photos\").then(response => response.json()).then(data => {\n      const randomIdx = Math.floor(Math.random() * data.length);\n      setPhoto(data[randomIdx].url);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const [nodoReferencia, setNodoReferencia] = useState({\n    top,\n    left,\n    width,\n    height,\n    index,\n    color,\n    id\n  });\n  let parent = document.getElementById(\"parent\");\n  let parentBounds = parent === null || parent === void 0 ? void 0 : parent.getBoundingClientRect();\n  const onResize = async e => {\n    // ACTUALIZAR ALTO Y ANCHO\n    let newWidth = e.width;\n    let newHeight = e.height;\n    const positionMaxTop = top + newHeight;\n    const positionMaxLeft = left + newWidth;\n    if (positionMaxTop > (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.height)) newHeight = (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.height) - top;\n    if (positionMaxLeft > (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.width)) newWidth = (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.width) - left;\n    updateMoveable(id, {\n      top,\n      left,\n      width: newWidth,\n      height: newHeight,\n      color,\n      updateEnd\n    });\n\n    // ACTUALIZAR NODO REFERENCIA\n    const beforeTranslate = e.drag.beforeTranslate;\n    ref.current.style.width = `${e.width}px`;\n    ref.current.style.height = `${e.height}px`;\n    let translateX = beforeTranslate[0];\n    let translateY = beforeTranslate[1];\n    ref.current.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    setNodoReferencia({\n      ...nodoReferencia,\n      translateX,\n      translateY,\n      top: top + translateY < 0 ? 0 : top + translateY,\n      left: left + translateX < 0 ? 0 : left + translateX\n    });\n  };\n  const onResizeEnd = async e => {\n    var _e$lastEvent, _e$lastEvent2;\n    let newWidth = (_e$lastEvent = e.lastEvent) === null || _e$lastEvent === void 0 ? void 0 : _e$lastEvent.width;\n    let newHeight = (_e$lastEvent2 = e.lastEvent) === null || _e$lastEvent2 === void 0 ? void 0 : _e$lastEvent2.height;\n    const positionMaxTop = top + newHeight;\n    const positionMaxLeft = left + newWidth;\n    if (positionMaxTop > (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.height)) newHeight = (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.height) - top;\n    if (positionMaxLeft > (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.width)) newWidth = (parentBounds === null || parentBounds === void 0 ? void 0 : parentBounds.width) - left;\n    const {\n      lastEvent\n    } = e;\n    const {\n      drag\n    } = lastEvent;\n    const {\n      beforeTranslate\n    } = drag;\n    const absoluteTop = top + beforeTranslate[1];\n    const absoluteLeft = left + beforeTranslate[0];\n    updateMoveable(id, {\n      top: absoluteTop,\n      left: absoluteLeft,\n      width: newWidth,\n      height: newHeight,\n      color\n    }, true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      style: {\n        position: \"absolute\",\n        top: `${nodoReferencia.top}px`,\n        left: `${nodoReferencia.left}px`,\n        width: `${nodoReferencia.width}px`,\n        height: `${nodoReferencia.height}px`,\n        background: color,\n        border: isSelected ? \"1px solid black\" : \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      onClick: () => setSelected(id),\n      children: index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Moveable, {\n      target: isSelected && ref.current,\n      draggable: true,\n      resizable: true,\n      throttleDrag: 1,\n      onDrag: e => {\n        updateMoveable(id, {\n          top: e.top,\n          left: e.left,\n          width,\n          height,\n          color\n        });\n      },\n      onResize: onResize,\n      onResizeEnd: onResizeEnd,\n      keepRatio: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s2(Component, \"2SSOgOTcG25a+2c/jm4mvvlYRzI=\");\n_c2 = Component;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Component\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Moveable","App","moveableComponents","setMoveableComponents","selected","setSelected","addMoveable","COLORS","id","Math","floor","random","Date","now","top","left","width","height","color","length","updateEnd","updateMoveable","newComponent","updatedMoveables","map","moveable","handleResizeStart","index","e","console","log","direction","handlePosX","handlePosY","initialLeft","initialWidth","setOrigin","on","newLeft","target","position","background","item","Component","isSelected","photo","setPhoto","ref","fetch","then","response","json","data","randomIdx","url","catch","error","nodoReferencia","setNodoReferencia","parent","document","getElementById","parentBounds","getBoundingClientRect","onResize","newWidth","newHeight","positionMaxTop","positionMaxLeft","beforeTranslate","drag","current","style","translateX","translateY","transform","onResizeEnd","lastEvent","absoluteTop","absoluteLeft","border","display","alignItems","justifyContent"],"sources":["/Users/danygarza/Desktop/challenge/front-challenge-2/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Moveable from \"react-moveable\";\n\nconst App = () => {\n  const [moveableComponents, setMoveableComponents] = useState([]);\n  const [selected, setSelected] = useState(null);\n\n  const addMoveable = () => {\n    // Create a new moveable component and add it to the array\n    const COLORS = [\"red\", \"blue\", \"yellow\", \"green\", \"purple\"];\n\n    setMoveableComponents([\n      ...moveableComponents,\n      {\n        id: Math.floor(Math.random() * Date.now()),\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100,\n        color: COLORS[Math.floor(Math.random() * COLORS.length)],\n        updateEnd: true\n      },\n    ]);\n  };\n\n  const updateMoveable = (id, newComponent, updateEnd = false) => {\n    const updatedMoveables = moveableComponents.map((moveable) => {\n      if (moveable.id === id) {\n        return { id, ...newComponent, updateEnd };\n      }\n      return moveable;\n    });\n    setMoveableComponents(updatedMoveables);\n  };\n\n  const handleResizeStart = (index, e) => {\n    console.log(\"e\", e.direction);\n    // Check if the resize is coming from the left handle\n    const [handlePosX, handlePosY] = e.direction;\n    // 0 => center\n    // -1 => top or left\n    // 1 => bottom or right\n\n    // -1, -1\n    // -1, 0\n    // -1, 1\n    if (handlePosX === -1) {\n      console.log(\"width\", moveableComponents, e);\n      // Save the initial left and width values of the moveable component\n      const initialLeft = e.left;\n      const initialWidth = e.width;\n\n      // Set up the onResize event handler to update the left value based on the change in width\n      e.setOrigin([\"%\", \"%\"]).on(\"resize\", ({ width }) => {\n        const newLeft = initialLeft + (initialWidth - width);\n        updateMoveable(e.target.id, { left: newLeft, width }, true);\n      });\n    }\n  };\n\n  return (\n    <main style={{ height : \"100vh\", width: \"100vw\" }}>\n      <button onClick={addMoveable}>Add Moveable1</button>\n      <div\n        id=\"parent\"\n        style={{\n          position: \"relative\",\n          background: \"black\",\n          height: \"80vh\",\n          width: \"80vw\",\n        }}\n      >\n        {moveableComponents.map((item, index) => (\n          <Component\n            {...item}\n            key={index}\n            updateMoveable={updateMoveable}\n            handleResizeStart={handleResizeStart}\n            setSelected={setSelected}\n            isSelected={selected === item.id}\n          />\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n\nconst Component = ({\n  updateMoveable,\n  top,\n  left,\n  width,\n  height,\n  index,\n  color,\n  id,\n  setSelected,\n  isSelected = false,\n  updateEnd,\n}) => {\n  const[photo, setPhoto] = useState(\"\");\n  const ref = useRef(); \n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/photos\")\n    .then((response) => response.json())\n    .then((data) => {\n      const randomIdx = Math.floor(Math.random() * data.length);\n      setPhoto(data[randomIdx].url);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }, []);\n\n  const [nodoReferencia, setNodoReferencia] = useState({\n    top,\n    left,\n    width,\n    height,\n    index,\n    color,\n    id,\n  });\n\n  let parent = document.getElementById(\"parent\");\n  let parentBounds = parent?.getBoundingClientRect();\n  \n  const onResize = async (e) => {\n    // ACTUALIZAR ALTO Y ANCHO\n    let newWidth = e.width;\n    let newHeight = e.height;\n\n    const positionMaxTop = top + newHeight;\n    const positionMaxLeft = left + newWidth;\n\n    if (positionMaxTop > parentBounds?.height)\n      newHeight = parentBounds?.height - top;\n    if (positionMaxLeft > parentBounds?.width)\n      newWidth = parentBounds?.width - left;\n\n    updateMoveable(id, {\n      top,\n      left,\n      width: newWidth,\n      height: newHeight,\n      color,\n      updateEnd,\n    });\n\n    // ACTUALIZAR NODO REFERENCIA\n    const beforeTranslate = e.drag.beforeTranslate;\n\n    ref.current.style.width = `${e.width}px`;\n    ref.current.style.height = `${e.height}px`;\n\n    let translateX = beforeTranslate[0];\n    let translateY = beforeTranslate[1];\n\n    ref.current.style.transform = `translate(${translateX}px, ${translateY}px)`;\n\n    setNodoReferencia({\n      ...nodoReferencia,\n      translateX,\n      translateY,\n      top: top + translateY < 0 ? 0 : top + translateY,\n      left: left + translateX < 0 ? 0 : left + translateX,\n    });\n  };\n\n  const onResizeEnd = async (e) => {\n    let newWidth = e.lastEvent?.width;\n    let newHeight = e.lastEvent?.height;\n\n    const positionMaxTop = top + newHeight;\n    const positionMaxLeft = left + newWidth;\n\n    if (positionMaxTop > parentBounds?.height)\n      newHeight = parentBounds?.height - top;\n    if (positionMaxLeft > parentBounds?.width)\n      newWidth = parentBounds?.width - left;\n\n    const { lastEvent } = e;\n    const { drag } = lastEvent;\n    const { beforeTranslate } = drag;\n\n    const absoluteTop = top + beforeTranslate[1];\n    const absoluteLeft = left + beforeTranslate[0];\n\n    updateMoveable(\n      id,\n      {\n        top: absoluteTop,\n        left: absoluteLeft,\n        width: newWidth,\n        height: newHeight,\n        color,\n      },\n      true\n    );\n  };\n\n  return (\n    <>\n    <div\n      ref={ref}\n      style={{\n        position: \"absolute\",\n        top: `${nodoReferencia.top}px`,\n        left: `${nodoReferencia.left}px`,\n        width: `${nodoReferencia.width}px`,\n        height: `${nodoReferencia.height}px`,\n        background: color,\n        border: isSelected ? \"1px solid black\" : \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n      onClick={() => setSelected(id)}\n    >\n      {index}\n    </div>\n    <Moveable\n      target={isSelected && ref.current}\n      draggable\n      resizable\n      throttleDrag={1}\n      onDrag={(e) => {\n        updateMoveable(id, {\n          top: e.top,\n          left: e.left,\n          width,\n          height,\n          color,\n        });\n      }}\n      onResize={onResize}\n      onResizeEnd={onResizeEnd}\n      keepRatio={false}\n\n    />\n  </>\n  );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}